#pragma checksum "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "516bd25cdd67d47c7ce170db7e7ab473f3d46b94"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_eSyaCustomer_Views_CustomerAttributes_V_274_00), @"mvc.1.0.view", @"/Areas/eSyaCustomer/Views/CustomerAttributes/V_274_00.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/eSyaCustomer/Views/CustomerAttributes/V_274_00.cshtml", typeof(AspNetCore.Areas_eSyaCustomer_Views_CustomerAttributes_V_274_00))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"516bd25cdd67d47c7ce170db7e7ab473f3d46b94", @"/Areas/eSyaCustomer/Views/CustomerAttributes/V_274_00.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"23ac09be4bcfaa7f9829a01d1a134874eaae1f3b", @"/Areas/eSyaCustomer/Views/_ViewImports.cshtml")]
    public class Areas_eSyaCustomer_Views_CustomerAttributes_V_274_00 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("selectpicker"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-live-search", new global::Microsoft.AspNetCore.Html.HtmlString("true"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("cboPatientCategory"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Select"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onchange", new global::Microsoft.AspNetCore.Html.HtmlString("fnGridLoadPatientCategory()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "C", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "S", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("cboServiceGroup"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(46, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(82, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 5 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
  
    ViewData["Title"] = "V_274_00";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#line 9 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
  
    var userFormRole = (eSyaEnterprise_UI.Models.DO_UserFormRole)ViewBag.UserFormRole;

#line default
#line hidden
            BeginContext(270, 46, true);
            WriteLiteral("<script>\r\n    var _userFormRole = JSON.parse(\'");
            EndContext();
            BeginContext(317, 38, false);
#line 13 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
                               Write(Html.Raw(Json.Serialize(userFormRole)));

#line default
#line hidden
            EndContext();
            BeginContext(355, 58, true);
            WriteLiteral("\');\r\n\r\n     var localization = {\r\n         ServiceClass: \'");
            EndContext();
            BeginContext(414, 25, false);
#line 16 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
                   Write(Localizer["ServiceClass"]);

#line default
#line hidden
            EndContext();
            BeginContext(439, 28, true);
            WriteLiteral("\',\r\n         DiscountRule: \'");
            EndContext();
            BeginContext(468, 25, false);
#line 17 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
                   Write(Localizer["DiscountRule"]);

#line default
#line hidden
            EndContext();
            BeginContext(493, 24, true);
            WriteLiteral("\',\r\n         Discount: \'");
            EndContext();
            BeginContext(518, 21, false);
#line 18 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
               Write(Localizer["Discount"]);

#line default
#line hidden
            EndContext();
            BeginContext(539, 22, true);
            WriteLiteral("\',\r\n         Status: \'");
            EndContext();
            BeginContext(562, 19, false);
#line 19 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
             Write(Localizer["Status"]);

#line default
#line hidden
            EndContext();
            BeginContext(581, 30, true);
            WriteLiteral("\',\r\n         ServiceClassId: \'");
            EndContext();
            BeginContext(612, 27, false);
#line 20 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
                     Write(Localizer["ServiceClassId"]);

#line default
#line hidden
            EndContext();
            BeginContext(639, 27, true);
            WriteLiteral("\',\r\n         ServiceCode: \'");
            EndContext();
            BeginContext(667, 24, false);
#line 21 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
                  Write(Localizer["ServiceCode"]);

#line default
#line hidden
            EndContext();
            BeginContext(691, 34, true);
            WriteLiteral("\',\r\n         ServiceDescription: \'");
            EndContext();
            BeginContext(726, 31, false);
#line 22 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
                         Write(Localizer["ServiceDescription"]);

#line default
#line hidden
            EndContext();
            BeginContext(757, 28, true);
            WriteLiteral("\',\r\n         DiscountRule: \'");
            EndContext();
            BeginContext(786, 25, false);
#line 23 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
                   Write(Localizer["DiscountRule"]);

#line default
#line hidden
            EndContext();
            BeginContext(811, 24, true);
            WriteLiteral("\',\r\n         Discount: \'");
            EndContext();
            BeginContext(836, 21, false);
#line 24 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
               Write(Localizer["Discount"]);

#line default
#line hidden
            EndContext();
            BeginContext(857, 165, true);
            WriteLiteral("\',\r\n    };\r\n\r\n</script>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-lg-3 col-md-3 col-sm-6\">\r\n        <div class=\"form-group\">\r\n            <label class=\"lable-color\">");
            EndContext();
            BeginContext(1023, 24, false);
#line 32 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
                                  Write(Localizer["BusinessKey"]);

#line default
#line hidden
            EndContext();
            BeginContext(1047, 23, true);
            WriteLiteral(" </label>\r\n            ");
            EndContext();
            BeginContext(1071, 51, false);
#line 33 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
       Write(await Component.InvokeAsync("UserBusinessLocation"));

#line default
#line hidden
            EndContext();
            BeginContext(1122, 149, true);
            WriteLiteral("\r\n        </div>\r\n    </div>\r\n    <div class=\"col-lg-3 col-md-3 col-sm-6\">\r\n        <div class=\"form-group\">\r\n            <label class=\"lable-color\">");
            EndContext();
            BeginContext(1272, 28, false);
#line 38 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
                                  Write(Localizer["PatientCategory"]);

#line default
#line hidden
            EndContext();
            BeginContext(1300, 23, true);
            WriteLiteral(" </label>\r\n            ");
            EndContext();
            BeginContext(1323, 177, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "516bd25cdd67d47c7ce170db7e7ab473f3d46b9413239", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
#line 39 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = ViewBag.PatientCategory;

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1500, 99, true);
            WriteLiteral("\r\n        </div>\r\n    </div>\r\n    <div class=\"col-lg-1 col-md-2 col-sm-6 padtop0\">\r\n        <label>");
            EndContext();
            BeginContext(1600, 24, false);
#line 43 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
          Write(Localizer["Discountfor"]);

#line default
#line hidden
            EndContext();
            BeginContext(1624, 232, true);
            WriteLiteral(" </label>\r\n        <div class=\"radio\" style=\"margin:0px;\">\r\n            <label style=\"font-size:16px !important;color:#797172 !important\">\r\n                <input type=\"radio\" name=\"rdoDiscountFor\" id=\"rdoIsOutPatient\" value=\"O\" /> ");
            EndContext();
            BeginContext(1857, 15, false);
#line 46 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
                                                                                       Write(Localizer["OP"]);

#line default
#line hidden
            EndContext();
            BeginContext(1872, 327, true);
            WriteLiteral(@"
            </label>
        </div>
    </div>
    <div class=""col-lg-1 col-md-2 col-sm-6 padtop20"">
        <div class=""radio"" style=""margin:0px;"">
            <label style=""font-size:16px !important;color:#797172 !important"">
                <input type=""radio"" name=""rdoDiscountFor"" id=""rdoIsInPatient"" value=""I"" /> ");
            EndContext();
            BeginContext(2200, 15, false);
#line 53 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
                                                                                      Write(Localizer["IP"]);

#line default
#line hidden
            EndContext();
            BeginContext(2215, 229, true);
            WriteLiteral("\r\n            </label>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-lg-4 col-md-2 col-sm-6\">\r\n    </div>\r\n    <div class=\"col-lg-3 col-md-3 col-sm-6\">\r\n        <div class=\"form-group\">\r\n            <label class=\"lable-color\">");
            EndContext();
            BeginContext(2445, 23, false);
#line 61 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
                                  Write(Localizer["Discountat"]);

#line default
#line hidden
            EndContext();
            BeginContext(2468, 152, true);
            WriteLiteral(" </label>\r\n            <select id=\"cboDiscountAt\" class=\"selectpicker\" data-live-search=\"true\" onchange=\"fnGridLoadPatientCategory()\">\r\n                ");
            EndContext();
            BeginContext(2620, 40, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "516bd25cdd67d47c7ce170db7e7ab473f3d46b9418117", async() => {
                BeginContext(2638, 13, true);
                WriteLiteral("Service Class");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2660, 18, true);
            WriteLiteral("\r\n                ");
            EndContext();
            BeginContext(2678, 39, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "516bd25cdd67d47c7ce170db7e7ab473f3d46b9419519", async() => {
                BeginContext(2696, 12, true);
                WriteLiteral("Service Code");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2717, 172, true);
            WriteLiteral("\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-lg-3 col-md-3 col-sm-6\">\r\n        <div class=\"form-group\">\r\n            <label class=\"lable-color\">");
            EndContext();
            BeginContext(2890, 25, false);
#line 70 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
                                  Write(Localizer["ServiceGroup"]);

#line default
#line hidden
            EndContext();
            BeginContext(2915, 23, true);
            WriteLiteral(" </label>\r\n            ");
            EndContext();
            BeginContext(2938, 171, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "516bd25cdd67d47c7ce170db7e7ab473f3d46b9421548", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
#line 71 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = ViewBag.ServiceGroup;

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3109, 553, true);
            WriteLiteral(@"
        </div>
    </div>
    <div class=""col-lg-6 col-md-2 col-sm-6"">
    </div>
    <div class=""col-lg-12 col-md-12 col-sm-12"">
        <table id=""jqgPatientCategoryDiscount""></table>
        <div id=""jqpPatientCategoryDiscount""></div>
    </div>
    <div class=""col-lg-12 col-md-12 col-sm-12 text-center"">
        <hr />
        <button type=""button"" class=""mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent primary-button mr-10"" id=""btnSavePatientCategoryDisc"" onclick=""fnSavePatientCategoryDiscount()"">");
            EndContext();
            BeginContext(3663, 17, false);
#line 82 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
                                                                                                                                                                                                                    Write(Localizer["Save"]);

#line default
#line hidden
            EndContext();
            BeginContext(3680, 130, true);
            WriteLiteral(" </button>\r\n        <button type=\"button\" class=\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect  cancel-button\">");
            EndContext();
            BeginContext(3811, 19, false);
#line 83 "D:\eSya Project\Solution\eSyaEnterprise_UI\tags\eSyaEnterprise_UI_v1\eSyaEnterprise_UI\Areas\eSyaCustomer\Views\CustomerAttributes\V_274_00.cshtml"
                                                                                                                 Write(Localizer["Cancel"]);

#line default
#line hidden
            EndContext();
            BeginContext(3830, 24550, true);
            WriteLiteral(@" </button>
    </div>
</div>
<script>
    var data = new Array();
    var newrowid;
    var newrowids;

    $(function () {

        $(""#rdoIsOutPatient"").prop({ 'checked': true });
        fnGridLoadPatientCategoryDiscClassWise();
        $('[name=""rdoDiscountFor""]').change(function () {
            fnGridLoadPatientCategory();
        });
    })
    function fnBusinessLocation_onChange() {

        fnGridLoadPatientCategory();
    }
    function fnGridLoadPatientCategory() {

        if (IsStringNullorEmpty($(""#cboBusinessLocation"").val()) || IsStringNullorEmpty($(""#cboPatientCategory"").val())
            || IsStringNullorEmpty($(""#cboDiscountAt"").val()) || IsStringNullorEmpty($(""#cboServiceGroup"").val())
            || (!$('#rdoIsOutPatient').prop('checked') && !$('#rdoIsInPatient').prop('checked')))
            return;

        data = null;
        if ($(""#cboDiscountAt"").val() == ""C"")
            fnGridLoadPatientCategoryDiscClassWise();
        else {

            //fnGri");
            WriteLiteral(@"dLoadPatientCategoryDiscServiceWise();
            //fnGridDataPatientCategoryDiscServiceWise();
            fnGridLoadPatientCategoryDiscServiceWise();
        }
    }

    function fnGridLoadPatientCategoryDiscClassWise() {

        var paramGU = ""?businessKey="" + (!IsStringNullorEmpty($(""#cboBusinessLocation"").val) ? $(""#cboBusinessLocation"").val() : 0) +
            ""&patientCategory="" + (!IsStringNullorEmpty($(""#cboPatientCategory"").val) ? $(""#cboPatientCategory"").val() : 0) +
            ""&serviceFor="" + ($('#rdoIsOutPatient').prop('checked') ? ""O"" : $('#rdoIsInPatient').prop('checked') ? ""I"" : null) +
            ""&serviceGroupId="" + (!IsStringNullorEmpty($(""#cboServiceGroup"").val) ? $(""#cboServiceGroup"").val() : 0);

        $('#jqgPatientCategoryDiscount').jqGrid('GridUnload');
        $(""#jqgPatientCategoryDiscount"").jqGrid({
            url: getBaseURL() + '/CustomerAttributes/GetPatientCatDiscClassByBkPtCatSfSg' + paramGU,
            mtype: 'Post',
            datatype: 'json',
");
            WriteLiteral(@"            ajaxGridOptions: { contentType: 'application/json; charset=utf-8' },
            async: false,
            jsonReader: { repeatitems: false, root: ""rows"", page: ""page"", total: ""total"", records: ""records"" },
            colNames: ["""", localization.ServiceClass, localization.DiscountRule, localization.Discount, localization.Status],
            colModel: [
                { name: ""ServiceClass"", width: 10, editable: false, hidden: true, align: 'left', resizable: true },
                { name: ""ServiceClassDesc"", width: 120, editable: false, align: 'left', hidden: false },
                { name: ""DiscountRule"", width: 25, editable: true, align: 'left', hidden: false, edittype: ""select"", formatter: 'select', editoptions: { value: ""F: Fixed;E: Entered;V: Varriable"" } },
                { name: ""DiscountPercent"", width: 20, editable: true, align: 'right', resizable: false, editoption: { 'text-align': 'right', maxlength: 5 }, sorttype: ""float"", formatter: ""number"" },
                { name: ""A");
            WriteLiteral(@"ctiveStatus"", editable: true, width: 20, edittype: ""checkbox"", align: 'center', formatter: 'checkbox', editoptions: { value: ""true:false"" } }
            ],
            rowNum: 10,
            rowList: [10, 20, 50, 100],
            loadonce: true,
            pager: ""#jqpPatientCategoryDiscount"",
            viewrecords: true,
            gridview: true,
            rownumbers: true,
            height: 'auto',
            align: ""left"",
            width: 'auto',
            autowidth: true,
            shrinkToFit: true,
            cellEdit: true,
            cellsubmit: 'clientArray',
            onSelectRow: function (id) {
                if (id) { $('#jqgPatientCategoryDiscount').jqGrid('editRow', id, true); }
            },
        }).jqGrid('navGrid', '#jqpPatientCategoryDiscount', { add: false, edit: false, search: false, del: false, refresh: false });

        fnAddGridSerialNoHeading();

        $(""#jqgPatientCategoryDiscount"").sortGrid('ServiceClassDesc', false, 'asc');
 ");
            WriteLiteral(@"   }

    function fnGridLoadPatientCategoryDiscServiceWise_Old() {

        $('#jqgPatientCategoryDiscount').jqGrid('GridUnload');
        $(""#jqgPatientCategoryDiscount"").jqGrid({
            url: getBaseURL() + '/CustomerAttributes/GetServiceClassBySrGroupId?serviceGroupId=' + (!IsStringNullorEmpty($(""#cboServiceGroup"").val) ? $(""#cboServiceGroup"").val() : 0),
            datatype: ""json"",
            contenttype: ""application/json; charset-utf-8"",
            mtype: 'GET',
            jsonReader: { repeatitems: false, root: ""rows"", page: ""page"", total: ""total"", records: ""records"" },
            colNames: [localization.ServiceClassId, localization.ServiceClass],
            colModel: [
                { name: ""ServiceClassId"", width: 80, editable: false, align: 'left', hidden: true },
                { name: ""ServiceClassDesc"", width: 300, editable: false, align: 'left', hidden: false }
            ],
            rowNum: 10,
            loadonce: true,
            rowList: [10, 20, 50, 10");
            WriteLiteral(@"0],
            pager: ""#jqpPatientCategoryDiscount"",
            viewrecords: true,
            gridview: true,
            rownumbers: true,
            height: 'auto',
            align: ""left"",
            width: 'auto',
            autowidth: true,
            onSelectRow: function (rowid) {

                if (newrowid != undefined) {
                    $(""#jqgPatientCategoryDiscount #"" + newrowid + "":first"").css({ background: '' });
                }
                newrowid = rowid;
            },
            loadComplete: function (data) {

                //SetGridControlByAction(""gvProcessRule"");
                //$(""#jqgPatientCategoryDiscount"").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');

            },
            subGrid: true,
            subGridRowExpanded: function (subId, rowId) {
                var selArray = new Array();
                //var subRowId;
                function returnData() {

                    var serviceClassId = $(");
            WriteLiteral(@"""#jqgPatientCategoryDiscount"").getRowData(rowId).ServiceClassId;
                    for (var i = 0; i < data.length; i++) {
                        if (data[i].ServiceClass == serviceClassId) {
                            selArray.push(data[i]);
                        }
                    }
                    return selArray;
                }
                var subData = {
                    page: 1,
                    rows: returnData(),
                    records: selArray.length,
                };
                var subGridTableId;
                var subGridDivId;
                var subGridWidth = $(""#jqgPatientCategoryDiscount"").width() - 51;
                subGridTableId = subId + ""_t"";
                subGridIdGlobal = subGridTableId;
                subGridDivId = subId + ""_d"";
                $(""#"" + subId).html(""<table id='"" + subGridTableId + ""'></table><div id='"" + subGridDivId + ""'></div>"");
                $(""#"" + subGridTableId).jqGrid({

                    c");
            WriteLiteral(@"olNames: [""Service Class Id"", ""Service Code"", ""Service Description"", ""Discount Rule"", ""Discount"", ""Status""],
                    colModel: [
                        { name: ""ServiceClass"", hidden: true },
                        { name: ""ServiceCode"", width: 30, editable: false, hidden: true, align: 'left', resizable: true },
                        { name: ""ServiceDesc"", width: 70, editable: false, align: 'left', hidden: false },
                        { name: ""DiscountRule"", width: 20, editable: true, align: 'left', hidden: false, edittype: ""select"", formatter: 'select', editoptions: { value: ""F: Fixed;E: Entered;V: Varriable"" } },
                        { name: ""DiscountPercent"", width: 20, editable: true, align: 'right', resizable: false, editoption: { 'text-align': 'right', maxlength: 5 }, sorttype: ""float"", formatter: ""number"" },
                        { name: ""ActiveStatus"", editable: true, width: 20, edittype: ""checkbox"", align: 'center', formatter: 'checkbox', editoptions: { value: ""true:fa");
            WriteLiteral(@"lse"" } }
                    ],
                    pager: ""#"" + subGridDivId,
                    rowNum: 20,
                    rowList: [20, 40],
                    viewrecords: true,
                    recordtext: ""Showing records {0} to {1} of {2}"",
                    gridview: true,
                    rownumbers: true,
                    datatype: 'local',
                    height: 'auto',
                    width: subGridWidth,
                    cellEdit: true,
                    cellsubmit: 'clientArray',
                    onSelectRow: function (rowids) {
                        subRowId = rowids;

                        if (newrowids != undefined) {
                            $(""#"" + subGridTableId + "" #"" + newrowids).css({ background: '' });
                        }

                        $(""#"" + subGridTableId + "" #"" + rowids).css({ background: '#F9D953 url(""images/ui-bg_flat_55_fbec88_40x100.png"") 50% 50% repeat-x', color: '#000' });
                       ");
            WriteLiteral(@" newrowids = rowids;
                    },
                    loadComplete: function () {
                        //$(""#"" + subGridTableId).setGridParam({ datatype: 'local', data: returnData(), page: 1 }).trigger('reloadGrid');
                    },
                }).jqGrid('navGrid', '#' + subGridDivId, { add: false, edit: false, search: false, del: false, refresh: false });
                $(""#"" + subGridTableId)[0].addJSONData(subData);
                //SetSubGridControlByAction(subGridTableId);
            }

        }).jqGrid('navGrid', ""#jqgPatientCategoryDiscount"", { add: false, edit: false, search: false, del: false, refresh: false });
    }

    function fnGridDataPatientCategoryDiscServiceWise() {

        var paramGU = ""?businessKey="" + (!IsStringNullorEmpty($(""#cboBusinessLocation"").val) ? $(""#cboBusinessLocation"").val() : 0) +
            ""&patientCategory="" + (!IsStringNullorEmpty($(""#cboPatientCategory"").val) ? $(""#cboPatientCategory"").val() : 0) +
            ""&serviceFor");
            WriteLiteral(@"="" + ($('#rdoIsOutPatient').prop('checked') ? ""O"" : $('#rdoIsInPatient').prop('checked') ? ""I"" : null) +
            ""&serviceGroupId="" + (!IsStringNullorEmpty($(""#cboServiceGroup"").val) ? $(""#cboServiceGroup"").val() : 0);

        $.ajax({
            url: getBaseURL() + ""/CustomerAttributes/GetPatientCatDiscServiceByBkPtCatSfSc"" + paramGU,
            type: 'post',
            datatype: 'json',
            async: false,
            success: function (result) {
                console.log(result);
                data = result;
            },
            error: function (error) { alert(error.status) }
        });
    }

    function fnGridLoadPatientCategoryDiscServiceWise() {
        var paramGU = ""?businessKey="" + (!IsStringNullorEmpty($(""#cboBusinessLocation"").val) ? $(""#cboBusinessLocation"").val() : 0) +
            ""&patientCategory="" + (!IsStringNullorEmpty($(""#cboPatientCategory"").val) ? $(""#cboPatientCategory"").val() : 0) +
            ""&serviceFor="" + ($('#rdoIsOutPatient').prop('");
            WriteLiteral(@"checked') ? ""O"" : $('#rdoIsInPatient').prop('checked') ? ""I"" : null) +
            ""&serviceGroupId="" + (!IsStringNullorEmpty($(""#cboServiceGroup"").val) ? $(""#cboServiceGroup"").val() : 0);

        var prevCellVal = { cellId: undefined, value: undefined };

        $('#jqgPatientCategoryDiscount').jqGrid('GridUnload');
        $(""#jqgPatientCategoryDiscount"").jqGrid({
            url: getBaseURL() + '/CustomerAttributes/GetPatientCatDiscServiceByBkPtCatSfSc' + paramGU,
            mtype: 'Post',
            datatype: 'json',
            ajaxGridOptions: { contentType: 'application/json; charset=utf-8' },
            async: false,
            jsonReader: { repeatitems: false, root: ""rows"", page: ""page"", total: ""total"", records: ""records"" },
            colNames: [localization.ServiceClass, localization.ServiceClassId, localization.ServiceCode, localization.ServiceDescription, localization.DiscountRule, localization.Discount, localization.Status],
            colModel: [
                {
      ");
            WriteLiteral(@"              name: ""ServiceClassDesc"", width: 70, editable: false, align: 'left', hidden: false,
                    cellattr: function (rowId, val, rawObject, cm, rdata) {
                        var result;
                        var cellId = this.id + '_row_' + rawObject[""ServiceClass""] + $('#jqgPatientCategoryDiscount').getGridParam('page');

                        if (prevCellVal.cellId == cellId) {
                            result = ' style=""display: none"" rowspanid=""' + prevCellVal.cellId + '""';
                        }
                        else {

                            result = ' rowspan=""1"" id=""' + cellId + '""';
                            prevCellVal = { cellId: cellId, value: val };
                        }

                        return result;
                    }
                },
                { name: ""ServiceClass"", hidden: true },
                { name: ""ServiceCode"", width: 30, editable: false, hidden: true, align: 'left', resizable: true },
         ");
            WriteLiteral(@"       { name: ""ServiceDesc"", width: 70, editable: false, align: 'left', hidden: false },
                { name: ""DiscountRule"", width: 20, editable: true, align: 'left', hidden: false, edittype: ""select"", formatter: 'select', editoptions: { value: ""F: Fixed;E: Entered;V: Varriable"" } },
                { name: ""DiscountPercent"", width: 20, editable: true, align: 'right', resizable: false, editoption: { 'text-align': 'right', maxlength: 5 }, sorttype: ""float"", formatter: ""number"" },
                { name: ""ActiveStatus"", editable: true, width: 20, edittype: ""checkbox"", align: 'center', formatter: 'checkbox', editoptions: { value: ""true:false"" } }
            ],
            rowNum: 10,
            rowList: [10, 20, 50, 100],
            loadonce: true,
            pager: ""#jqpPatientCategoryDiscount"",
            viewrecords: true,
            gridview: true,
            rownumbers: true,
            height: 'auto',
            align: ""left"",
            width: 'auto',
            autowidth: t");
            WriteLiteral(@"rue,
            shrinkToFit: true,
            cellEdit: true,
            cellsubmit: 'clientArray',
            onSelectRow: function (id) {
                if (id) { $('#jqgPatientCategoryDiscount').jqGrid('editRow', id, true); }
            },
            gridComplete: function () {
                var grid = this;

                $('td[rowspan=""1""]', grid).each(function () {
                    var spans = $('td[rowspanid=""' + this.id + '""]', grid).length + 1;

                    if (spans > 1) {
                        $(this).attr('rowspan', spans);
                    }
                });
            },
        }).jqGrid('navGrid', '#jqpPatientCategoryDiscount', { add: false, edit: false, search: false, del: false, refresh: false });

        fnAddGridSerialNoHeading();
    }

    function fnSavePatientCategoryDiscount() {

        if ($(""#cboDiscountAt"").val() == ""C"")
            fnSavePatientCategoryServiceClassWise();
        else {

            fnSavePatientCategor");
            WriteLiteral(@"yServiceWise();
        }
    }

    function fnSavePatientCategoryServiceWise_Old() {

        $(""#"" + subGridIdGlobal).jqGrid('editCell', 0, 0, false);

        if (IsStringNullorEmpty($(""#cboBusinessLocation"").val()) || $(""#cboBusinessLocation"").val() == 0) {
            toastr.warning(""Please Select Business Location"");
            return false;
        }
        if (IsStringNullorEmpty($(""#cboPatientCategory"").val()) || $(""#cboPatientCategory"").val() == 0) {
            toastr.warning(""Please Select Patient Category"");
            return false;
        }
        if (IsStringNullorEmpty($(""#cboDiscountAt"").val()) || $(""#cboDiscountAt"").val() == 0) {
            toastr.warning(""Please Select Discount At"");
            return false;
        }
        if (IsStringNullorEmpty($(""#cboServiceGroup"").val()) || $(""#cboServiceGroup"").val() == 0) {
            toastr.warning(""Please Select Service Group"");
            return false;
        }

        if (!$(""#chkIsOutPatient"").parent().hasC");
            WriteLiteral(@"lass(""is-checked"") && !$(""#chkIsInPatient"").parent().hasClass(""is-checked"")) {
            toastr.warning(""Please Select Discount For"");
            return false;
        }

        $(""#btnSavePatientCategoryDisc"").attr(""disabled"", true);

        var obj = [];
        var gvT = $(""#"" + subGridIdGlobal).getRowData();
        for (var i = 0; i < gvT.length; ++i) {
            if (!IsStringNullorEmpty(gvT[i]['ServiceCode'])) {
                var pc_ds = {
                    BusinessKey: $('#cboBusinessLocation').val(),
                    PatientCategory: $('#cboPatientCategory').val(),
                    ServiceFor: $(""#chkIsOutPatient"").parent().hasClass(""is-checked"") ? ""O"" : ""I"",
                    ServiceCode: gvT[i]['ServiceCode'],
                    DiscountRule: gvT[i]['DiscountRule'].substr(0, 1),
                    DiscountPercent: gvT[i]['DiscountPercent'],
                    ActiveStatus: gvT[i]['ActiveStatus']
                }
                obj.push(pc_ds);
           ");
            WriteLiteral(@" }
        }
        $.ajax({
            url: getBaseURL() + '/CustomerAttributes/InsertOrUpdatePatientCatDiscService',
            type: 'POST',
            datatype: 'json',
            data: { pc_ds: obj },
            success: function (response) {
                if (response.Status === true) {

                    fnGridDataPatientCategoryDiscServiceWise();
                    setTimeout(function () {
                        $(""#jqgPatientCategoryDiscount"").collapseSubGridRow(newrowids);
                        $(""#jqgPatientCategoryDiscount"").expandSubGridRow(newrowids);
                    }, 1000);
                    toastr.success(response.Message);
                }
                else {
                    toastr.error(response.Message);
                }
                $(""#btnSavePatientCategoryDisc"").attr(""disabled"", false);
            },
            error: function (error) {
                toastr.error(error.statusText);
                $(""#btnSavePatientCategoryDi");
            WriteLiteral(@"sc"").attr(""disabled"", false);
            }
        });

        $(""#btnSavePatientCategoryDisc"").attr(""disabled"", false);
    }

    function fnSavePatientCategoryServiceWise() {

        $(""#jqgPatientCategoryDiscount"").jqGrid('editCell', 0, 0, false);

        if (IsStringNullorEmpty($(""#cboBusinessLocation"").val()) || $(""#cboBusinessLocation"").val() == 0) {
            toastr.warning(""Please Select Business Location"");
            return false;
        }
        if (IsStringNullorEmpty($(""#cboPatientCategory"").val()) || $(""#cboPatientCategory"").val() == 0) {
            toastr.warning(""Please Select Patient Category"");
            return false;
        }
        if (IsStringNullorEmpty($(""#cboDiscountAt"").val()) || $(""#cboDiscountAt"").val() == 0) {
            toastr.warning(""Please Select Discount At"");
            return false;
        }
        if (IsStringNullorEmpty($(""#cboServiceGroup"").val()) || $(""#cboServiceGroup"").val() == 0) {
            toastr.warning(""Please Select Se");
            WriteLiteral(@"rvice Group"");
            return false;
        }

        if (!$('#rdoIsOutPatient').prop('checked') && !$('#rdoIsInPatient').prop('checked')) {
            toastr.warning(""Please Select Discount For"");
            return false;
        }

        $(""#btnSavePatientCategoryDisc"").attr(""disabled"", true);

        var obj = [];
        var gvT = $(""#jqgPatientCategoryDiscount"").getRowData();
        for (var i = 0; i < gvT.length; ++i) {
            if (!IsStringNullorEmpty(gvT[i]['ServiceCode'])) {
                var pc_ds = {
                    BusinessKey: $('#cboBusinessLocation').val(),
                    PatientCategory: $('#cboPatientCategory').val(),
                    ServiceFor: $('#rdoIsOutPatient').prop('checked') ? ""O"" : ""I"",
                    ServiceCode: gvT[i]['ServiceCode'],
                    DiscountRule: gvT[i]['DiscountRule'].substr(0, 1),
                    DiscountPercent: gvT[i]['DiscountPercent'],
                    ActiveStatus: gvT[i]['ActiveStatus']
");
            WriteLiteral(@"                }
                obj.push(pc_ds);
            }
        }
        $.ajax({
            url: getBaseURL() + '/CustomerAttributes/InsertOrUpdatePatientCatDiscService',
            type: 'POST',
            datatype: 'json',
            data: { pc_ds: obj },
            success: function (response) {
                if (response.Status === true) {

                    fnGridRefreshPatientCategoryServiceClassWise();
                    toastr.success(response.Message);
                }
                else {
                    toastr.error(response.Message);
                }
                $(""#btnSavePatientCategoryDisc"").attr(""disabled"", false);
            },
            error: function (error) {
                toastr.error(error.statusText);
                $(""#btnSavePatientCategoryDisc"").attr(""disabled"", false);
            }
        });

        $(""#btnSavePatientCategoryDisc"").attr(""disabled"", false);
    }

    function fnSavePatientCategoryServiceClassWi");
            WriteLiteral(@"se() {

        $(""#jqgPatientCategoryDiscount"").jqGrid('editCell', 0, 0, false);

        if (IsStringNullorEmpty($(""#cboBusinessLocation"").val()) || $(""#cboBusinessLocation"").val() == 0) {
            toastr.warning(""Please Select Business Location"");
            return false;
        }
        if (IsStringNullorEmpty($(""#cboPatientCategory"").val()) || $(""#cboPatientCategory"").val() == 0) {
            toastr.warning(""Please Select Patient Category"");
            return false;
        }
        if (IsStringNullorEmpty($(""#cboDiscountAt"").val()) || $(""#cboDiscountAt"").val() == 0) {
            toastr.warning(""Please Select Discount At"");
            return false;
        }
        if (IsStringNullorEmpty($(""#cboServiceGroup"").val()) || $(""#cboServiceGroup"").val() == 0) {
            toastr.warning(""Please Select Service Group"");
            return false;
        }

        if (!$('#rdoIsOutPatient').prop('checked') && !$('#rdoIsInPatient').prop('checked')) {
            toastr.warning(""");
            WriteLiteral(@"Please Select Discount For"");
            return false;
        }

        $(""#btnSavePatientCategoryDisc"").attr(""disabled"", true);

        var obj = [];
        var gvT = $('#jqgPatientCategoryDiscount').jqGrid('getRowData');
        for (var i = 0; i < gvT.length; ++i) {
            if (!IsStringNullorEmpty(gvT[i]['ServiceClass'])) {
                var pc_dc = {
                    BusinessKey: $('#cboBusinessLocation').val(),
                    PatientCategory: $('#cboPatientCategory').val(),
                    ServiceFor: $('#rdoIsOutPatient').prop('checked') ? ""O"" : ""I"",
                    ServiceClass: gvT[i]['ServiceClass'],
                    DiscountRule: gvT[i]['DiscountRule'].substr(0, 1),
                    DiscountPercent: gvT[i]['DiscountPercent'],
                    ActiveStatus: gvT[i]['ActiveStatus']
                }
                obj.push(pc_dc);
            }
        }
        $.ajax({
            url: getBaseURL() + '/CustomerAttributes/InsertOrUpdatePatie");
            WriteLiteral(@"ntCatDiscClass',
            type: 'POST',
            datatype: 'json',
            data: { pc_dc: obj },
            success: function (response) {
                if (response.Status === true) {

                    fnGridRefreshPatientCategoryServiceClassWise();
                    toastr.success(response.Message);
                }
                else {
                    toastr.error(response.Message);
                }
                $(""#btnSavePatientCategoryDisc"").attr(""disabled"", false);
            },
            error: function (error) {
                toastr.error(error.statusText);
                $(""#btnSavePatientCategoryDisc"").attr(""disabled"", false);
            }
        });

        $(""#btnSavePatientCategoryDisc"").attr(""disabled"", false);
    }

    function fnGridRefreshPatientCategoryServiceClassWise() {
        $(""#jqgPatientCategoryDiscount"").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid')
    }

</script>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IViewLocalizer Localizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
