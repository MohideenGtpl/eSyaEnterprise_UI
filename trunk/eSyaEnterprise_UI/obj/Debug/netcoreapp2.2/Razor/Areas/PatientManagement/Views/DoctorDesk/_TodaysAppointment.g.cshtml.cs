#pragma checksum "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\PatientManagement\Views\DoctorDesk\_TodaysAppointment.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "196657263d4d24999a083777202476d55855f616"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_PatientManagement_Views_DoctorDesk__TodaysAppointment), @"mvc.1.0.view", @"/Areas/PatientManagement/Views/DoctorDesk/_TodaysAppointment.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/PatientManagement/Views/DoctorDesk/_TodaysAppointment.cshtml", typeof(AspNetCore.Areas_PatientManagement_Views_DoctorDesk__TodaysAppointment))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 4 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\PatientManagement\Views\DoctorDesk\_TodaysAppointment.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"196657263d4d24999a083777202476d55855f616", @"/Areas/PatientManagement/Views/DoctorDesk/_TodaysAppointment.cshtml")]
    public class Areas_PatientManagement_Views_DoctorDesk__TodaysAppointment : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(120, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(202, 187, true);
            WriteLiteral("\r\n<div class=\"card\">\r\n    <div class=\"card-body\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-2 col-md-4 col-sm-6 form-group\">\r\n                <label class=\"lable-color\"> ");
            EndContext();
            BeginContext(390, 21, false);
#line 11 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\PatientManagement\Views\DoctorDesk\_TodaysAppointment.cshtml"
                                       Write(Localizer["FromDate"]);

#line default
#line hidden
            EndContext();
            BeginContext(411, 279, true);
            WriteLiteral(@"</label>
                <input type=""date"" name=""fromdate"" value="""" class=""form-control"" id=""txtfromdate"" onchange=""fnLoadAppointmentDetail()"" />
            </div>
            <div class=""col-lg-2 col-md-4 col-sm-6 form-group"">
                <label class=""lable-color"">  ");
            EndContext();
            BeginContext(691, 19, false);
#line 15 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\PatientManagement\Views\DoctorDesk\_TodaysAppointment.cshtml"
                                        Write(Localizer["ToDate"]);

#line default
#line hidden
            EndContext();
            BeginContext(710, 504, true);
            WriteLiteral(@"</label>
                <input type=""date"" name=""todate"" value="""" class=""form-control"" id=""txttodate"" onchange=""fnLoadAppointmentDetail()"" />
            </div>
        </div>
        <div class=""row padbot10"">
            <div class=""col-lg-12 col-md-12 col-sm-12"">
                <table id=""jqgAppointmentDetail""></table>
                <div id=""jqpAppointmentDetail""></div>
            </div>
        </div>
    </div>
</div>

<script>
    var localization = {
        VisitNumber: '");
            EndContext();
            BeginContext(1215, 24, false);
#line 30 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\PatientManagement\Views\DoctorDesk\_TodaysAppointment.cshtml"
                 Write(Localizer["VisitNumber"]);

#line default
#line hidden
            EndContext();
            BeginContext(1239, 18, true);
            WriteLiteral("\',\r\n        MRN: \'");
            EndContext();
            BeginContext(1258, 16, false);
#line 31 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\PatientManagement\Views\DoctorDesk\_TodaysAppointment.cshtml"
         Write(Localizer["MRN"]);

#line default
#line hidden
            EndContext();
            BeginContext(1274, 26, true);
            WriteLiteral("\',\r\n        PatientName: \'");
            EndContext();
            BeginContext(1301, 24, false);
#line 32 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\PatientManagement\Views\DoctorDesk\_TodaysAppointment.cshtml"
                 Write(Localizer["PatientName"]);

#line default
#line hidden
            EndContext();
            BeginContext(1325, 21, true);
            WriteLiteral("\',\r\n        Mobile: \'");
            EndContext();
            BeginContext(1347, 19, false);
#line 33 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\PatientManagement\Views\DoctorDesk\_TodaysAppointment.cshtml"
            Write(Localizer["Mobile"]);

#line default
#line hidden
            EndContext();
            BeginContext(1366, 20, true);
            WriteLiteral("\',\r\n        Email: \'");
            EndContext();
            BeginContext(1387, 18, false);
#line 34 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\PatientManagement\Views\DoctorDesk\_TodaysAppointment.cshtml"
           Write(Localizer["Email"]);

#line default
#line hidden
            EndContext();
            BeginContext(1405, 30, true);
            WriteLiteral("\',\r\n        AppointmentDate: \'");
            EndContext();
            BeginContext(1436, 28, false);
#line 35 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\PatientManagement\Views\DoctorDesk\_TodaysAppointment.cshtml"
                     Write(Localizer["AppointmentDate"]);

#line default
#line hidden
            EndContext();
            BeginContext(1464, 30, true);
            WriteLiteral("\',\r\n        AppointmentTime: \'");
            EndContext();
            BeginContext(1495, 28, false);
#line 36 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\PatientManagement\Views\DoctorDesk\_TodaysAppointment.cshtml"
                     Write(Localizer["AppointmentTime"]);

#line default
#line hidden
            EndContext();
            BeginContext(1523, 21, true);
            WriteLiteral("\',\r\n        Status: \'");
            EndContext();
            BeginContext(1545, 19, false);
#line 37 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\PatientManagement\Views\DoctorDesk\_TodaysAppointment.cshtml"
            Write(Localizer["Status"]);

#line default
#line hidden
            EndContext();
            BeginContext(1564, 24, true);
            WriteLiteral("\',\r\n        CreatedBy: \'");
            EndContext();
            BeginContext(1589, 22, false);
#line 38 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\PatientManagement\Views\DoctorDesk\_TodaysAppointment.cshtml"
               Write(Localizer["CreatedBy"]);

#line default
#line hidden
            EndContext();
            BeginContext(1611, 18, true);
            WriteLiteral("\',\r\n        EMR: \'");
            EndContext();
            BeginContext(1630, 16, false);
#line 39 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\PatientManagement\Views\DoctorDesk\_TodaysAppointment.cshtml"
         Write(Localizer["EMR"]);

#line default
#line hidden
            EndContext();
            BeginContext(1646, 9020, true);
            WriteLiteral(@"',

    }

    $(document).ready(function () {
        fnSetCurrentdate();
        fnLoadAppointmentDetail();
        fnProcessLoading(true);
        $(window).on('resize', function () {
            if ($(window).width() < 1025) {
                fnJqgridSmallScreen('jqgAppointmentDetail');
            }
        });
        $.contextMenu({
            // define which elements trigger this menu
            selector: "".btnEMRTriage"",
            trigger: 'left',
            // define the elements of the menu
            items: {
                viewEMR: { name: 'View EMR', icon: ""edit"", callback: function (key, opt) { fnOpenEMR(event) } },
                triageEMR: { name: 'Triage EMR', icon: ""view"", callback: function (key, opt) { fnOpenTriage(event) } }
            }
            // there's more, have a look at the demos and docs...
        });
        $("".context-menu-icon-edit"").html(""<span class='icon-contextMenu'><i class='fa fa-eye'></i> View EMR</span>"");
        $("".context-men");
            WriteLiteral(@"u-icon-view"").html(""<span class='icon-contextMenu'><i class='fa fa-bell'></i> Triage EMR </span>"");
    });

    function fnSetCurrentdate() {
        var date = new Date();

        var day = date.getDate();
        var month = date.getMonth() + 1;
        var year = date.getFullYear();

        if (month < 10) month = ""0"" + month;
        if (day < 10) day = ""0"" + day;

        var today = year + ""-"" + month + ""-"" + day;
        document.getElementById(""txtfromdate"").value = today;
        document.getElementById(""txttodate"").value = today;
    }
    function fnLoadAppointmentDetail() {

        $(""#jqgAppointmentDetail"").jqGrid('GridUnload');
        var fromdate = $(""#txtfromdate"").val();
        var todate = $(""#txttodate"").val();

        if (fromdate == """" || fromdate == null) {
            fnAlert(""Please select From Date"", ""e"");
            return false;
        }
        if (todate == """" || todate == null) {
            fnAlert(""Please select To Date"", ""e"");
            ");
            WriteLiteral(@"return false;
        }
        $(""#jqgAppointmentDetail"").jqGrid(
            {
                url: getBaseURL() + '/DoctorDesk/GetAppointmentDetailByDate',
                datatype: ""json"",
                contentType: ""application/json; charset-utf-8"",
                mtype: 'GET',
                postData: {
                    startDate: fromdate,
                    endDate: todate,
                },
                ajaxGridOptions: { contentType: 'application/json; charset=utf-8', async: true },
                colNames: [localization.VisitNumber, localization.VisitNumber, localization.MRN, localization.MRN, localization.PatientName, localization.Mobile, localization.Email, localization.AppointmentDate, localization.AppointmentTime, localization.Status, localization.CreatedBy, localization.EMR],
                colModel: [
                    { name: ""AppointmentKey"", width: 60, editable: true, align: 'left', hidden: true },
                    { name: ""Opnumber"", width: 60, editable:");
            WriteLiteral(@" true, align: 'left', hidden: true },
                    { name: ""PatientID"", width: 60, editable: true, align: 'left', hidden: false },
                    { name: ""UHID"", width: 60, editable: true, align: 'left', hidden: true },

                    { name: ""PatientName"", width: 100, editable: true, align: 'left', hidden: false },
                    { name: ""PatientMobileNumber"", width: 55, editable: true, align: 'left', hidden: false },
                    { name: ""PatientEmailID"", width: 100, editable: true, align: 'left', hidden: true },


                    { name: ""AppointmentDate"", width: 50, editable: true, align: 'center', hidden: false, formatter: 'date', formatoptions: { srcformat: 'Y/m/d H:i:s', newformat: 'd/m/Y' } },
                    { name: ""AppointmentFromTime"", width: 50, editable: true, align: 'center', hidden: false },
                    {
                        name: ""AppointmentStatus"", width: 50,hidden: true, editable: true, formatter: 'select',
                    ");
            WriteLiteral(@"    edittype: 'select', editoptions: {
                            //value: l_status
                        },
                    },
                    { name: ""StrCreatedBy"", width: 60, editable: true, align: 'left', hidden: true },
                    //{
                    //    name: ""Button"", width: 60, editable: false, align: 'left', hidden: false, formatter: function (cellValue, options, rowObject) {
                    //        var i = options.rowId;
                    //        return ""<button id=btnEMR_"" + i + "" type='button' style='margin-right: 5px;' class='btn btn-primary' onclick=fnOpenEMR('"" + rowObject.UHID + ""') > <i class='fas fa-edit c-white'></i> View EMR </button >""
                    //            +
                    //            ""<button id=btnTriage_"" + i + "" type='button' style='margin-right: 5px;' class='btn btn-primary' onclick=fnOpenTriage('"" + rowObject.AppointmentKey + ""','"" + rowObject.UHID + ""') > <i class='fas fa-edit c-white'></i> Triage Form </button >"";");
            WriteLiteral(@"

                    //    }
                    //},
                    {
                        name: 'edit', search: false, align: 'left', width: 35, sortable: false, resizable: false,
                        formatter: function (cellValue, options, rowdata, action) {
                            var i = options.rowId;
                            return '<button class=""mr-1 btn btn-outline btnEMRTriage"" id=""btnEMRTriage' + i +'""><i class=""fa fa-ellipsis-v""></i></button>'
                        }
                    },
                ],
                loadBeforeSend: function () {
                    $(""[id*='_edit']"").css('text-align', 'center');
                },
                rowNum: 100000,
                viewrecords: true,
                colnumwidth:50,
                gridview: true,
                rownumbers: true,
                scroll: false,
                loadonce: true,
                width: 'auto',
                height: 'auto',
                autowidth: t");
            WriteLiteral(@"rue,
                shrinkToFit: true,
                forceFit: false,
                pager: ""#jqpAppointmentDetail"",
                onSelectRow: function (rowid) {

                },
                loadComplete: function (data) {
                   $("".ui-jqgrid-htable,.ui-jqgrid-btable,.ui-jqgrid-hdiv,.ui-jqgrid-bdiv,.ui-jqgrid-view,.ui-jqgrid,.ui-jqgrid-pager"").css('width', '100%');

                    fnJqgridSmallScreen('jqgAppointmentDetail');
                    var rows = jQuery(""#jqgAppointmentDetail"").getDataIDs(); var ids = """";
                    console.log(rows);
                     
                    for (a = 0; a < rows.length; a++) {
                        row = jQuery(""#jqgAppointmentDetail"").getRowData(rows[a]);
                        console.log(row['UHID']);
                       
                        //$(""#btnTriage_"" + rows[a]).hide();
                        //if (row['UHID'] > 0) {
                        //    $(""#btnEMRTriage"" + rows[a]).show();
");
            WriteLiteral(@"                        //    //$(""#btnTriage_"" + rows[a]).show();
                        //}

                        if (row['UHID'] < 0 || row['UHID'] == """" || row['UHID'] == undefined) {
                            $(""#btnEMRTriage"" + rows[a]).hide();
                        }
                        console.log(row[""AppointmentFromTime""].substring(0, 5));
                        var dataArray = $('#jqgAppointmentDetail').jqGrid('getGridParam', 'data');
                        console.log(dataArray);
                        //$(dataArray).each(function (index) {
                        //    dataArray[index].RowID = index + 1;
                        //});

                    }
                    fnJqgridSmallScreen(""jqgAppointmentDetail"");
                    fnProcessLoading(""false"");
                }
            });


    }
    function fnOpenEMR(e) {
        var rowid = $(""#jqgAppointmentDetail"").jqGrid('getGridParam', 'selrow');
        var rowData = $('#jqgAppointmentDetai");
            WriteLiteral(@"l').jqGrid('getRowData', rowid);

        var url = getBaseURL() + '/PatientManagement/ClinicalForms/PatientEMR?vNumber=' + rowData.Opnumber + '&UHID=' + rowData.UHID;
        window.open(
            url,
            '_blank'
            // <- This is what makes it open in a new window.
            , ''
        );
    }
    function fnOpenTriage(e) {
        var rowid = $(""#jqgAppointmentDetail"").jqGrid('getGridParam', 'selrow');
        var rowData = $('#jqgAppointmentDetail').jqGrid('getRowData', rowid);
        var url = getBaseURL() + '/PatientManagement/ClinicalForms/Triage?vNumber=' + rowData.Opnumber + '&UHID=' + rowData.UHID;
        window.open(
            url,
            '_blank'
            // <- This is what makes it open in a new window.
            , ''
        );
    }
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IViewLocalizer Localizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
