#pragma checksum "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\eSyaPayrollExpat\Views\AttendanceProcess\V_4522_00.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "389806214444622953df9d06640f8017fd665820"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_eSyaPayrollExpat_Views_AttendanceProcess_V_4522_00), @"mvc.1.0.view", @"/Areas/eSyaPayrollExpat/Views/AttendanceProcess/V_4522_00.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/eSyaPayrollExpat/Views/AttendanceProcess/V_4522_00.cshtml", typeof(AspNetCore.Areas_eSyaPayrollExpat_Views_AttendanceProcess_V_4522_00))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"389806214444622953df9d06640f8017fd665820", @"/Areas/eSyaPayrollExpat/Views/AttendanceProcess/V_4522_00.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"23ac09be4bcfaa7f9829a01d1a134874eaae1f3b", @"/Areas/eSyaPayrollExpat/Views/_ViewImports.cshtml")]
    public class Areas_eSyaPayrollExpat_Views_AttendanceProcess_V_4522_00 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\eSyaPayrollExpat\Views\AttendanceProcess\V_4522_00.cshtml"
  
    ViewData["Title"] = "V_4522_00";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(94, 124, true);
            WriteLiteral("\r\n<div class=\"row\">\r\n    <div class=\"col-lg-4 col-md-4 col-sm-6 form-group \">\r\n        <label>Business Key</label>\r\n        ");
            EndContext();
            BeginContext(219, 51, false);
#line 10 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\eSyaPayrollExpat\Views\AttendanceProcess\V_4522_00.cshtml"
   Write(await Component.InvokeAsync("UserBusinessLocation"));

#line default
#line hidden
            EndContext();
            BeginContext(270, 14018, true);
            WriteLiteral(@"
    </div>

    <div class=""col-lg-3 col-md-3 col-sm-6 form-group"">
        <label>Pay Period</label>
        <select class=""selectpicker"" id=""cboPayperiod"" data-size=""8""></select>

    </div>

    <div class=""col-lg-4 col-md-4 col-sm-6 form-group"">
        <label>Employee</label>
        <select class=""selectpicker"" id=""cboEmployeenumber"" data-size=""8"" onchange=""fnGridLoadPayTo()""></select>

    </div>
</div>





<div class=""row"">

    <div class=""col-sm-4 col-4 form-group"" style=""background: #ffcccc; vertical-align: middle !important; display: inline !important;  padding: 10px;"">
        <div class=""radio"" style=""margin:0px;height:20px"">
            <label style=""font-size:14px !important;color:#797172 !important""><input type=""radio"" name=""rdoStatus"" value=""ToPay"" checked onchange=""fnGridLoadPayTo()"" /> To Pay </label>
        </div>
    </div>
    <div class=""col-sm-4 col-4 form-group"" style=""background: #ccffd9; vertical-align: middle !important; display: inline !important;  p");
            WriteLiteral(@"adding: 10px;margin-left: -15px;"">
        <div class=""radio"" style=""margin:0px;""><label style=""font-size:14px !important;color:#797172 !important""><input type=""radio"" name=""rdoStatus"" value=""Paid"" onchange="" fnGridLoadArrearDetails()"" /> Paid</label></div>
    </div>
</div>


<div class=""row padbot10"" id=""divpayto"">
    <div class=""col-lg-12 col-md-12 col-sm-12 itemblur"" >
        <table id=""jqgToPay""></table>
        <div id=""jqpToPay""></div>
    </div>
</div>


<div class=""row padbot10"" id=""divpaid"">
    <div class=""col-lg-12 col-md-12 col-sm-12 itemblur"" >
        <table id=""jqgPaid""></table>
        <div id=""jqpPaid""></div>
    </div>
</div>

<hr />
<div class=""col-lg-3 col-md-3 col-sm-6 form-group text-right padtop20"">
    <button class=""mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent primary-button"" id=""btnSaveArreardetails"" onclick=""fnSaveArreardetails()"">
        Save
    </button>
</div>




<script>

    $(document).ready(function");
            WriteLiteral(@" () {
        $('#cboPayperiod').selectpicker('refresh');
        $('#cboEmployeenumber').selectpicker('refresh');
        $('#btnSaveArreardetails').show();
    });

    function fnBusinessLocation_onChange() {
        fnBindPayPeriod();
    }

    function fnBindPayPeriod() {
        $('#cboPayperiod').selectpicker('refresh');
        $.ajax({
            url: getBaseURL() + '/AttendanceProcess/GetPayPeriodbyBusinessKey?Businesskey=' + $(""#cboBusinessLocation"").val(),
            datatype: 'json',
            type: 'POST',
            async: false,
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                $('#cboPayperiod').empty();
                $(""#cboPayperiod"").append($(""<option value='0'>Select</option>""));
                if (result !== null) {
                    for (var i = 0; i < result.length; i++) {
                        $(""#cboPayperiod"").append($(""<option></option>"").val(result[i][""PayPeriod""]).html(result[i]");
            WriteLiteral(@"[""PayPeriod""]));
                    }
                }
                $('#cboPayperiod').val($(""#cboPayperiod option:first"").val());
                $('#cboPayperiod').selectpicker('refresh');
                fnBindEmployee();
            }
        });
    }


    function fnBindEmployee() {
        $('#cboEmployeenumber').selectpicker('refresh');
        $.ajax({
            url: getBaseURL() + '/AttendanceProcess/GetEmployeesbyBusinessKey?Businesskey=' + $(""#cboBusinessLocation"").val(),
            datatype: 'json',
            type: 'POST',
            async: false,
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                $('#cboEmployeenumber').empty();
                $(""#cboEmployeenumber"").append($(""<option value='0'>Select</option>""));
                if (result != null) {
                    for (var i = 0; i < result.length; i++) {

                        $(""#cboEmployeenumber"").append($(""<option></option>"").val");
            WriteLiteral(@"(result[i][""EmployeeNumber""]).html(result[i][""EmployeeName""]));
                    }
                }
                $('#cboEmployeenumber').val($(""#cboEmployeenumber option:first"").val());
                $('#cboEmployeenumber').selectpicker('refresh');
            }
        });
    }


   

    function fnGridLoadPayTo() {
        $(""#jqgPaid"").GridUnload();
        $(""#divpaid"").hide();
        $('#btnSaveArreardetails').show();
        $(""#divpayto"").show();  

        $(""#jqgToPay"").GridUnload();
        $(""#jqgToPay"").jqGrid({
            url: getBaseURL() + '/AttendanceProcess/GetPaidToEmployees?Businesskey=' + $(""#cboBusinessLocation"").val() + '&Payperiod=' + $(""#cboPayperiod"").val() + '&employeeNumber=' + $(""#cboEmployeenumber"").val(),
            datatype: ""json"",
            contenttype: ""application/json; charset-utf-8"",
            mtype: 'POST',
            colNames: ["""", """", 'Year Month', 'LOP', 'Paid Period', 'No.of days To Pay'],
            colModel: [
          ");
            WriteLiteral(@"      { name: ""BusinessKey"", width: 20, editable: false, hidden: true, editoptions: { disabled: true }, align: 'left', edittype: 'text' },
                { name: ""EmployeeNumber"", width: 20, editable: false, hidden: true, editoptions: { disabled: true }, align: 'left', edittype: 'text' },
                { name: ""PayPeriod"", width: 20, editable: false, hidden: false, editoptions: { disabled: true }, align: 'left', edittype: 'text' },
                { name: ""Lopdays"", width: 60, editable: false, editoptions: { disabled: true }, align: 'left', edittype: 'text' },
                {
                    name: ""PaidPeriod"", width: 100, editable: true, hidden: false, editoptions: { disabled: false }, align: 'left', edittype: ""text"",
                    editoptions: {
                        maxlengh: 5,
                        dataInit: function (element) {
                            $(element).keypress(function (e) {
                                if (e.which != 8 && e.which != 0 && (e.which < 48 || e");
            WriteLiteral(@".which > 57)) {
                                    return false;
                                }

                            }).focusout(function (e) {
                               
                                if (this.value === """") {
                                    $(element).val(0);
                                } 
                            });
                        }
                    }
                },

                { name: ""ArrearDays"", width: 100, editable: false, hidden: false, editoptions: { disabled: true }, align: 'left', edittype: 'text' },

                //{
                //    name: ""ArrearDays"", width: 100, editable: true, hidden: false, editoptions: { disabled: false }, align: 'left', edittype: ""text"",
                //    editoptions: {
                //        maxlengh: 5,
                //        dataInit: function (element) {
                //            $(element).keypress(function (e) {
                //                if (e.which ");
            WriteLiteral(@"!= 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                //                    return false;
                //                }

                //            }).focusout(function (e) {
                //                if (this.value === """") {
                //                    $(element).val(0);
                //                }
                //            });
                //        }
                //    }
                //},

            ],
            rowNum: 10000,
            rownumWidth: 55,
            pager: ""#jqpToPay"",
            pgtext: null,
            pgbuttons: null,
            viewrecords: false,
            gridview: true,
            rownumbers: true,
            height: 'auto',
            width: 'auto',
            autowidth: true,
            shrinkToFit: true,
            forceFit: true,
            loadonce: true,
            cellEdit: true,
            beforeSaveCell: function (rowid, celname, value, iRow, iCol) {

      ");
            WriteLiteral(@"          var _lopdays = parseInt($(""#jqgToPay"").jqGrid('getCell', rowid, 'Lopdays'));
                var _paidperiod = parseInt(value);
                var arrerdays = parseInt(_lopdays - _paidperiod); 
                if (_paidperiod > _lopdays) {
                    toastr.warning(""Paid period should not greater than Lop days"");
                    $('#jqgToPay').jqGrid('editRow', id, true);
                } else {

                    $(""#jqgToPay"").jqGrid('setCell', rowid, 'ArrearDays', arrerdays);
                   
                }     
            },
            editurl: 'url',
            cellsubmit: 'clientArray',
            onSelectRow: function (id) {
                if (id) { $('#jqgToPay').jqGrid('editRow', id, true); }
              
            },
            ondblClickRow: function (rowid) {
              
            },
            loadComplete: function (data) {
                $(this).find("">tbody>tr.jqgrow:odd"").addClass(""myAltRowClassEven"");
                $(");
            WriteLiteral(@"this).find("">tbody>tr.jqgrow:even"").addClass(""myAltRowClassOdd"");
                $(""#jqgToPay"").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');

                fnAddGridSerialNoHeading();
            }
        }).jqGrid('navGrid', '#jqpToPay', { add: false, edit: false, search: false, del: false, refresh: false });

    }
 
    function fnGridLoadArrearDetails() {
        $(""#jqgToPay"").GridUnload();
        $(""#divpayto"").hide();
        $('#btnSaveArreardetails').hide();
        $(""#divpaid"").show(); 

        $(""#jqgPaid"").GridUnload();
        $(""#jqgPaid"").jqGrid({
            url: getBaseURL() + '/AttendanceProcess/GetArreardays?Businesskey=' + $(""#cboBusinessLocation"").val() + '&Payperiod=' + $(""#cboPayperiod"").val() + '&employeeNumber=' + $(""#cboEmployeenumber"").val(),
            datatype: ""json"",
            contenttype: ""application/json; charset-utf-8"",
            mtype: 'POST',
            colNames: ["""", """", 'Year Month', 'LOP',/*""Paid Period"",*/ 'Arrear");
            WriteLiteral(@" Paid days'],
            colModel: [
                { name: ""BusinessKey"", width: 20, editable: false, hidden: true, editoptions: { disabled: true }, align: 'left', edittype: 'text' },
                { name: ""EmployeeNumber"", width: 20, editable: false, hidden: true, editoptions: { disabled: true }, align: 'left', edittype: 'text' },
                { name: ""PayPeriod"", width: 20, editable: false, hidden: false, editoptions: { disabled: true }, align: 'left', edittype: 'text' },
                { name: ""Lopdays"", width: 60, editable: false, editoptions: { disabled: true }, align: 'left', edittype: 'text' },
                //{ name: ""PaidPeriod"", width: 60, editable: false, editoptions: { disabled: true }, align: 'left', edittype: 'text' },
                { name: ""ArrearDays"", width: 100, editable: false, editoptions: { disabled: true }, align: 'left', edittype: 'text' },
            ],
            rowNum: 10000,
            rownumWidth: 55,
            pager: ""#jqpPaid"",
            pgtext: n");
            WriteLiteral(@"ull,
            pgbuttons: null,
            viewrecords: false,
            gridview: true,
            rownumbers: true,
            height: 'auto',
            width: 'auto',
            autowidth: true,
            shrinkToFit: true,
            forceFit: true,
            loadonce: true,
            cellEdit: true,
            editurl: 'url',
            cellsubmit: 'clientArray',
            onSelectRow: function (id) {
                if (id) { $('#jqgPaid').jqGrid('editRow', id, true); }
            },
            ondblClickRow: function (rowid) {
            },
            loadComplete: function (data) {
                $(this).find("">tbody>tr.jqgrow:odd"").addClass(""myAltRowClassEven"");
                $(this).find("">tbody>tr.jqgrow:even"").addClass(""myAltRowClassOdd"");
                $(""#jqgPaid"").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');

                fnAddGridSerialNoHeading();
            }
        }).jqGrid('navGrid', '#jqpPaid', { add: fals");
            WriteLiteral(@"e, edit: false, search: false, del: false, refresh: false });

    }
   

    function fnSaveArreardetails() {

        var $grid = $(""#jqgToPay"");
        var arr_days = [];
        var ids = jQuery(""#jqgToPay"").jqGrid('getDataIDs');
        for (var i = 0; i < ids.length; i++) {
            var rowId = ids[i];
            var rowData = jQuery('#jqgToPay').jqGrid('getRowData', rowId);
                arr_days.push({
                    BusinessKey: rowData.BusinessKey,
                    EmployeeNumber: rowData.EmployeeNumber,
                    PayPeriod: rowData.PayPeriod,
                    PaidPeriod: rowData.PaidPeriod,
                    Lopdays: rowData.Lopdays,
                    ArrearDays: rowData.ArrearDays
                });
            
        }

        $(""#btnSaveArreardetails"").attr(""disabled"", true);
        $.ajax({
            url: getBaseURL() + '/AttendanceProcess/InsertOrUpdateArreardays',
            type: 'POST',
            datatype: 'json',
      ");
            WriteLiteral(@"      data: { obj: arr_days },
            async: false,
            success: function (response) {
                if (response.Status === true) {
                    toastr.success(""saved"");
                    $(""#jqgToPay"").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
                }
                else {
                    toastr.error(response.Message);
                }
                $(""#btnSaveArreardetails"").attr(""disabled"", false);
            },
            error: function (error) {
                toastr.error(error.statusText);
                $(""#btnSaveArreardetails"").attr(""disabled"", false);
            }
        });

    }

</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
