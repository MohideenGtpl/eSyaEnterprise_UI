#pragma checksum "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7da18742228f0b8855e6d3b8fef4738cb0d0260e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_DoctorScheduler_Views_Appointment_EDA_01_00), @"mvc.1.0.view", @"/Areas/DoctorScheduler/Views/Appointment/EDA_01_00.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/DoctorScheduler/Views/Appointment/EDA_01_00.cshtml", typeof(AspNetCore.Areas_DoctorScheduler_Views_Appointment_EDA_01_00))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7da18742228f0b8855e6d3b8fef4738cb0d0260e", @"/Areas/DoctorScheduler/Views/Appointment/EDA_01_00.cshtml")]
    public class Areas_DoctorScheduler_Views_Appointment_EDA_01_00 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/bottom-sheets.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/eSyaOutPatient/Scheduler.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/fullcalendar/core/main.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/fullcalendar/daygrid/main.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/fullcalendar/timegrid/main.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/fullcalendar/list/main.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/fullcalendar/pm/timeline/main.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/fullcalendar/pm/resource-timeline/main.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/fullcalendar/bootstrap/main.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/fullcalendar/core/main.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/fullcalendar/core/locales-all.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/fullcalendar/daygrid/main.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/fullcalendar/timegrid/main.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/fullcalendar/interaction/main.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/fullcalendar/bootstrap/main.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/fullcalendar/list/main.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/fullcalendar/moment/main.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/fullcalendar/pm/resource-common/main.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/fullcalendar/pm/resource-daygrid/main.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/fullcalendar/pm/resource-timegrid/main.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/fullcalendar/pm/timeline/main.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/bottom-sheets.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "value", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(134, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 5 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml"
  
    ViewData["Title"] = "EDA_01_00";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(228, 56, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "7da18742228f0b8855e6d3b8fef4738cb0d0260e12752", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(284, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(303, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(311, 67, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "7da18742228f0b8855e6d3b8fef4738cb0d0260e14187", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(378, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(386, 64, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "7da18742228f0b8855e6d3b8fef4738cb0d0260e15524", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(450, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(456, 67, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "7da18742228f0b8855e6d3b8fef4738cb0d0260e16857", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(523, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(529, 68, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "7da18742228f0b8855e6d3b8fef4738cb0d0260e18190", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(597, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(603, 64, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "7da18742228f0b8855e6d3b8fef4738cb0d0260e19523", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(667, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(675, 71, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "7da18742228f0b8855e6d3b8fef4738cb0d0260e20860", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(746, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(752, 80, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "7da18742228f0b8855e6d3b8fef4738cb0d0260e22193", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(832, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(840, 69, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "7da18742228f0b8855e6d3b8fef4738cb0d0260e23530", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(909, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(917, 54, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7da18742228f0b8855e6d3b8fef4738cb0d0260e24867", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(971, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(977, 65, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7da18742228f0b8855e6d3b8fef4738cb0d0260e26122", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1042, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(1048, 57, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7da18742228f0b8855e6d3b8fef4738cb0d0260e27379", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1105, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(1111, 58, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7da18742228f0b8855e6d3b8fef4738cb0d0260e28636", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1169, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(1175, 61, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7da18742228f0b8855e6d3b8fef4738cb0d0260e29893", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1236, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(1242, 59, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7da18742228f0b8855e6d3b8fef4738cb0d0260e31150", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1301, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(1307, 54, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7da18742228f0b8855e6d3b8fef4738cb0d0260e32407", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1361, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(1367, 56, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7da18742228f0b8855e6d3b8fef4738cb0d0260e33664", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1423, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(1431, 68, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7da18742228f0b8855e6d3b8fef4738cb0d0260e34925", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1499, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(1505, 69, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7da18742228f0b8855e6d3b8fef4738cb0d0260e36182", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1574, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(1580, 70, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7da18742228f0b8855e6d3b8fef4738cb0d0260e37439", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1650, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(1656, 61, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7da18742228f0b8855e6d3b8fef4738cb0d0260e38696", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1717, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(1723, 45, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7da18742228f0b8855e6d3b8fef4738cb0d0260e39953", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1768, 2, true);
                WriteLiteral("\r\n");
                EndContext();
            }
            );
            BeginContext(1773, 3273, true);
            WriteLiteral(@"
<style>
    hr {
        border-top: 1px solid #ececec !important;
    }

    .doctorname {
        font-size: 16px !important;
        font-weight: 600 !important;
        color: #5d5d5d !important;
        letter-spacing: 0.55px;
    }

    .AppointmentSectionBox {
        padding: 15px;
        border-left: 0px solid #1094f8;
        box-shadow: 0 1px 2px 1px hsla(0,0%,43%,.14);
    }


    .m10 {
        margin: 10px !important;
    }

    .mar0 {
        margin: 0px !important
    }

    .padleft30 {
        padding-left: 30px !important;
    }

    #btnMove {
        position: absolute;
        right: 0px;
        top: 0px;
        border: 0px solid #badef9;
        padding: 6px 6px;
        cursor: pointer;
    }

        #btnMove .svg-inline--fa {
            color: #797172 !important;
            font-size: 18px;
        }


    .doctorCol input[type=checkbox] {
        vertical-align: text-bottom;
    }

    .doctorCol label {
        cursor: poin");
            WriteLiteral(@"ter;
        color: #1b1b1b !important;
        padding: 5px;
        border-bottom: 1px solid #f3f3f3;
    }

        .doctorCol label:hover {
            background: aliceblue;
            color: #0c4ec6 !important;
        }

    .appointmentSidebar {
        border: 1px solid #e8edf1;
        border-radius: 4px;
        background: #fff !important;
        width: 210px;
        position: relative;
        z-index: 2;
        padding: 0px;
    }

        .appointmentSidebar.active {
            margin-left: -180px !important;
        }

        .appointmentSidebar input, .appointmentSidebar .selectpicker + .btn {
            background: transparent !important;
        }

    .fc-button-primary {
        color: #003179 !important;
        background-color: #ffffff !important;
        border-color: #ffffff !important;
        font-weight: bold !important;
        letter-spacing: 1.2px;
        box-shadow: 0 2px 2px 0 rgba(0,0,0,.14), 0 3px 1px -2px rgba(0,0,0,.2), 0 1px 5px");
            WriteLiteral(@" 0 rgba(0,0,0,.12);
    }

    .d-inline-block {
        display: inline-block !important;
    }

    .calendarTimeline {
        width: 83% !important;
        padding-left: 5px;
    }

        .calendarTimeline.active {
            width: 97% !important;
        }

    .fc-toolbar.fc-header-toolbar {
        margin-bottom: 0.15em !important;
        height: 35px;
    }



    .appointmentSidebar .headingText {
        height: 35px;
        line-height: 35px !important;
        margin: 0px !important;
        background: linear-gradient(to bottom,#fff,#fffcec);
        padding-left: 15px !important;
        font-weight: 600;
        color: #505050;
        letter-spacing: 1.45px;
        margin-bottom: 15px !important;
    }

    .appointmentSidebar .form-group {
        padding: 0px 27px 0px 15px !important;
        margin-bottom: 15px !important;
    }

    .fa-user-md {
        font-size: 30px !important;
        color: #b0b0b0 !important
    }

    #divEnterLo");
            WriteLiteral("cation {\r\n        display: none;\r\n    }\r\n</style>\r\n\r\n<div class=\"row\">\r\n    <div class=\"appointmentSidebar d-inline-block\">\r\n        <div id=\"divAppointmentFilter\">\r\n            <p class=\"headingText\">");
            EndContext();
            BeginContext(5047, 24, false);
#line 179 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml"
                              Write(Localizer["Appointment"]);

#line default
#line hidden
            EndContext();
            BeginContext(5071, 125, true);
            WriteLiteral(" <span id=\"btnMove\" title=\"Collapse\"><i class=\"fas fa-bars c-black\"></i></span></p>\r\n\r\n            <div class=\"form-group\">\r\n");
            EndContext();
            BeginContext(5307, 144, true);
            WriteLiteral("                <select id=\"cboBusinessKey\" class=\"selectpicker\" data-live-search=\"false\" title=\"\" onchange=\"fnBusinessLocation_onChange()\">\r\n\r\n");
            EndContext();
#line 186 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml"
             foreach (var item in @ViewBag.BusinessLocation)
            {
                if (@item.BusinessKey == @ViewBag.SelectedBusinessKey)
                {

#line default
#line hidden
            BeginContext(5619, 20, true);
            WriteLiteral("                    ");
            EndContext();
            BeginContext(5639, 74, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7da18742228f0b8855e6d3b8fef4738cb0d0260e45986", async() => {
                BeginContext(5683, 21, false);
#line 190 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml"
                                                          Write(item.BusinessLocation);

#line default
#line hidden
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            BeginWriteTagHelperAttribute();
#line 190 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml"
                                WriteLiteral(item.BusinessKey);

#line default
#line hidden
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5713, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 191 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml"
                }
                else
                {

#line default
#line hidden
            BeginContext(5775, 20, true);
            WriteLiteral("                    ");
            EndContext();
            BeginContext(5795, 65, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7da18742228f0b8855e6d3b8fef4738cb0d0260e48715", async() => {
                BeginContext(5830, 21, false);
#line 194 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml"
                                                 Write(item.BusinessLocation);

#line default
#line hidden
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#line 194 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml"
                       WriteLiteral(item.BusinessKey);

#line default
#line hidden
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5860, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 195 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml"
                }
            }

#line default
#line hidden
            BeginContext(5896, 102, true);
            WriteLiteral("        </select>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label>");
            EndContext();
            BeginContext(5999, 23, false);
#line 201 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml"
                  Write(Localizer["ClinicType"]);

#line default
#line hidden
            EndContext();
            BeginContext(6022, 135, true);
            WriteLiteral(" </label>\r\n                <select id=\"cboClinicType\" class=\"selectpicker\" onchange=\"fnLoadDoctorScheduleList()\">\r\n                    ");
            EndContext();
            BeginContext(6157, 33, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7da18742228f0b8855e6d3b8fef4738cb0d0260e51719", async() => {
                BeginContext(6175, 6, true);
                WriteLiteral("Select");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_23.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_23);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(6190, 110, true);
            WriteLiteral("\r\n                </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>");
            EndContext();
            BeginContext(6301, 17, false);
#line 207 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml"
                  Write(Localizer["Date"]);

#line default
#line hidden
            EndContext();
            BeginContext(6318, 272, true);
            WriteLiteral(@"</label>
                <input type=""date"" name=""name"" value="""" id=""dtAppointmentDate"" data-date-format=""DD-MM-YYYY"" onchange=""fnLoadDoctorScheduleList()"" class=""form-control padleft0"" />
            </div>
            <div class=""form-group"">
                <label>");
            EndContext();
            BeginContext(6591, 22, false);
#line 211 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml"
                  Write(Localizer["Specialty"]);

#line default
#line hidden
            EndContext();
            BeginContext(6613, 133, true);
            WriteLiteral("</label>\r\n                <select id=\"cboSpecialty\" class=\"selectpicker\" onchange=\"fnLoadDoctorScheduleList()\">\r\n                    ");
            EndContext();
            BeginContext(6746, 37, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7da18742228f0b8855e6d3b8fef4738cb0d0260e54425", async() => {
                BeginContext(6768, 6, true);
                WriteLiteral("Select");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_24.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_24);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(6783, 134, true);
            WriteLiteral("\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <div id=\"divDoctorList\">\r\n            <p class=\"headingText\">");
            EndContext();
            BeginContext(6918, 26, false);
#line 218 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml"
                              Write(Localizer["ChooseDoctors"]);

#line default
#line hidden
            EndContext();
            BeginContext(6944, 438, true);
            WriteLiteral(@"  <span id=""btnPullUp"" title=""Collapse""><i class=""fas fa-chevron-up c-black""></i></span></p>
            <div class=""form-group"">
                <div id=""dvDoctorScheduleList"" class=""lsDoctor"">
                </div>
            </div>
        </div>
    </div>
    <div class=""d-inline-block padleft5 calendarTimeline"">
        <div id='calendar'></div>
    </div>

    <div class=""waitlist"">
        <p class=""headingText"">");
            EndContext();
            BeginContext(7383, 32, false);
#line 230 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml"
                          Write(Localizer["RescheduleWait-list"]);

#line default
#line hidden
            EndContext();
            BeginContext(7415, 684, true);
            WriteLiteral(@" </p>
        <div id='external-events'>
        </div>
    </div>

</div>

<div id=""dvsheet"" class=""sheet column items-center justify-end"" aria-hidden=""true"">
    <!-- Dark background for the sheet -->
    <div class=""overlay""></div>

    <!-- The sheet itself -->
    <div class=""contents column border"">
        <!-- Sheet controls -->
        <header class=""controls border-bottom mb-3"">
            <!-- The thing to drag if you want to resize the sheet -->
            <div class=""draggable-area"">
                <div class=""draggable-thumb""></div>
            </div>
            <div class="" d-block"">
                <h4 class=""m-0"">
                    ");
            EndContext();
            BeginContext(8100, 33, false);
#line 251 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml"
               Write(Localizer["AppointmentScheduler"]);

#line default
#line hidden
            EndContext();
            BeginContext(8133, 433, true);
            WriteLiteral(@" 
                </h4>
                <button class=""close-sheet"" type=""button"" title=""Close the sheet""><i class=""fa fa-times""></i></button>
            </div>
        </header>
        <div class=""container-fluid bg-lightgrey py-3"">

        </div>
    </div>
</div>
<div class=""modal fade in "" id=""PopupAppointmentScheduler"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"" data-keyboard=""false"" data-backdrop=""static"">
");
            EndContext();
            BeginContext(8641, 300, true);
            WriteLiteral(@"    <div class=""modal-dialog modal-lg"" role=""document"">
        <div class=""modal-content "">
            <div class=""modal-header"">
                <button type=""button"" class=""close ml-auto"" data-dismiss=""modal""> <i class=""fa fa-times""></i></button>
                <h4 class=""modal-title blur"">");
            EndContext();
            BeginContext(8942, 33, false);
#line 267 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml"
                                        Write(Localizer["AppointmentScheduler"]);

#line default
#line hidden
            EndContext();
            BeginContext(8975, 82, true);
            WriteLiteral(" </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                ");
            EndContext();
            BeginContext(9058, 89, false);
#line 270 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml"
           Write(await Html.PartialAsync("~/Areas/DoctorScheduler/Views/Appointment/_Confirmation.cshtml"));

#line default
#line hidden
            EndContext();
            BeginContext(9147, 301, true);
            WriteLiteral(@"
            </div>
            <div class=""modal-footer"">
                <div class=""row"">
                    <div class=""col-lg-12"">
                        <button class=""mdl-button  primary-button"" id=""btnSaveAppointment"" onclick=""fnSaveAppointmentConfirmation()""><i class=""fa fa-save""></i>");
            EndContext();
            BeginContext(9449, 17, false);
#line 275 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml"
                                                                                                                                                          Write(Localizer["Save"]);

#line default
#line hidden
            EndContext();
            BeginContext(9466, 221, true);
            WriteLiteral("  </button>\r\n                        <button class=\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect  cancel-button cancel-button\" id=\"btnCancelBusinessKey\" data-dismiss=\"modal\"><i class=\"fa fa-times\"></i>");
            EndContext();
            BeginContext(9688, 19, false);
#line 276 "D:\eSya Project\Solution\eSyaEnterprise_UI\trunk\eSyaEnterprise_UI\Areas\DoctorScheduler\Views\Appointment\EDA_01_00.cshtml"
                                                                                                                                                                                                           Write(Localizer["Cancel"]);

#line default
#line hidden
            EndContext();
            BeginContext(9707, 121, true);
            WriteLiteral("  </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n");
            EndContext();
            BeginContext(10762, 36539, true);
            WriteLiteral(@"<script>

    $('#PopupAppointmentScheduler').on('show.bs.modal', function () {

        $("".modal-body"").addClass('bg-lightgrey');

    });
    $('#PopupPatientSearch').on('show.bs.modal', function () {

        $("".blur"").addClass('active')
    });
    $('#PopupPatientSearch').on('hide.bs.modal', function () {

        $("".blur"").removeClass('active')
    });
</script>

<script>

    document.getElementById(""dtAppointmentDate"").valueAsDate = new Date();


    $(document).ready(function () {
        $("".appointmentSidebar,.waitlist,.pullWaitlist"").css({
            'max-height': $(window).innerHeight() - ($('section.header').outerHeight(true) + $('.banner').outerHeight(true)),
            //'overflow': 'auto'
        });
        $(""#divDoctorList .headingText"").click(function () {
            $(""#divDoctorList"").toggleClass('pullUp');
            $(""#btnPullUp"").find(""svg"").toggleClass('fa-chevron-up fa-chevron-down');
        })
        $("".doctorCol"").css({
            'max-");
            WriteLiteral(@"height': $(window).innerHeight() / 2.8,
            'overflow': 'auto'
        });
        $("".fc-view-container"").css({
            'max-height': $(window).innerHeight() - 170,
            'overflow': 'auto'
        });
        $("".fc-timegrid-container"").css({
            'overflow': 'hidden'
        });
        fnCheckAllowLocationSelectioninCombo();
        fnProcessLoading(true);
        onFormLoad();

    })

    function fnShowPopup() {
        $(""#PopupAppointmentScheduler"").modal('show');
    }

    $(window).resize(function () {
        $("".appointmentSidebar,.waitlist ,.pullWaitlist"").css({
            'max-height': $(window).innerHeight() - 131,
            //'overflow': 'auto'
        });
    })

    $(""#btnMove"").click(function () {
        $("".appointmentSidebar"").toggleClass('active');
        $("".appointmentSidebar .form-group"").toggleClass('padright27');
        $(""#calendar"").parent().toggleClass('active');
    })
    function pullthewaitlist() {
        $(""");
            WriteLiteral(@".waitlist"").toggleClass('active');
        $("".calendarTimeline"").toggleClass('slightright');

        //if()
    }
    $('#PopupAppointmentScheduler').on('show.bs.modal', function () {

        $("".modal-body"").addClass('bg-lightgrey')
    });
    $('#PopupPatientSearch').on('show.bs.modal', function () {

        $("".blur"").addClass('active')
    });
    $('#PopupPatientSearch').on('hide.bs.modal', function () {

        $("".blur"").removeClass('active')
    });

    function onFormLoad() {

        $.get(getBaseURL() + '/Appointment/GetClinicConsultationTypeByBKey?businessKey='+$(""#cboBusinessKey"").val(),
            function (data) {
                var s = '<option value=""-1"">select</option>';
                for (var i = 0; i < data.length; i++) {
                    s += '<option data-clinictype=' + data[i].ClinicType + ' data-clinictypecode=' + data[i].ClinicTypeCode + ' data-consultationtype=' + data[i].ConsultationType + '  data-consultationtypecode=' + data[i].ConsultationTyp");
            WriteLiteral(@"eCode + '>' +
                        data[i].ClinicTypeDesc + ' - ' + data[i].ConsultationTypeDesc + '' + '</option>';
                }
                $(""#cboClinicType"").html(s);
                $(""#cboClinicType"").selectpicker('refresh');
                fnProcessLoading(false);
            });

        $.get(getBaseURL() + '/Appointment/GetSpecialtyList?businessKey=' + $('#cboBusinessKey').val(),
            function (data) {
                var s = '<option value=""-1"">select</option>';
                for (var i = 0; i < data.length; i++) {
                    if (data.length == 1)
                        s += '<option value=""' + data[i].SpecialtyId + '"" selected>' + data[i].SpecialtyDesc + '</option>';
                    else
                        s += '<option value=""' + data[i].SpecialtyId + '"" >' + data[i].SpecialtyDesc + '</option>';
                }
                $(""#cboSpecialty"").html(s);
                $(""#cboSpecialty"").selectpicker('refresh');
            });
    }");
            WriteLiteral(@"

    var _l_doctorId = [];
    function fnLoadDoctorScheduleList() {
        fnProcessLoading(true);
        calendar.destroy();
        fnInitializerCalendar();
       
        $(""#dvDoctorScheduleList"").html("""");

        var doctorId = 0;
        var ds = """";
        $.ajax({
            url: getBaseURL() + '/Appointment/GetDoctorScheduleListByClinicTypeSpecialtyDate',
            type: 'get',
            data: {
                clinicType: $(':selected', $('#cboClinicType')).data('clinictype'),
                consultationType: $(':selected', $('#cboClinicType')).data('consultationtype'),
                specialtyId: $(""#cboSpecialty"").val(),
                scheduleDate: $(""#dtAppointmentDate"").val(),
                businessKey:  $(""#cboBusinessKey"").val()
            },
            success: function (result) {
                $.each(result, function (i, item) {

                    if (doctorId != item.DoctorId) {
                        doctorId = item.DoctorId;
           ");
            WriteLiteral(@"             ds += ""<label id='lbl_"" + item.doctorId + ""' "";
                        if (item.IsOnLeave == true)
                            ds += "" style='color:#808080 !important;'"";
                        ds += "">"";
                        ds += ""<input type='checkbox' name='chkDoctor' id="" + item.DoctorId;
                        if (item.IsOnLeave == true)
                            ds += "" disabled='disabled' "";
                        ds += ""  /> Dr. "" + item.DoctorName; //+ ""</label>"";
                        if (item.DoctorRemark != null && item.DoctorRemark != """")
                            ds += ""<br/><span style='color: #e80d0d !important;font-size:14px;padding-left:20px'>"" + item.DoctorRemark + ""</span>"";
                        ds += ""</label>"";
                    }
                });
            },

        }).done(function () {
            $(""#dvDoctorScheduleList"").html(ds);
            fnProcessLoading(false);
            var l_doctorId = [];
            $('input[name");
            WriteLiteral(@"=""chkDoctor""]').on('change', function () {

                l_doctorId = [];
                $(""input:checkbox[name='chkDoctor']:checked"").each(function (e) {
                    l_doctorId.push($(this).attr(""id""));
                });
               
                _l_doctorId = l_doctorId;

                if (_l_doctorId.length > 0 && _l_doctorId != null) {
                    _specialtyId = $(""#cboSpecialty"").val();
                    _specialtyName = $('#cboSpecialty option:selected').text();

                    var params = {
                        clinicType: $(':selected', $('#cboClinicType')).data('clinictype'),
                        consultationType: $(':selected', $('#cboClinicType')).data('consultationtype'),
                        specialtyId: $(""#cboSpecialty"").val(),
                        doctorId: _l_doctorId.toString(),
                        scheduleDate: $(""#dtAppointmentDate"").val(),
                        businessKey: $('#cboBusinessKey').val()
             ");
            WriteLiteral(@"       };

                    calendar.destroy();

                    $.ajax({

                        url: getBaseURL() + '/Appointment/GetDoctorScheduleHours',
                        type: 'GET',
                        data: params,
                        datatype: 'json',
                        contenttype: 'application/json; charset=utf-8',
                        success: function (data) {
                            fnFullCalendarByResource(data.Duration, data.minDate, data.maxDate, data.businessHours);
                        },
                        error: function (request, error) {
                            alert(""Request: "" + JSON.stringify(request));
                        }
                    });

                    fnLoadDoctorWorkList();

                }
                else {
                    calendar.destroy();
                    fnInitializerCalendar();
                }
            });

            $('input[type=""checkbox""][name=""chkDoctor""]')");
            WriteLiteral(@".prop(""checked"", true).change();

        });
    }

    var calendarEl = document.getElementById('calendar');
    var calendar;

    var _specialtyId = null;
    var _specialtyName = null;
    var _doctorId = null;
    var _doctorName = null;
    var _appDate = null;
    var _appTime = null;
    var _appKey = 0;

    $(function () {
        fnInitializerCalendar();
    });

    document.addEventListener('DOMContentLoaded', function () {
        var Calendar = FullCalendar.Calendar;
        var Draggable = FullCalendarInteraction.Draggable;

        /* initialize the external events */
        var containerEl = document.getElementById('external-events');
        new Draggable(containerEl, {
            itemSelector: '.fc-event',
            eventData: function (eventEl) {
                return {
                    title: eventEl.innerText.trim(),
                    duration: '00:15'
                }
            }
        });
    });

    function fnInitializerCalendar(");
            WriteLiteral(@") {

        calendar = new FullCalendar.Calendar(calendarEl, {
            titleFormat: { // will produce something like ""Tuesday, September 18, 2018""
                month: 'long',
                year: 'numeric',
                day: 'numeric',
            },
            plugins: ['interaction', 'dayGrid', 'timeGrid', 'list', 'timelineWeek'],
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'timeGridDay,list,timeGridWeek,dayGridMonth'
            },
            themeSystem: 'bootstrap',
            defaultView: 'timeGridDay',
        });

        calendar.render();
    }


    function fnFullCalendarByResource(duration, startTime, endTime, resourcesbusinessHours) {

        var endDate = new Date($(""#dtAppointmentDate"").val());
        endDate.setDate(new Date($(""#dtAppointmentDate"").val()).getDate() + 6);

        calendar = new FullCalendar.Calendar(calendarEl, {
            titleFormat: { // will produce so");
            WriteLiteral(@"mething like ""Tuesday, September 18, 2018""
                month: 'short',
                year: 'numeric',
                day: 'numeric',
                //weekday: 'long',
            },
            plugins: ['interaction', 'dayGrid', 'timeGrid', 'list', 'timelineWeek', 'resourceTimeGrid'],
            header: {
                left: 'prev,next today btnReschedule',
                center: 'title',
                right: 'resourceTimeGridDay,resourceTimeGridFourDay,list,dayGridMonth,btnWorkList'
            },
            themeSystem: 'bootstrap',
            defaultView: 'resourceTimeGridDay',

            slotDuration: duration,
            minTime: startTime,
            maxTime: endTime,
            defaultDate: $(""#dtAppointmentDate"").val(),
            eventLimit: true,
            businessHours: true,
            selectable: true,
            selectConstraint: ""businessHours"",
            eventConstraint: ""businessHours"",
            timeZone: 'local',
            editable: ");
            WriteLiteral(@"true,
            slotEventOverlap: false,
            eventOverlap: false,
            eventResourceEditable: true,
            droppable: true,
            customButtons: {

                btnReschedule: {
                    text: 'Reschedule',
                    click: function () {
                        var moment = calendar.getDate();

                        bootbox.confirm({
                            message: ""Do you want to Push all appointment to wait list ?"",
                            buttons: {
                                confirm: {
                                    label: 'Yes',
                                    className: 'btn-success'
                                },
                                cancel: {
                                    label: 'No',
                                    className: 'btn-danger'
                                }
                            },
                            callback: function (result) {
                ");
            WriteLiteral(@"                if (result) {

                                    var l_doctorId = [];
                                    $(""input:checkbox[name='chkDoctor']:checked"").each(function (e) {
                                        l_doctorId.push($(this).attr(""id""));
                                    });

                                    var obj = {
                                        SpecialtyId: _specialtyId,
                                        DoctorId: l_doctorId.toString(),
                                        AppointmentDate: moment.toDateString(),
                                        BusinessKey: $('#cboBusinessKey').val()
                                    };
                                    $.ajax({
                                        url: getBaseURL() + '/Appointment/UpdateDoctorAppointmentToUnScheduleWorkOrder',
                                        type: 'POST',
                                        datatype: 'json',
                                  ");
            WriteLiteral(@"      contenttype: 'application/json; charset=utf-8',
                                        data: obj,
                                        async: false,
                                        success: function (response) {
                                            if (response.Status) {
                                                toastr.success(""All Appointment are push to waiting List"");
                                                fnRefreshScreen();
                                                fnLoadDoctorWorkList();
                                            }
                                            else
                                                toastr.error(response.Message)
                                        },
                                        error: function (error) {
                                            toastr.error(error.statusText)
                                        }
                                    });

                      ");
            WriteLiteral(@"          }
                            }
                        });
                    }
                },

                btnWorkList: {
                    text: 'Wait List',
                    click: function () {
                        pullthewaitlist();
                    }
                }
            },

            dayRender: function (info) {
                info.el.style.backgroundColor = 'white';
            },

            select: function (info) {
              
                if (info.view.type != ""dayGridMonth"") {

                    _doctorId = info.resource.id;
                    _doctorName = info.resource.title;

                    _appDate = new Date(info.startStr);
                    _appTime = new Date(info.startStr);
                    _appKey = 0;
                  
                    if (_appDate < new Date()) {
                        toastr.warning(""Appointment Cannot be booked for previous time slot."");
                        return;");
            WriteLiteral(@"
                    }

                    $.ajax({
                        url: getBaseURL() + '/Appointment/InsertIntoDoctorSlotBooking',
                        type: 'post',
                        async: false,
                        data: {
                            SpecialtyId: $(""#cboSpecialty"").val(),
                            DoctorId: _doctorId.toString(),
                            AppointmentDate: _appDate.toDateString(),
                            AppointmentFromTime: Converttimeformat(_appTime),
                            Duration: 5,
                            BusinessKey: $('#cboBusinessKey').val()
                        },
                        success: function (result) {
                            if (result.Status) {

                                if (result.Warning) {
                                    bootbox.confirm({
                                        message: result.WarningMessage + ""! Do you like to book appointment ?"",
                     ");
            WriteLiteral(@"                   buttons: {
                                            confirm: {
                                                label: 'Yes',
                                                className: 'btn-success'
                                            },
                                            cancel: {
                                                label: 'No',
                                                className: 'btn-danger'
                                            }
                                        },
                                        callback: function (result) {
                                            console.log('This was logged in the callback: ' + result);
                                            if (result) {
                                                fnShowAppointmentConfirmation();
                                            }
                                        }
                                    });
                        ");
            WriteLiteral(@"        }
                                else {
                                    fnShowAppointmentConfirmation();
                                }
                            }
                            else {
                                toastr.error(result.Message);
                            }
                        }
                    });
                }
            },

            dateClick: function (info) {
            },

            views: {
                resourceTimeGridFourDay: {
                    type: 'resourceTimeGrid',
                    duration: { days: 4 },
                    buttonText: '4 days'
                }
            },

            resources: resourcesbusinessHours,

            eventSources: [

                // your event source
                {
                    url: getBaseURL() + '/Appointment/GetPatientAppointmentByDoctorDate',
                    method: 'POST',
                    extraParams: {
                    ");
            WriteLiteral(@"    specialtyId: $(""#cboSpecialty"").val(),
                        doctorId: _l_doctorId.toString(),
                        businessKey:$('#cboBusinessKey').val()
                    },
                    failure: function () {
                        toastr.error('there was an error while fetching events!');
                    },
                    textColor: 'black' // a non-ajax option
                }
            ],

            eventDrop: function (info) {

                if (info.view.type != ""dayGridMonth"") {

                    var event = calendar.getEventById(info.event.id);
                    var resources = event.getResources();

                    _doctorId = resources.map(function (resource) { return resource.id });
                    _doctorName = resources.map(function (resource) { return resource.title });

                    var obj = {
                        SpecialtyId: _specialtyId,
                        SpecialtyDesc: _specialtyName,
                ");
            WriteLiteral(@"        DoctorId: _doctorId,
                        DoctorName: _doctorName,
                        AppointmentKey: info.event.id,
                        AppointmentDate: info.event.start.toDateString(),
                        AppointmentFromTime: Converttimeformat(new Date(info.event.start)),
                        Duration: 0,
                        BusinessKey: $('#cboBusinessKey').val()
                    };
                    var isConfirmed = false;
                    $.ajax({
                        url: getBaseURL() + '/Appointment/UpdatePatientAppointmentReschedule',
                        type: 'POST',
                        datatype: 'json',
                        contenttype: 'application/json; charset=utf-8',
                        data: obj,
                        async: false,
                        success: function (response) {

                            isConfirmed = response.Status;
                            if (isConfirmed) {
                         ");
            WriteLiteral(@"       bootbox.alert(""Appointment Rescheduled.Token Number : "" + response.QTokenKey);
                            }
                            else
                                toastr.error(response.Message)
                        },
                        error: function (error) {
                            toastr.error(error.statusText)
                        }
                    });

                    if (!isConfirmed) {
                        info.revert();
                    }

                }
                else
                    info.revert();
            },

            eventResize: function (info) {
                //  alert(info.event.title + "" end is now "" + info.event.end.toISOString());

                const start = new Date(info.event.start).getTime();
                const end = new Date(info.event.end).getTime();

                const diff = end - start;
                const min = Math.floor(diff / (1000 * 60));

                var event = cale");
            WriteLiteral(@"ndar.getEventById(info.event.id);
                var resources = event.getResources();
                _doctorId = resources.map(function (resource) { return resource.id });

                var obj = {
                    SpecialtyId: _specialtyId,
                    DoctorId: _doctorId,
                    AppointmentKey: info.event.id,
                    AppointmentDate: info.event.start.toDateString(),
                    //AppointmentFromTime: Converttimeformat(new Date(info.event.start).toLocaleTimeString()),
                    AppointmentFromTime: Converttimeformat(new Date(info.event.start)),
                    Duration: min,
                    BusinessKey: $('#cboBusinessKey').val()
                };
                var isConfirmed = false;
                $.ajax({
                    url: getBaseURL() + '/Appointment/UpdatePatientAppointmentReschedule',
                    type: 'POST',
                    datatype: 'json',
                    contenttype: 'application/json");
            WriteLiteral(@"; charset=utf-8',
                    data: obj,
                    async: false,
                    success: function (response) {
                        isConfirmed = true;
                    },
                    error: function (error) {
                        toastr.error(error.statusText);
                    }
                });
                if (!isConfirmed) {
                    info.revert();
                }
                else
                    toastr.success('Schedule changed')
            },

            eventClick: function (info) {

                if (info.event.id > 0) {

                    var event = calendar.getEventById(info.event.id);
                    var resources = event.getResources();

                    _doctorId = resources.map(function (resource) { return resource.id });
                    _doctorName = resources.map(function (resource) { return resource.title });

                    _appDate = new Date(info.event.start);
         ");
            WriteLiteral(@"           //_appTime = new Date(info.event.start).toLocaleTimeString();
                    _appTime = new Date(info.event.start);
                    _appKey = info.event.id;

                    var dialog = bootbox.dialog({
                        title: 'Appointment Detail',
                        message: ""<p style='text-align:center'> "" + info.event.title + "" On "" + _appDate.toDateString() + "" at "" + _appTime.toLocaleTimeString() + ""</p>"",
                        size: 'large',
                        buttons: {
                            cancel: {
                                label: ""Cancel Appointment!"",
                                className: 'btn-danger',
                                callback: function () {
                                    var btnCancel = bootbox.prompt({
                                        title: ""Reason For Cancellation"",
                                        inputType: 'textarea',
                                        callback: function (res");
            WriteLiteral(@"ult) {

                                            if (result === null) {
                                                return true;
                                            }
                                            else if (result === '') {
                                                toastr.warning(""Please enter the reason for cancellation"");
                                                return false;
                                            }
                                            else {
                                                var obj = {
                                                    AppointmentKey: _appKey,
                                                    SpecialtyDesc: _specialtyName,
                                                    DoctorName: _doctorName,
                                                    ReasonforCancellation: result,
                                                    BusinessKey: $('#cboBusinessKey').val()
                 ");
            WriteLiteral(@"                               };

                                                $.ajax({
                                                    url: getBaseURL() + '/Appointment/UpdatePatientAppointmentCancellation',
                                                    type: 'POST',
                                                    datatype: 'json',
                                                    contenttype: 'application/json; charset=utf-8',
                                                    data: obj,
                                                    async: true,
                                                    success: function (result) {
                                                        if (result.Status) {
                                                            toastr.success(""Cancelled"");
                                                            // fnSendSMSAppointmentCancellation(obj);
                                                            fnRefreshScreen();
 ");
            WriteLiteral(@"                                                           return true;
                                                        }
                                                        else {
                                                            toastr.error(result.Message);
                                                        }
                                                    },
                                                    error: function (error) {
                                                        toastr.error(error.statusText);
                                                        return false;
                                                    }
                                                });
                                            }
                                        }
                                    });
                                }
                            },
                            change: {
                                label:");
            WriteLiteral(@" ""Edit Patient Detail"",
                                className: 'btn-info',
                                callback: function () {
                                    fnShowAppointmentConfirmation();
                                }
                            },
                            worklist: {
                                label: ""Push to reschedule work list"",
                                className: 'btn-info',
                                callback: function () {

                                    fnPushAppointmentToWorkList();
                                }
                            },

                        }
                    });

                }
            },

            drop: function (info) {

                var eventInfo = JSON.parse(info.draggedEl.dataset.event);
                _isDragDropCompleted = false;

                _doctorId = info.resource.id;
                _doctorName = info.resource.title;

                var eventInfo");
            WriteLiteral(@" = JSON.parse(info.draggedEl.dataset.event);

                var obj = {
                    SpecialtyId: _specialtyId,
                    DoctorId: _doctorId,
                    DoctorName: _doctorName,
                    AppointmentKey: eventInfo.id,
                    AppointmentDate: new Date(info.dateStr).toDateString(),
                    AppointmentFromTime: Converttimeformat(new Date(info.dateStr)),
                    Duration: 0,
                    BusinessKey: $('#cboBusinessKey').val()
                };
                $.ajax({
                    url: getBaseURL() + '/Appointment/UpdatePatientAppointmentReschedule',
                    type: 'POST',
                    datatype: 'json',
                    contenttype: 'application/json; charset=utf-8',
                    data: obj,
                    async: false,
                    success: function (response) {

                        if (response.Status) {
                            bootbox.alert(""Appointmen");
            WriteLiteral(@"t Rescheduled.Token Number : "" + response.QTokenKey);
                            info.draggedEl.parentNode.removeChild(info.draggedEl);
                            _isDragDropCompleted = true;
                        }
                        else
                            toastr.error(response.Message)
                    },
                    error: function (error) {
                        toastr.error(error.statusText)
                    }
                });


            },

            eventReceive: function (info) {
                info.event.remove();
                fnRefreshScreen();
            },

        });


        calendar.render();

        $("".fc-today-button"").click(function () {
            calendar.refetchEvents();
        });
    }



    function Converttimeformat(time) {
        var hours = time.getHours();
        var minutes = time.getMinutes();
        return hours + "":"" + minutes + "":00"";
    }

    function fnRefreshScreen() {
       ");
            WriteLiteral(@" calendar.refetchEvents();
    }

    function fnPushAppointmentToWorkList() {

        var URL = getBaseURL() + '/Appointment/UpdatePatientAppointmentToUnScheduleWorkOrder';

        $.ajax({
            url: URL,
            type: 'POST',
            datatype: 'json',
            data: {
                AppointmentKey: _appKey,
                BusinessKey: $('#cboBusinessKey').val()
            },
            async: true,
            success: function (response) {
                if (response.Status) {
                    fnRefreshScreen();
                    fnLoadDoctorWorkList();
                    toastr.success(""Updated"");
                }
                else {
                    toastr.error(response.Message);
                }
            },
            error: function (error) {
                toastr.error(error.statusText);
            }
        });

    }


    function fnLoadDoctorWorkList() {
        var l_doctorId = [];
        $(""input:checkbox[name='ch");
            WriteLiteral(@"kDoctor']:checked"").each(function (e) {
            l_doctorId.push($(this).attr(""id""));
        });

        $.ajax({
            url: getBaseURL() + '/Appointment/GetDoctorUnScheduleWorkOrder',
            type: 'get',
            async: true,
            data: {
                specialtyId: $(""#cboSpecialty"").val(),
                doctorId: l_doctorId.toString(),
                businessKey: $('#cboBusinessKey').val()
            },
            success: function (result) {

                var ds = """";
                $.each(result, function (i, item) {
                    var titleText = item.StartDate + '<br/>';
                    titleText += item.PatientFirstName + ' ' + item.PatientLastName;
                    titleText += ' - ' + item.PatientMobileNumber;
                    var ev = {
                        id: item.AppointmentKey,
                        title: item.PatientFirstName + ' ' + item.PatientLastName + '(' + item.PatientMobileNumber + ')',
                     ");
            WriteLiteral(@"   duration: '02:00'
                    };

                    ds += ""<div class='fc-event' data-event='"" + JSON.stringify(ev) + ""' style='padding:4px' onclick='fnCancelUnScheduleAppointment("" + item.AppointmentKey + "")'>"" + titleText + ""</div>"";

                });
                $(""#external-events"").html(ds);
            }

        });
    }


    function fnUpdateAppointmentRescheduleConfirmation(appKey) {

        var URL = getBaseURL() + '/Appointment/UpdatePatientAppointmentToUnScheduleWorkOrder';

        $.ajax({
            url: URL,
            type: 'POST',
            datatype: 'json',
            contenttype: 'application/json; charset=utf-8',
            data: {
                AppointmentKey: _appKey,
                BusinessKey:$('#cboBusinessKey').val()
            },
            async: true,
            success: function (response) {

                if (response.Status) {

                    fnRefreshScreen();
                    toastr.success(""Updated");
            WriteLiteral(@""");
                }
                else {
                    toastr.error(response.Message);
                }
            },
            error: function (error) {
                toastr.error(error.statusText);
            }
        });

    }

    function fnCancelUnScheduleAppointment(appKey) {

        var btnCancel = bootbox.prompt({
            title: ""Reason For Cancellation"",
            inputType: 'textarea',
            callback: function (result) {

                if (result === null) {
                    return true;
                }
                else if (result === '') {
                    toastr.warning(""Please Enter the reason for cancellation"", ""e"");
                    return false;
                }
                else {

                    $.ajax({
                        url: getBaseURL() + '/Appointment/UpdatePatientAppointmentCancellation',
                        type: 'POST',
                        datatype: 'json',
                       ");
            WriteLiteral(@" contenttype: 'application/json; charset=utf-8',
                        data: {
                            AppointmentKey: appKey,
                            ReasonforCancellation: 'NA',
                            SpecialtyDesc: _specialtyName,
                            DoctorName: _doctorName,
                            BusinessKey: $('#cboBusinessKey').val()
                        },
                        async: true,
                        success: function (result) {
                            toastr.success(""Cancelled"");
                            fnLoadDoctorWorkList();
                            return true;
                        },
                        error: function (error) {
                            toastr.error(error.statusText);
                            return false;
                        }
                    });

                }
            }
        });

    }

    function fnCheckAllowLocationSelectioninCombo() {

        $.get(getBaseU");
            WriteLiteral(@"RL() + '/Appointment/GetApplicationRuleByProcesssID',
            function (data) {
                
                if (data != null)
                {
                    if (data.IsAllow) {
                        
                        $('#cboBusinessKey').prop('disabled', true);
                        $('#cboBusinessKey').selectpicker('refresh');
                    }
                    else {
                        $('#cboBusinessKey').prop('disabled', false);
                        $('#cboBusinessKey').selectpicker('refresh');
                       
                    }
                   
                }
               
            });
    }

</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IViewLocalizer Localizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
