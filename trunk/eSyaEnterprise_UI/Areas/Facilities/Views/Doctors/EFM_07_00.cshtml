@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "EFM_07_00";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/css/jquery.contextMenu.min.css" rel="stylesheet" />

@section scripts{
    <script src="~/js/Facilities/DoctorDetails.js"></script>
    <script src="~/js/tinymce/tinymce.js"></script>
    <script src="~/js/jquery.contextMenu.min.js"></script>

}

@{
    var userFormRole = (eSyaEnterprise_UI.Models.DO_UserFormRole)ViewBag.UserFormRole;
}

<script>
    var _userFormRole = JSON.parse('@Html.Raw(Json.Serialize(userFormRole))');

     var localization = {
        DoctorShortName: '@Localizer["DoctorShortName"]',
        DoctorName: '@Localizer["DoctorName"]',
        Gender: '@Localizer["Gender"]',
        Qualification: '@Localizer["Qualification"]',
        MobileNumber: '@Localizer["MobileNumber"]',
        DoctorClass: '@Localizer["DoctorClass"]',
        DoctorCategory: '@Localizer["DoctorCategory"]',
        Active: '@Localizer["Active"]',
        Actions: '@Localizer["Actions"]',
        AddEdit: '@Localizer["AddEdit"]',
        View: '@Localizer["View"]',
        Save: '@Localizer["Save"]',
        Update: '@Localizer["Update"]',
        AddEditoctordetails: '@Localizer["AddEditdoctordetails"]',
        Viewdoctordetails: '@Localizer["Viewdoctordetails"]',
    };
</script>

<section id="divGrid">
    <div class="row form-group">
        <div class="col-lg-12 col-xl-12 col-sm-12">
            <label>@Localizer["ChooseDoctorbyalphabets"]</label>
            <span class="dot">A</span>
            <span class="dot">B</span>
            <span class="dot">C</span>
            <span class="dot">D</span>
            <span class="dot">E</span>
            <span class="dot">F</span>
            <span class="dot">G</span>
            <span class="dot">H</span>
            <span class="dot">I</span>
            <span class="dot">J</span>
            <span class="dot">K</span>
            <span class="dot">L</span>
            <span class="dot">M</span>
            <span class="dot">N</span>
            <span class="dot">O</span>
            <span class="dot">P</span>
            <span class="dot">Q</span>
            <span class="dot">R</span>
            <span class="dot">S</span>
            <span class="dot">T</span>
            <span class="dot">U</span>
            <span class="dot">V</span>
            <span class="dot">W</span>
            <span class="dot">X</span>
            <span class="dot">Y</span>
            <span class="dot">Z</span>
            <span class="dot">All</span>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <table id="jqgDoctorDetails"></table>
            <div id="jqpDoctorDetails"></div>
        </div>
    </div>
</section>

<div class="modal fullscreen fade" id="PopupDoctorDetails" data-keyboard="false" data-backdrop="static">
    <form enctype="multipart/form-data" method="post">
        <div class="modal-dialog modal-lg" role="document" style="box-shadow:none;">
            <div class="modal-content">
                <div class="modal-header popupHeader">

                    <button type="button" class="close" data-dismiss="modal"> <i class="fa fa-times"></i></button>
                    <h4 class="modal-title">@Localizer["DoctorDetails"] </h4>
                </div>

                <div class="modal-body">
                    <div class="row padbot4">
                        <input type="text" id="txtdoctorId" style="display:none" />
                        <div class="col-lg-6 col-md-6 col-sm-12 col-12">
                            <div class="form-group">
                                <label>@Localizer["LanguagesKnown"] </label>
                                <textarea id="txtLanguagesKnown" class="form-control" rows="3" cols="4" autocomplete="off"></textarea>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-12 col-12">
                            <div class="form-group">
                                <label>@Localizer["Experience"] </label>
                                <textarea id="txtExperience" class="form-control" rows="3" cols="4" autocomplete="off"></textarea>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group">
                                <label>@Localizer["Certification"] </label>
                                <input type="text" id="txtCertification" class="form-control" autocomplete="off" />
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label>@Localizer["AboutDoctor"] </label>
                                <textarea id="txtAboutDoctor" class="form-control" rows="3" cols="4" autocomplete="off"></textarea>
                            </div>
                        </div>
                        @*<div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                            <div class="form-group">
                                <label> @Localizer["Photo"] <span class="lblInfo"> (Only Jpg & png format)</span></label>
                                <div class="imagedig" style="border:thin; padding-bottom:5px;" id="imgPhoto">
                                    <img id="imgPhotoimageblah" src="">
                                    <input class="mdl-textfield__input fullwidth FileUpload" id="Photoimage" type="file" name="file" onchange="readPhotoimage(this);" accept='image/*' enctype="multipart/form-data" style="border-bottom:none !important" />
                                </div>
                            </div>
                        </div>*@
                        <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                            <div class="default-checkbox">
                                <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect" for="chkActiveStatus">
                                    <input type="checkbox" id="chkActiveStatus" class="mdl-checkbox__input">
                                    <span class="mdl-checkbox__label">@Localizer["Active"]</span>
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-lg-12">
                            <button type="button" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent primary-button" id="btnSaveDoctorDetails" onclick="fnSaveDoctorDetails()">
                                @Localizer["Save"]
                            </button>
                            <button type="button" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect  cancel-button" data-dismiss="modal"> @Localizer["Cancel"]   </button>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<script>
    $(document).ready(function () {
        tinymceinit();
    })
    function tinymceinit() {
        tinymce.init({
            selector: 'textarea#txtAboutDoctor',
            height: 240,
            menubar: true,
            fontsize_formats: "8pt 10pt 12pt 14pt 18pt 24pt 36pt",
            plugins: ' image textpattern textcolor colorpicker insertdatetime lists table tabfocus searchreplace hr visualblocks ',
            toolbar: ' undo redo | fontselect fontsizeselect formatselect | link image | bold underline | alignleft aligncenter alignright | forecolor backcolor | insertdatetime | bullist numlist | table | searchreplace | hr',
            insertdatetime_formats: ["%H:%M:%S", "%d-%m-%Y", "%I:%M:%S %p", "%D"],
            image_title: true,
            automatic_uploads: true,

            file_picker_types: 'image',
            file_picker_callback: function (cb, value, meta) {
                var input = document.createElement('input');
                input.setAttribute('type', 'file');
                input.setAttribute('accept', 'image/*');

                input.onchange = function () {
                    var file = this.files[0];

                    var reader = new FileReader();
                    reader.onload = function () {

                        var id = 'blobid' + (new Date()).getTime();
                        var blobCache = tinymce.activeEditor.editorUpload.blobCache;
                        var base64 = reader.result.split(',')[1];
                        var blobInfo = blobCache.create(id, file, base64);
                        blobCache.add(blobInfo);

                        cb(blobInfo.blobUri(), { title: file.name });
                    };
                    reader.readAsDataURL(file);
                };

                input.click();
            },
            init_instance_callback: function (editor) {
                var freeTiny = document.querySelector('.tox .tox-notification--in');
                //freeTiny.style.display = 'none';
            }
        });
    }




    //var sizeLimit = 1024 * 2;

    //function readPhotoimage(input) {
    //    if (input.files && input.files[0]) {

    //        var sizeInMb = input.files[0].size / 1024;

    //        if (!(input.files[0].type.match(/image.*/))) {
    //            toastr.warning("Invalid format file uploaded");
    //            input.value = null;
    //            return;
    //        }
    //        if (sizeInMb > sizeLimit) {
    //            toastr.warning("User Photo file size should be smaller than 2 MB");
    //            input.value = null;
    //            return;
    //        }

    //        var reader = new FileReader();
    //        reader.onload = function (e) {
    //            document.getElementById('imgPhotoimageblah').src = e.target.result;
    //        }
    //        reader.readAsDataURL(input.files[0]);
    //    }
    //}

    //function readDSimage(input) {
    //    if (input.files && input.files[0]) {

    //        var sizeInMb = input.files[0].size / 1024;

    //        if (!(input.files[0].type.match(/image.*/))) {
    //            toastr.warning("Invalid format file uploaded");
    //            input.value = null;
    //            return;
    //        }
    //        if (sizeInMb > sizeLimit) {
    //            toastr.warning("User Signature file size should be smaller than 2 MB");
    //            input.value = null;
    //            return;
    //        }

    //        var reader = new FileReader();
    //        reader.onload = function (e) {
    //            document.getElementById('imgDSimageblah').src = e.target.result;
    //        }
    //        reader.readAsDataURL(input.files[0]);
    //    }
    //}


</script>


