@using Microsoft.AspNetCore.Mvc.Localization

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "Report Header";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@section scripts{
    <script src="~/js/Config/ReportHeader.js"></script>

    <script src="~/js/tinymce/tinymce.js"></script>
   
}

@{
    var userFormRole = (eSyaEnterprise_UI.Models.DO_UserFormRole)ViewBag.UserFormRole;
}
<script>
    var _userFormRole = JSON.parse('@Html.Raw(Json.Serialize(userFormRole))');

      var localization = {
        ReportHeader: '@Localizer["ReportHeader"]',
        Active: '@Localizer["Active"]',
        Actions: '@Localizer["Actions"]',
        Edit: '@Localizer["Edit"]',
        View: '@Localizer["View"]',
    };
</script>

<div class="row padbot10">
    <div class="col-lg-3  col-md-3 col-sm-12 col-xs-12">

        <div class="form-group">
            <label class="lable-color">@Localizer["BusinessLocation"] </label>
            <div>
            
                @await Component.InvokeAsync("UserBusinessLocation")
            </div>
        </div>
    </div>
    <div class="col-lg-12 col-md-12 col-sm-12">
        <table id="jqgGeneralReport"></table>
        <div id="jqpGeneralReport"></div>
    </div>
</div>

<div class="modal fullscreen fade" id="PopupGeneralReport" data-keyboard="false" data-backdrop="static">


    <div class="modal-dialog modal-lg" role="document" style="box-shadow:none;">
        <div class="modal-content">
            <div class="modal-header popupHeader">
                <button type="button" class="close" data-dismiss="modal" onclick="closeFullscreen()"> <i class="fa fa-times"></i></button>
                <h4 class="modal-title">@Localizer["GeneralReport"] </h4>
            </div>


            <div class="modal-body">
                <div class="row padbot4">
                    <div class="col-sm-12">
                        <input type="text" class="form-control" id="txtReportHeaderId" style="display:none">
                        <input type="text" class="form-control" id="txtBusinessKey" style="display:none">
                    </div>
                    <div class="col-lg-12">
                        <div class="form-group">
                            <label>@Localizer["ReportHeaderDescription"]  </label>
                            <input id="txtReportHeaderDesc" class="form-control" type="text" autocomplete="off" maxlength="100" />

                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="form-group">
                            <label>@Localizer["ReportHeaderTemplate"] </label>
                            @*<textarea id="txtReportHeaderTemplate" class="form-control" rows="3" cols="4" autocomplete="off"></textarea>*@
                            <textarea id="txtReportHeaderTemplate"></textarea>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="form-group">
                            <label>@Localizer["HeaderHeight(ininches)"] </label>
                            <input id="txtHeaderHeight" class="form-control" type="text" autocomplete="off" maxlength="5" data-inputmask="'mask': '9', 'repeat': 10, 'greedy' : false" />

                        </div>
                    </div>
                    <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                        <div class="default-checkbox">

                            <label class="mdl-checkbox mdl-js-checkbox" for="chkIsHeaderInvisible">
                                <input type="checkbox" id="chkIsHeaderInvisible"
                                       class="mdl-checkbox__input">
                                <span class="mdl-checkbox__label">@Localizer["IsHeaderInvisible"] ?</span>
                            </label>
                        </div>

                    </div>
                    <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                        <div class="default-checkbox">
                            <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect" for="chkActiveStatus">
                                <input type="checkbox" id="chkActiveStatus" class="mdl-checkbox__input">
                                <span class="mdl-checkbox__label">@Localizer["Active"]</span>
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-lg-12">
                        <button type="button" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent primary-button" id="btnSaveGeneralReport" onclick="fnSaveGeneralReport()">
                            @Localizer["Save"]
                        </button>
                        <button type="button" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect  cancel-button" data-dismiss="modal" onclick="fnClosePopUp()">@Localizer["Cancel"] </button>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $("#lblFormName").text("General Report Header");
        tinymceinit();
    })
    function tinymceinit() {
        tinymce.init({
            selector: 'textarea#txtReportHeaderTemplate',
            height: 300,
            menubar: true,
            fontsize_formats: "8pt 10pt 12pt 14pt 18pt 24pt 36pt",
            plugins: ' image textpattern textcolor colorpicker insertdatetime lists table tabfocus searchreplace hr visualblocks ',
            toolbar: ' undo redo | fontselect fontsizeselect formatselect | link image | bold underline | alignleft aligncenter alignright | forecolor backcolor | insertdatetime | bullist numlist | table | searchreplace | hr',
            insertdatetime_formats: ["%H:%M:%S", "%d-%m-%Y", "%I:%M:%S %p", "%D"],
            image_title: true,
            automatic_uploads: true,

            file_picker_types: 'image',
            file_picker_callback: function (cb, value, meta) {
                var input = document.createElement('input');
                input.setAttribute('type', 'file');
                input.setAttribute('accept', 'image/*');

                input.onchange = function () {
                    var file = this.files[0];

                    var reader = new FileReader();
                    reader.onload = function () {

                        var id = 'blobid' + (new Date()).getTime();
                        var blobCache = tinymce.activeEditor.editorUpload.blobCache;
                        var base64 = reader.result.split(',')[1];
                        var blobInfo = blobCache.create(id, file, base64);
                        blobCache.add(blobInfo);

                        cb(blobInfo.blobUri(), { title: file.name });
                    };
                    reader.readAsDataURL(file);
                };

                input.click();
            },
            init_instance_callback: function (editor) {
                var freeTiny = document.querySelector('.tox .tox-notification--in');
                //freeTiny.style.display = 'none';
            }
        });
    }
</script>



