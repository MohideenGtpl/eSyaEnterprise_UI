var EmployeeNamePrefix = "";
var EmployeeNo;

$(document).ready(function () {
    $(".dot").click(function () {
        $('.dot').removeClass('active');
        EmployeeNamePrefix = $(this).text();
        fnGridEmployeeDetails(EmployeeNamePrefix);
        $(this).addClass('active');
    });
    fnGridEmployeeDetails(EmployeeNamePrefix);
});


function fnBusinessKeyChanges() {
    fnGridEmployeeDetails(EmployeeNamePrefix);
}

function fnGridEmployeeDetails(EmployeeNamePrefix) {
    $("#jqgEmployeeDetails").jqGrid('GridUnload');
    $("#jqgEmployeeDetails").jqGrid({
        url: getBaseURL() + '/EmployeeExpat/GetEmployeeListByNamePrefix?BusinessKey=' + $("#cboBusinessLocation").val() + '&employeeNamePrefix=' + EmployeeNamePrefix,
        datatype: 'json',
        //mtype: 'Post',
        ajaxGridOptions: { contentType: 'application/json; charset=utf-8' },
        jsonReader: { repeatitems: false, root: "rows", page: "page", total: "total", records: "records" },
        colNames: ["Business Key", "Employee Number", "Employee ID", "Biometric Code", "Employee Name", "Email ID", "Mobile Number", "Active Status", "Actions"],
        colModel: [
            { name: "BusinessKey", width: 70, align: 'left', editable: true, editoptions: { maxlength: 6 }, resizable: false, hidden: true },
            { name: "EmployeeNumber", width: 110, align: 'left', editable: true, editoptions: { maxlength: 6 }, resizable: false, hidden: true },
            { name: "EmployeeID", width: 110, align: 'left', editable: true, editoptions: { maxlength: 50 }, resizable: false, hidden: false },
            { name: "BiometricID", width: 110, align: 'left', editable: true, editoptions: { maxlength: 50 }, resizable: false },
            { name: "EmployeeName", width: 110, align: 'left', editable: true, editoptions: { maxlength: 50 }, resizable: false },
            { name: "EmailID", width: 120, align: 'left', editable: true, editoptions: { maxlength: 50 }, resizable: false },
            { name: "MobileNumber", width: 110, align: 'left', editable: true, editoptions: { maxlength: 50 }, resizable: false },
            { name: "ActiveStatus", width: 65, editable: true, align: 'center', edittype: "checkbox", formatter: 'checkbox', editoptions: { value: "true:false" } },
            {
                name: 'edit', search: false, align: 'left', width: 88, sortable: false, resizable: false,
                formatter: function (cellValue, options, rowdata, action) {
                    return '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title="Edit" id="jqgEdit" onclick="return fnEditEmpDetails(event,\'edit\');"><i class="fa fa-edit"></i>' + 'Edit' + '</button>' +
                        '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title="View" onclick="return fnEditEmpDetails(event,\'view\');"><i class="far fa-eye"></i>' + 'View' + '</button>'
                }
            },
        ],
        pager: "#jqpEmployeeDetails",
        rowNum: 10,
        rowList: [10, 20, 50, 100],
        loadonce: true,
        viewrecords: true,
        gridview: true,
        rownumbers: true,
        height: 'auto',
        scroll: false,
        width: 'auto',
        autowidth: false,
        shrinkToFit: false,
        forceFit: false,
        loadComplete: function (data) {
            SetGridControlByAction();
        },

    }).jqGrid('navGrid', '#jqpEmployeeDetails', { add: false, edit: false, search: false, del: false, refresh: false, refreshtext: 'Reload' }).jqGrid('navButtonAdd', '#jqpEmployeeDetails', {
        caption: '<span class="fa fa-sync"></span> Refresh', buttonicon: "none", id: "custRefresh", position: "first", onClickButton: fnGridRefreshEmployeeDetails
    }).jqGrid('navButtonAdd', '#jqpEmployeeDetails', {
        caption: '<span class="fa fa-plus" data-toggle="modal"></span> Add', buttonicon: 'none', id: 'jqgAdd', position: 'first', onClickButton: fnAddEmployeeDetails
    });

    $(window).on("resize", function () {
        var $grid = $("#jqgEmployeeDetails"),
            newWidth = $grid.closest(".codetypecontainer").parent().width();
        $grid.jqGrid("setGridWidth", newWidth, true);
    });
    fnAddGridSerialNoHeading();
}

$('#v-pills-tab a').on('click', function (e) {
    var activeTabName = "";
    e.preventDefault();
    $(".tab-pane").removeClass('show active');
    activeTabName = $(this).attr("href");
    $(activeTabName).addClass("show");
});

function SetGridControlByAction() {
    //if (_userFormRole.IsInsert === false) {
    //    $('#jqgAdd').addClass('ui-state-disabled');
    //}
    //if (_userFormRole.IsEdit === false) {
    //    var eleDisable = document.querySelectorAll('#jqgEdit');
    //    for (var i = 0; i < eleDisable.length; i++) {
    //        eleDisable[i].disabled = true;
    //        eleDisable[i].className = "ui-state-disabled";
    //    }
    //}
}

function fnGridRefreshEmployeeDetails() {
    $("#jqgEmployeeDetails").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
}

function fnEditEmpDetails(e, actiontype) {
    var rowid = $(e.target).parents("tr.jqgrow").attr('id');
    var rowData = $('#jqgEmployeeDetails').jqGrid('getRowData', rowid);
    EmployeeNo = rowData.EmployeeNumber;
    $("#txtEmployeeNumber").val(EmployeeNo);
    
    if (EmployeeNo !== '' && EmployeeNo !== undefined) {
        $("#divForm").css("display", "block");
        $("#divGrid").hide();
        fnFillEmployeeCreationValues();
    }

    if (actiontype.trim() == "edit") {
              
    }
    if (actiontype.trim() == "view") {
        
    }
}

function fnFillEmployeeCreationValues() {
    
    if ($("#txtEmployeeNumber").val() !== '' && $("#txtEmployeeNumber").val() !== undefined) {
        
        $.ajax({
            async: false,
            url: getBaseURL() + '/EmployeeExpat/GetEmployeeDetails?BusinessKey=' + $("#cboBusinessLocation").val() + '&EmployeeNumber=' + $("#txtEmployeeNumber").val(),
            type: 'post',
            datatype: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                $('#txtEmployeeId').val(result.EmployeeID);
                $('#txtBiometriccode').val(result.BiometricID);
                $("#cboEmployeegroup").val(result.EmployeeGroup);
                $("#cboEmployeegroup").selectpicker('refresh');
                $("#cboTitle").val(result.Title);
                $("#cboTitle").selectpicker('refresh');
                $('#txtEmployeename').val(result.EmployeeName);
                $("#cboGender").val(result.Gender);
                $("#cboGender").selectpicker('refresh');
                $('#txtMobilenumber').val(result.MobileNumber);
                $('#txtEmailId').val(result.EmailID);
                $("#cboWorkStatus").val(result.WorkStatus);
                $("#cboWorkStatus").selectpicker('refresh');

                if (result.ExemptedFromAttendance === true) {
                    $("#chkExemptedfromATT").parent().addClass("is-checked");
                }
                else {
                    $("#chkExemptedfromATT").parent().removeClass("is-checked");
                }

                $("#cboEmployeeStatus").val(result.EmployeeStatus);
                $("#cboEmployeeStatus").selectpicker('refresh');

                if (result.DateOfJoining !== null) {
                    setDate($('#txtDateofjoining'), result.DateOfJoining);
                }
                else {
                    $('#txtDateofjoining').val('');
                }

                if (result.DateOfJoining !== null) {
                    setDate($('#txtDateofconfirmation'), result.DateOfJoining);
                }
                else {
                    $('#txtDateofconfirmation').val('');
                }
                
                if (result.DateOfResignation !== null) {
                    setDate($('#txtDateofresignation'), result.DateOfResignation);
                }
                else {
                    $('#txtDateofresignation').val('');
                }

                if (result.DateOfRelieving !== null) {
                    setDate($('#txtDateofrelieving'), result.DateOfRelieving);
                }
                else {
                    $('#txtDateofrelieving').val('');
                }

                if (result.Termination === true) {
                    $("#chkIsTerminated").parent().addClass("is-checked");
                }
                else {
                    $("#chkIsTerminated").parent().removeClass("is-checked");
                }

                if (result.DateOfTermination !== null) {
                    setDate($('#txtDateoftermination'), result.DateOfTermination);
                }
                else {
                    $('#txtDateoftermination').val('');
                }

                $('#txtTerminationReason').val(result.TerminationReason);


                if (result.EmployeeImage !== null && result.EmployeeImage !== "") {
                    document.getElementById('imgPhoto').innerHTML = '<img id="imgPhotoimageblah" src=" ' + result.EmployeeImage + '"  alt=" &nbsp; User Image"   /> <input class="fileInput" id="FileUpload1" type="file" name="file" onchange="readPhotoimage(this);" accept="image/*" enctype="multipart/form-data" />';
                }
            }
        });
    }
}
function fnAddEmployeeDetails() {
    $("#divForm").css("display", "block");
    $("#divGrid").hide();
}

function validateEmployeeDetails() {
    var EmailPattern = /^\w+([-+.'][^\s]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;

    if ($("#txtEmployeeId").val().trim().length <= 0) {
        toastr.warning("Please Enter Employee Id");
        ('#txtEmployeeId').focus();
        return false;
    }
    if ($("#cboEmployeegroup").val() === "0" || $("#cboEmployeegroup").val() === "") {
        toastr.warning("Please Select Employee Group");
        $('#cboEmployeegroup').focus();
        return false;
    }
    if ($("#txtEmailId").val().trim().length != 0 && !EmailPattern.test($("#txtEmailId").val())) {
        toastr.warning("Email ID is Not Valid");
        $('#txtEmailId').focus();
        return false;
    }
    if ($("#cboTitle").val() === "0" || $("#cboTitle").val() === "") {
        toastr.warning("Please Select Title");
        $('#cboTitle').focus();
        return false;
    }
    if ($("#txtEmployeename").val().trim().length <= 0) {
        toastr.warning("Please Enter Employee Name");
        $('#txtMobileNo').focus();
        return false;
    }
    if ($("#cboGender").val() === "0" || $("#cboGender").val() === "") {
        toastr.warning("Please Select Gender");
        $('#cboGender').focus();
        return false;
    }
    if ($("#txtMobilenumber").val().trim().length <= 0) {
        toastr.warning("Please Enter Mobile Number");
        $('#txtMobilenumber').focus();
        return false;
    }
    if ($("#cboWorkStatus").val() === "0" || $("#cboWorkStatus").val() === "") {
        toastr.warning("Please Select Work Status");
        $('#cboWorkStatus').focus();
        return false;
    }
    if ($("#cboEmployeeStatus").val() === "0" || $("#cboEmployeeStatus").val() === "") {
        toastr.warning("Please Select Employee Status");
        $('#cboEmployeeStatus').focus();
        return false;
    }
    if ($("#cboEmployeeStatus").val() === "0" || $("#cboEmployeeStatus").val() === "") {
        toastr.warning("Please Select Employee Status");
        $('#cboEmployeeStatus').focus();
        return false;
    }
    if ($("#txtDateofjoining").val().trim().length <= 0) {
        toastr.warning("Please Enter Date of joining");
        $('#txtDateofjoining').focus();
        return false;
    }
}

function fnSaveEmployeeDetails() {
    if (validateEmployeeDetails() === false) {
        return;
    }

    $("#btnSaveEmployeeDetails").html('<i class="fa fa-spinner fa-spin"></i> wait');
    $("#btnSaveEmployeeDetails").attr('disabled', true);

    var file = ($('#imgPhoto img').attr('src').indexOf('TakePicture.jpg') > 0) ? null : $('#imgPhoto img').attr('src');// Data URI

    var employeeNumber = $("#txtEmployeeNumber").val();
    var employeeMaster;
    if (employeeNumber === null || employeeNumber === "") {
        $("#btnSaveUserMaster").attr('disabled', true);
        employeeMaster = {
            BusinessKey: $("#cboBusinessLocation").val(),
            EmployeeID: $("#txtEmployeeId").val(),
            EmployeeNumber: 0,
            BiometricID: $("#txtBiometriccode").val(),
            EmployeeGroup: $("#cboEmployeegroup").val(),
            Title: $("#cboTitle").val(),
            EmployeeName: $("#txtEmployeename").val(),
            Gender: $("#cboGender").val(),
            MobileNumber: $("#txtMobilenumber").val(),
            EmailID: $("#txtEmailId").val(),
            WorkStatus: $("#cboWorkStatus").val(),
            ExemptedFromAttendance: $("#chkExemptedfromATT").parent().hasClass("is-checked"),
            EmployeeStatus: $("#cboEmployeeStatus").val(),
            DateOfJoining: $("#txtDateofjoining").val(),
            DateOfConfirmation: $("#txtDateofconfirmation").val(),
            DateOfResignation: $("#txtDateofresignation").val(),
            DateOfRelieving: $("#txtDateofrelieving").val(),
            Termination: $("#chkIsTerminated").parent().hasClass("is-checked"),
            DateOfTermination: $("#txtDateoftermination").val(),
            DateOfRelieving: $("#txtDateofrelieving").val()
        };
    }
    else {
        employeeMaster = {
            BusinessKey: $("#cboBusinessLocation").val(),
            EmployeeID: $("#txtEmployeeId").val(),
            EmployeeNumber: $("#txtEmployeeNumber").val(),
            BiometricID: $("#txtBiometriccode").val(),
            EmployeeGroup: $("#cboEmployeegroup").val(),
            Title: $("#cboTitle").val(),
            EmployeeName: $("#txtEmployeename").val(),
            Gender: $("#cboGender").val(),
            MobileNumber: $("#txtMobilenumber").val(),
            EmailID: $("#txtEmailId").val(),
            WorkStatus: $("#cboWorkStatus").val(),
            ExemptedFromAttendance: $("#chkExemptedfromATT").parent().hasClass("is-checked"),
            EmployeeStatus: $("#cboEmployeeStatus").val(),
            DateOfJoining: $("#txtDateofjoining").val(),
            DateOfConfirmation: $("#txtDateofconfirmation").val(),
            DateOfResignation: $("#txtDateofresignation").val(),
            DateOfRelieving: $("#txtDateofrelieving").val(),
            Termination: $("#chkIsTerminated").parent().hasClass("is-checked"),
            DateOfTermination: $("#txtDateoftermination").val(),
            DateOfRelieving: $("#txtDateofrelieving").val()
        };
    }

    $.ajax({
        async: false,
        url: getBaseURL() + '/EmployeeExpat/InsertOrUpdateEmployeeMaster',
        type: 'POST',
        data: {
            obj: employeeMaster,
            file: file
        },
        datatype: 'json',
        success: function (response) {
            if (response.Status) {
                toastr.success(response.Message);
                $("#txtEmployeeNumber").val(response.ID);
                EmployeeNo = $("#txtEmployeeNumber").val();
            }
            else {
                toastr.error(response.Message);
            }
            $("#btnSaveEmployeeDetails").html('Save');
            $("#btnSaveEmployeeDetails").attr('disabled', false);
        },
        error: function (error) {
            toastr.error(error.statusText);
            $("#btnSaveEmployeeDetails").attr("disabled", false);
            $("#btnSaveEmployeeDetails").html('Save');
        }
    });
}

function fnCloseEmployeeDetails() {
    $("#divGrid").show();
    $("#divForm").css("display", "none");
}