@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
<div class="row">
    <div class="col-lg-4 col-md-4 col-sm-6">
        <div class="form-group">
            <label class="lable-color">Location</label>
            <select class="selectpicker" data-live-search="true" id="cboLocation" title="Select" asp-items="@ViewBag.BusinessKeyList" onchange="fnLoadSpecialty()"></select>
        </div>
    </div>
    <div class="col-lg-4 col-md-4 col-sm-6">
        <div class="form-group">
            <label class="lable-color">Specialty</label>
            <select class="selectpicker" data-live-search="true" id="cboSpecialty" title="Select"></select>
        </div>
    </div>
    <div class="col-lg-2  col-md-3 col-sm-12 col-xs-12">
        <div class="default-checkbox">
            <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect" for="chkSpecialtyActiveStatus">
                <input type="checkbox" id="chkSpecialtyActiveStatus" class="mdl-checkbox__input">
                <span class="mdl-checkbox__label">Active</span>
            </label>
        </div>
    </div>
    <div class="col-lg-2 col-md-3 col-sm-6 padtop20 padbot20">
        <button type="button" class="btn btn-primary" id="btnDoctorSpecialtySave" onclick="fnSaveDoctorSpecialtyLink()"><i class="fa fa-plus"></i> Save</button>
    </div>
</div>
<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <table id="jqgDoctorSpecialtyLink"> </table>
        <div id="jqpDoctorSpecialtyLink"></div>
    </div>
</div>

<div class="row  form-group">
    <div class="col-lg-12 col-md-12 col-sm-12 text-center">
        <hr />
        <button type="button" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent btn-back mr-10 c-white" onclick="fnGridRefreshDoctorMaster()"><i class="fas fa-chevron-left"></i> Back</button>
        
    </div>
</div>


<script>

    $(document).ready(function () {
        //fnGridDoctorSpecialtyLink();
    });

    function fnGridDoctorSpecialtyLink() {
        $("#jqgDoctorSpecialtyLink").jqGrid('GridUnload');
        $("#jqgDoctorSpecialtyLink").jqGrid(
            {
                url: getBaseURL() + '/Doctor/GetSpecialtyListByDoctorId?doctorId=' + $('#txtDoctorId').val(),
                datatype: 'json',
                mtype: 'POST',
                //ajaxGridOptions: { contentType: 'application/json; charset=utf-8' },
                colNames: ['BusinessKey', 'Business Location', 'SpecialtyID', 'Specialty','Status', 'Actions'],
                colModel: [
                    { name: "BusinessKey", width: 170, editable: true, align: 'left', hidden: true },
                    { name: "LocationDesc", width: 170, editable: true, align: 'left', hidden: false },
                    { name: 'SpecialtyID', width: 170, resizable: false, hidden: true },
                    { name: 'SpecialtyDesc', width: 170, resizable: false },
                    {
                        name: 'ActiveStatus', index: 'ActiveStatus', width: 70, resizable: false, align: 'center', formatter: "checkbox", edittype: "checkbox", editoptions: { value: "true:false" }
                    },
                    {
                        name: 'delete', search: false, align: 'center', width: 100, sortable: false, resizable: false,
                        formatter: function (cellValue, options, rowdata, action) {
                            return '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid cancel-button" id="jqgDSPDelete", onclick="return fnDeleteSpecialty(event)"><i class="far fa-trash-alt"></i> Delete </button>'
                        }
                    },
                ],
                rowNum: 10,
                rowList: [10, 20, 50, 100],
                loadonce: true,
                pager: "#jqpDoctorSpecialtyLink",
                viewrecords: true,
                gridview: true,
                rownumbers: true,
                height: 'auto',
                width: 'auto',
                autowidth: false,
                shrinkToFit: false,
                forceFit: false,
                scroll: false,
                scrollOffset: 0,
                loadComplete: function (data) {
                    SetDoctorSpecialtyGridControlByAction("jqgDoctorSpecialtyLink");
                }
            }).jqGrid('navGrid', '#jqpDoctorSpecialtyLink', { add: false, edit: false, search: false, del: false, refresh: false });
    }



    function fnGridRefreshDoctorSpecialtyLinkGrid() {
        $("#jqgDoctorSpecialtyLink").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid')
    }
    function fnDeleteSpecialty(e) {

        var rowid = $(e.target).parents("tr.jqgrow").attr('id');
        var rowData = $('#jqgDoctorSpecialtyLink').jqGrid('getRowData', rowid);
        //alert(JSON.stringify(rowData));
        if (rowData != null) {

            var obj = {
                BusinessKey: rowData.BusinessKey,
                SpecialtyID: rowData.SpecialtyID,
                DoctorID: $('#txtDoctorId').val(),
                ActiveStatus: false
            }

            $.ajax({
                url: getBaseURL() + '/Doctor/UpdateDoctorSpecialtyLink',
                type: 'POST',
                datatype: 'json',
                data: { obj },
                success: function (response) {
                    if (response != null) {
                        if (response.Status) {
                            toastr.success(response.Message);
                            fnGridDoctorSpecialtyLink();
                            
                        }
                        else {
                            toastr.error(response.Message);
                            
                        }
                    }
                    else {
                        toastr.error(response.Message);
                        
                    }
                },
                error: function (error) {
                    toastr.error(error.statusText);
                    
                }
            });
        }
    }

    function fnLoadSpecialty() {

        if ($('#cboLocation').val() == '')
            return;
        
        $.ajax({
            url: getBaseURL() + '/Specialty/GetSpecialtyListForBusinessKey?businessKey=' + $('#cboLocation').val(),
            type: 'POST',
            datatype: 'json',
            async: false,
            success: function (response) {
                if (response != null) {
                    var options = $("#cboSpecialty");
                    $("#cboSpecialty").empty();

                    $.each(response, function () {
                        options.append($("<option />").val(this.SpecialtyID).text(this.SpecialtyDesc));
                    });
                    $('#cboSpecialty').selectpicker('refresh');
                    $('#chkSpecialtyActiveStatus').parent().addClass("is-checked");
                }
                else {

                }

            },
            error: function (error) {
                toastr.error(error.statusText);

            }
        });
    }

    function fnSaveDoctorSpecialtyLink() {
        if ($('#txtDoctorId').val() == '' || $('#txtDoctorId').val() == '0') {
            toastr.warning("Please Select Doctor");
            return;
        }
        if ($('#cboLocation').val() == '') {
            toastr.warning("Please Select Location");
            $('#cboLocation').focus();
            return;
        }
        if ($('#cboSpecialty').val() == '') {
            toastr.warning("Please Select Specialty");
            $('#cboSpecialty').focus();
            return;
        }
        if ($('#chkSpecialtyActiveStatus').parent().hasClass("is-checked") == false) {
            toastr.warning("Please Select Active Status");
            $('#chkSpecialtyActiveStatus').focus();
            return;
        }
        //alert($('#chkSpecialtyActiveStatus').parent().hasClass("is-checked"));

        $("#btnDoctorSpecialtySave").attr("disabled", true);

        var obj = {
            BusinessKey: $('#cboLocation').val(),
            SpecialtyID: $('#cboSpecialty').val(),
            DoctorID: $('#txtDoctorId').val(), 
            ActiveStatus: $('#chkSpecialtyActiveStatus').parent().hasClass("is-checked")
        }

        $.ajax({
            url: getBaseURL() + '/Doctor/InsertDoctorSpecialtyLink',
            type: 'POST',
            datatype: 'json',
            data: { obj },
            success: function (response) {
                if (response != null) {
                    if (response.Status) {
                        toastr.success(response.Message);
                        fnGridDoctorSpecialtyLink();
                        $('#cboSpecialty').val('');
                        $('#cboSpecialty').selectpicker('refresh');
                        $("#btnDoctorSpecialtySave").attr('disabled', false);
                    }
                    else {
                        toastr.error(response.Message);
                        $("#btnDoctorSpecialtySave").attr('disabled', false);
                    }
                }
                else {
                    toastr.error(response.Message);
                    $("#btnDoctorSpecialtySave").attr('disabled', false);
                }
            },
            error: function (error) {
                toastr.error(error.statusText);
                $("#btnDoctorSpecialtySave").attr("disabled", false);
            }
        });
    }

    function SetDoctorSpecialtyGridControlByAction(jqg) {


        if (_formDelete === false) {
            var eleDisable = document.querySelectorAll('#jqgDSPDelete');
            for (var i = 0; i < eleDisable.length; i++) {
                eleDisable[i].disabled = true;
                eleDisable[i].className = "ui-state-disabled";
            }

        }
    }

</script>
