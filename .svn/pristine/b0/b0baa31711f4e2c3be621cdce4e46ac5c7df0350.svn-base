using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using eSyaEnterprise_UI.ActionFilter;
using eSyaEnterprise_UI.Areas.Config.Data;
using eSyaEnterprise_UI.Areas.Config.Models;
using eSyaEnterprise_UI.Models;
using eSyaEnterprise_UI.Utility;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.Rendering;

namespace eSyaEnterprise_UI.Areas.eSyaConfig.Controllers
{
    public class SMSEngineController : Controller
    {
        private readonly IeSyaConfigAPIServices _eSyaConfigAPIServices;
        public SMSEngineController(IeSyaConfigAPIServices eSyaConfigAPIServices)
        {
            _eSyaConfigAPIServices = eSyaConfigAPIServices;
        }

        #region SMS Variables
        
        [Area("eSyaConfig")]
        [ServiceFilter(typeof(ViewBagActionFilter))]
        public IActionResult V_117_00()
        {
            return View();
        }

        /// <summary>
        ///Get SMS Variable Information
        /// </summary>
        [HttpPost]
        public JsonResult GetSMSVariableInformation()
        {
            try
            {
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_SMSVariable>>("SMSEngine/GetSMSVariableInformation").Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        /// Insert Into SMS Variable
        /// </summary>
        [HttpPost]
        public JsonResult InsertIntoSMSVariable(DO_SMSVariable sm_sv)
        {
            try
            {
                sm_sv.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                sm_sv.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);

                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("SMSEngine/InsertIntoSMSVariable", sm_sv).Result;
                if (serviceResponse.Status)
                    return Json(serviceResponse.Data);
                else
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.ToString() });
            }
        }

        /// <summary>
        /// Update SMS Variable
        /// </summary>
        [HttpPost]
        public JsonResult UpdateSMSVariable(DO_SMSVariable sm_sv)
        {
            try
            {
                sm_sv.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                sm_sv.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);

                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("SMSEngine/UpdateSMSVariable", sm_sv).Result;
                if (serviceResponse.Status)
                    return Json(serviceResponse.Data);
                else
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.ToString() });
            }
        }

        #endregion

        #region SMS Information
        [Area("eSyaConfig")]
        [ServiceFilter(typeof(ViewBagActionFilter))]
        public IActionResult V_115_00()
        {
            try
            {
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_Forms>>("ConfigMasterData/GetFormDetails").Result;
                ViewBag.FormList = serviceResponse.Data.Select(b => new SelectListItem
                {
                    Value = b.FormID.ToString(),
                    Text = b.FormName,
                }).ToList();

                var serviceResponse_event = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_SMSTEvent>>("SMSEngine/GetSMSTriggerEvent").Result;
                ViewBag.TEvent = serviceResponse_event.Data.Select(b => new SelectListItem
                {
                    Value = b.TEventID.ToString(),
                    Text = b.TEventDesc,
                }).ToList();

                return View();
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.ToString() });
            }
        }

        /// <summary>
        ///Get SMS Header Information
        /// </summary>
        [HttpPost]
        public JsonResult GetSMSHeaderInformationByFormId(int formId)
        {
            try
            {
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_SMSHeader>>("SMSEngine/GetSMSHeaderInformationByFormId?formId=" + formId).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        ///Get SMS Trigger Event
        /// </summary>
        [HttpPost]
        public JsonResult GetSMSTriggerEvent()
        {
            try
            {
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_SMSTEvent>>("SMSEngine/GetSMSTriggerEvent").Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        ///Get SMS Header Information by SMS Id
        /// </summary>
        public JsonResult GetSMSHeaderInformationBySMSId(string smsId)
        {
            try
            {
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<DO_SMSHeader>("SMSEngine/GetSMSHeaderInformationBySMSId?smsId=" + smsId).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        ///Get Active SMS Variable Information
        /// </summary>
        [HttpPost]
        public JsonResult GetActiveSMSVariableInformation()
        {
            try
            {
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_SMSVariable>>("SMSEngine/GetActiveSMSVariableInformation").Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }


        /// <summary>
        /// Insert Into SMS Header
        /// </summary>
        [HttpPost]
        public JsonResult InsertIntoSMSHeader(DO_SMSHeader sm_sh)
        {
            try
            {
                sm_sh.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                sm_sh.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);

                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("SMSEngine/InsertIntoSMSHeader", sm_sh).Result;
                if (serviceResponse.Status)
                    return Json(serviceResponse.Data);
                else
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.ToString() });
            }
        }

        /// <summary>
        /// Update SMS Header
        /// </summary>
        [HttpPost]
        public JsonResult UpdateSMSHeader(DO_SMSHeader sm_sh)
        {
            try
            {
                sm_sh.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                sm_sh.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);

                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("SMSEngine/UpdateSMSHeader", sm_sh).Result;
                if (serviceResponse.Status)
                    return Json(serviceResponse.Data);
                else
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.ToString() });
            }
        }

        #endregion

        [Area("eSyaConfig")]
        [ServiceFilter(typeof(ViewBagActionFilter))]
        public IActionResult _SMSInformation()
        {
            return View();
        }

        #region SMS Recipient

        [Area("eSyaConfig")]
        [ServiceFilter(typeof(ViewBagActionFilter))]
        public IActionResult V_116_00()
        {
            try
            {
                var serviceFormResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_Forms>>("ConfigMasterData/GetFormDetails").Result;
                ViewBag.FormList = serviceFormResponse.Data.Select(b => new SelectListItem
                {
                    Value = b.FormID.ToString(),
                    Text = b.FormName,
                }).ToList();

                var serviceBusinessResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_BusinessLocation>>("ConfigMasterData/GetBusinessKey").Result;
                ViewBag.BusinessLocationList = serviceBusinessResponse.Data.Select(b => new SelectListItem
                {
                    Value = b.BusinessKey.ToString(),
                    Text = b.LocationDescription,
                }).ToList();

                return View();
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.ToString() });
            }
        }

        /// <summary>
        ///Get SMS Header Information by Form Id && Parameter Id
        /// </summary>
        public JsonResult GetSMSHeaderForRecipientByFormIdandParamId(int formId, int parameterId)
        {
            try
            {
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_SMSHeader>>("SMSEngine/GetSMSHeaderForRecipientByFormIdandParamId?formId=" + formId + "&parameterId=" + parameterId).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        ///Get SMS Recipient Information by BusinessKey And SMSId
        /// </summary>
        public JsonResult GetSMSRecipientByBusinessKeyAndSMSId(int businessKey, string smsId)
        {
            try
            {
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_SMSRecipient>>("SMSEngine/GetSMSRecipientByBusinessKeyAndSMSId?businessKey=" + businessKey+ "&smsId=" + smsId).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        /// Insert Into SMS Recipient
        /// </summary>
        [HttpPost]
        public JsonResult InsertIntoSMSRecipient(DO_SMSRecipient sm_sr)
        {
            try
            {
                sm_sr.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                sm_sr.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);

                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("SMSEngine/InsertIntoSMSRecipient", sm_sr).Result;
                if (serviceResponse.Status)
                    return Json(serviceResponse.Data);
                else
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.ToString() });
            }
        }

        /// <summary>
        /// Update SMS Recipient
        /// </summary>
        [HttpPost]
        public JsonResult UpdateSMSRecipient(DO_SMSRecipient sm_sr)
        {
            try
            {
                sm_sr.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                sm_sr.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);

                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("SMSEngine/UpdateSMSRecipient", sm_sr).Result;
                if (serviceResponse.Status)
                    return Json(serviceResponse.Data);
                else
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.ToString() });
            }
        }


        #endregion
    }
}