
@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <table id="jqgAboutDoctor"></table>
        <div id="jqpAboutDoctor"></div>
    </div>
</div>

<script>
    $(function () {
        fnGridLoadAboutDoctor();
    })
    function fnGridLoadAboutDoctor() {
    $("#jqgAboutDoctor").jqGrid('GridUnload');
    $("#jqgAboutDoctor").jqGrid({
        url:'',
        datatype: 'json',
        mtype: 'Get',
        ajaxGridOptions: { contentType: 'application/json; charset=utf-8' },
        jsonReader: { repeatDoctors: false, root: "rows", page: "page", total: "total", records: "records" },
        ignoreCase: true,
        colNames: ["Doctor Id", localization.DoctorShortName, localization.DoctorName, "Doctor Registration No", localization.Gender, localization.Qualification, localization.MobileNumber, localization.DoctorClassCode, localization.DoctorClass, localization.DoctorCategoryCode, localization.DoctorCategory, localization.PatientPerHour,localization.AllowConsultation, localization.AllowSMS, localization.IsRevenueShareAppicable, localization.TraiffFrom, localization.DoctorRemarks, localization.TimeSlotInMintues,localization.Active, localization.Actions],
        colModel: [
            { name: "DoctorId", width: 40, editable: true, align: 'left', hidden: true },
            { name: "DoctorShortName", width: 110, editable: true, align: 'left', hidden: false },
            { name: "DoctorName", width: 120, editable: false, hidden: false, align: 'left', resizable: true },
            { name: "DoctorRegnNo", width: 110, editable: false, hidden: true, align: 'left', resizable: true },
            { name: "Gender", width: 55, editable: true, align: 'left', hidden: false, editoptions: { value: "M: Male;F: Female" } },
            { name: "Qualification", width:160, editable: false, hidden: false, align: 'left', resizable: true },
            { name: "MobileNumber", width: 110, editable: false, hidden: false, align: 'left', resizable: true },
            { name: "DoctorClass", width: 80, editable: false, hidden: true, align: 'left', resizable: true },
            { name: "DoctorClassDesc", width: 140, editable: false, hidden: false, align: 'left', resizable: true },
            { name: "DoctorCategory", width: 60, editable: false, hidden: true, align: 'left', resizable: true },
            { name: "DoctorCategoryDesc", width: 140, editable: false, hidden: false, align: 'left', resizable: true },
            { name: "PatientPerHour", width: 120, editable: false, hidden: false, align: 'left', resizable: true },
            { name: "AllowConsultation", width: 80, editable: true, align: 'left', hidden: true },
            { name: "AllowSMS", width: 50, editable: false, hidden: true, align: 'left', resizable: true },
            { name: "IsRevenueShareAppicable", width: 40, editable: true, align: 'left', hidden: true },
            { name: "TraiffFrom", width: 10, editable: true, align: 'left', hidden: true, editoptions: { value: "N: None;R: Service Rate;S: Specialty;D: Doctor" } },
            //{ name: "LanguageKnown", width: 70, editable: true, align: 'left', hidden: true },
            //{ name: "Experience", width: 70, editable: true, align: 'left', hidden: true },
            { name: "DoctorRemarks", width: 120, editable: true, align: 'left', hidden: true },
            { name: "TimeSlotInMintues", width: 10, editable: true, align: 'left', hidden: true, editoptions: { value: "5: 5 Minutes;10: 10 Minutes;15: 15 Minutes;20: 20 Minutes;25: 25 Minutes;30: 30 Minutes;45: 45 Minutes;60: 60 Minutes" } },
            { name: "ActiveStatus", editable: true, width: 70, align: 'center', resizable: false, edittype: "checkbox", formatter: 'checkbox', editoptions: { value: "true:false" }, formatoptions: { disabled: true } },
            //{
            //    name: 'Action', search: false, align: 'left', width: 100, sortable: false, resizable: false,
            //    formatter: function (cellValue, options, rowdata, action) {
            //        return '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title="Edit" id="jqgDMEdit" onclick="return fnEditAboutDoctor(event)"><i class="fas fa-pen"></i> ' + localization.Edit + ' </button>' +
            //            '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title = "View" id="jqgDMView" onclick = "return fnViewAboutDoctor(event)" > <i class="far fa-eye"></i> ' + localization.View + ' </button > ' +
            //            '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid cancel-button" id="jqgDMDelete", onclick="return fnDeActivateAboutDoctor(event)"><i class="fas fa-trash"></i>' + localization.DeActivate + '</button>'

            //    }
            //}
            {
                name: 'edit', search: false, align: 'left', width: 135, sortable: false, resizable: false,
                formatter: function (cellValue, options, rowdata, action) {
                    return '<button class="mr-1 btn btn-outline" id="btnAboutDoctor"><i class="fa fa-ellipsis-v"></i></button>'
                }
            },
            
        ],
        pager: "#jqpAboutDoctor",
        rowNum: 10,
        rowList: [10, 20, 50, 100],
        rownumWidth:55,
        loadonce: true,
        viewrecords: true,
        gridview: true,
        rownumbers: true,
        height: 'auto',
        align: "left",
        width: 'auto',
        autowidth: true,
        shrinkToFit: true,
        forceFit: true,
        scrollOffset: 0,
        loadComplete: function (data) {
            SetDoctorMasterGridControlByAction();
            fnJqgridSmallScreen('jqgAboutDoctor');
        },

        onSelectRow: function (rowid, status, e) {
            var $self = $(this), $target = $(e.target),
                p = $self.jqGrid("getGridParam"),
                rowData = $self.jqGrid("getLocalRow", rowid),
                $td = $target.closest("tr.jqgrow>td"),
                iCol = $td.length > 0 ? $td[0].cellIndex : -1,
                cmName = iCol >= 0 ? p.colModel[iCol].name : "";

            switch (cmName) {
                case "id":
                    if ($target.hasClass("myedit")) {
                        alert("edit icon is clicked in the row with rowid=" + rowid);
                    } else if ($target.hasClass("mydelete")) {
                        alert("delete icon is clicked in the row with rowid=" + rowid);
                    }
                    break;
                case "serial":
                    if ($target.hasClass("mylink")) {
                        alert("link icon is clicked in the row with rowid=" + rowid);
                    }
                    break;
                default:
                    break;
            }

        },

    }).jqGrid('navGrid', '#jqpAboutDoctor', { add: false, edit: false, search: true, del: false, refresh: false }, {}, {}, {}, {
        closeOnEscape: true,
        caption: "Search...",
        multipleSearch: true,
        Find: "Find",
        Reset: "Reset",
        odata: [{ oper: 'eq', text: 'Match' }, { oper: 'cn', text: 'Contains' }, { oper: 'bw', text: 'Begins With' }, { oper: 'ew', text: 'Ends With' }]
    }).jqGrid('navButtonAdd', '#jqpAboutDoctor', {
        caption: '<span class="fa fa-sync"></span> Refresh', buttonicon: "none", id: "custRefresh", position: "first", onClickButton: fnGridRefreshAboutDoctor
    })
    //.jqGrid('navButtonAdd', '#jqpAboutDoctor', {
    //    caption: '<span class="fa fa-plus" data-toggle="modal"></span> Add', buttonicon: 'none', id: 'jqgDMAdd', position: 'first', onClickButton: fnGridAddAboutDoctor
    //});

    fnAddGridSerialNoHeading();
    }
    function fnGridRefreshAboutDoctor() {

    }
    function fnGridAddAboutDoctor() {

    }
</script>