using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using System.Net.Http;
using eSyaEnterprise_UI.Areas.Config.Models;
using eSyaEnterprise_UI.Models;
using eSyaEnterprise_UI.Utility;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Newtonsoft.Json;
using eSyaEnterprise_UI.Areas.Config.Data;
using eSyaEnterprise_UI.ActionFilter;
using Microsoft.AspNetCore.Mvc.Rendering;

namespace eSyaEnterprise_UI.Areas.Config.Controllers
{
    public class BusinessStructureController : Controller
    {
        private readonly IeSyaConfigAPIServices _eSyaConfigAPIServices;
        public BusinessStructureController(IeSyaConfigAPIServices eSyaConfigAPIServices)
        {
            _eSyaConfigAPIServices = eSyaConfigAPIServices;
        }

        #region Business Entity
        /// <summary>
        /// Business Entity
        /// </summary>
        /// <returns></returns>
       
        [Area("eSyaConfig")]
        [ServiceFilter(typeof(ViewBagActionFilter))]
        public IActionResult V_101_00()
        {
            return View();
        }

        [Area("eSyaConfig")]
        public IActionResult V_101_00_Old()
        {
            ViewBag.formName = "Business Entity Old";
            return View();
        }
        /// <summary>
        ///Get Business Entities for Grid
        /// </summary>
        [HttpPost]
        public JsonResult GetBusinessEntities()
        {

            try
            {
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_BusinessEntity>>("BusinessStructure/GetBusinessEntities").Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }

        }

        /// <summary>
        ///Get Business Entities for Tree View
        /// </summary>
        [HttpPost]
        public JsonResult GetBusinessEntitiesforTreeView()
        {
            try
            {
                List<jsTreeObject> jsTree = new List<jsTreeObject>();

                jsTreeObject jsObj = new jsTreeObject
                {
                    id = "MM",
                    parent = "#",
                    text = "Business Entity",
                    state = new stateObject { opened = true, selected = false }
                };
                jsTree.Add(jsObj);

                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_BusinessEntity>>("BusinessStructure/GetBusinessEntities").Result;
                var BusinessEntities = serviceResponse.Data;
                if (BusinessEntities != null)
                {
                    foreach (var f in BusinessEntities.OrderBy(o => o.BusinessId))
                    {
                        jsObj = new jsTreeObject
                        {
                            id = "FM" + f.BusinessId.ToString() + "." + f.BusinessId.ToString(),
                            text = f.BusinessDesc,
                            GroupIndex = f.BusinessId.ToString() + "." + f.ActiveStatus.ToString() + "." + f.IsMultiSegmentApplicable.ToString(),
                            parent = "MM",
                            state = new stateObject { opened = true, selected = false }
                        };
                        jsTree.Add(jsObj);
                    }
                }
                return Json(jsTree);
                //return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }

        }

        /// <summary>
        ///Get Business Entity Info
        /// </summary>
        [HttpPost]
        public JsonResult GetBusinessEntityInfo(int BusinessId)
        {

            try
            {
                var parameter = "?BusinessId=" + BusinessId;
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<DO_BusinessEntity>("BusinessStructure/GetBusinessEntityInfo" + parameter).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }

        }

        /// <summary>
        /// Insert or Update Business Entity
        /// </summary>
        [HttpPost]
        public JsonResult InsertOrUpdateBusinessEntity(DO_BusinessEntity businessentity)
        {

            try
            {
                businessentity.FormID = AppSessionVariables.GetSessionFormInternalID(HttpContext);
                businessentity.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                businessentity.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                
                if (businessentity.BusinessId == 0)
                {
                    var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("BusinessStructure/InsertBusinessEntity", businessentity).Result;
                    if (serviceResponse.Status)
                        return Json(serviceResponse.Data);
                    else
                        return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
                }
                else
                {
                    var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("BusinessStructure/UpdateBusinessEntity", businessentity).Result;
                    if (serviceResponse.Status)
                        return Json(serviceResponse.Data);
                    else
                        return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
                }
               
                
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }

        /// <summary>
        ///DELETE Business Entity
        /// </summary>
        [HttpPost]
        public JsonResult DeleteBusinessEntity(int BusinessEntityId)
        {
            try
            {
                var parameter = "?BusinessEntityId=" + BusinessEntityId;
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<DO_ReturnParameter>("BusinessStructure/DeleteBusinessEntity" + parameter).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }
        #endregion Business Entity

        #region Business Segment
        /// <summary>
        /// Business Segment
        /// </summary>
        /// <returns></returns>
        [Area("eSyaConfig")]
        [ServiceFilter(typeof(ViewBagActionFilter))]
        public IActionResult V_102_00()
        {
            try
            {
                /// Tax Identification for Dropdown
                var Taxresponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_TaxIdentification>>("Country/GetActiveTaxIdentification").Result;
                ViewBag.TaxList = Taxresponse.Data.Select(b => new SelectListItem
                {
                    Value = b.TaxIdentificationId.ToString(),
                    Text = b.TaxIdentificationDesc,
                }).ToList();

                /// ISD Codes for Dropdown
                var Isdresponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_CountryCodes>>("ConfigMasterData/GetISDCodes").Result;
                ViewBag.ISDCodeList = Isdresponse.Data.Select(b => new SelectListItem
                {
                    Value = b.Isdcode.ToString(),
                    Text = b.Isdcode.ToString() + '-' + b.CountryName,
                }).ToList();
                return View();
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.ToString() });
            }
        }


        [Area("eSyaConfig")]
        public IActionResult V_102_00_Old()
        {
            ViewBag.formName = "Business Segment";
            try
            {
                /// Entities for Dropdown
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_BusinessEntity>>("BusinessStructure/GetActiveBusinessEntities").Result;
                ViewBag.entity_list = serviceResponse.Data;

                /// Tax Identification for Dropdown
                var Taxresponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_TaxIdentification>>("Country/GetActiveTaxIdentification").Result;
                ViewBag.TaxIdentifications = Taxresponse.Data;

                /// ISD Codes for Dropdown
                var Isdresponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_CountryCodes>>("ConfigMasterData/GetISDCodes").Result;
                ViewBag.IsdCodes = Isdresponse.Data;
                return View();
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.ToString() });
            }

        }
        /// <summary>
        ///Get Business Segments by Business Id for Grid
        /// </summary>
        [HttpPost]
        public JsonResult GetBusinessSegmentByBusinessId(int BusinessId)
        {

            try
            {
                var parameter = "?BusinessId=" + BusinessId;
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_BusinessSegment>>("BusinessStructure/GetBusinessSegmentByBusinessId" + parameter).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }

        }

        /// <summary>
        ///Get Business Segment for Tree View
        /// </summary>
        [HttpPost]
        public JsonResult GetBusinessSegmentforTreeView()
        {
            try
            {
                List<jsTreeObject> jsTree = new List<jsTreeObject>();

                jsTreeObject jsObj = new jsTreeObject
                {
                    id = "MM",
                    parent = "#",
                    text = "Business Entity",
                    state = new stateObject { opened = true, selected = false }
                };
                jsTree.Add(jsObj);

                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<DO_BusinessConfiguration>("BusinessStructure/GetBusinessSegment").Result;
                var BusinessSegment = serviceResponse.Data;
                if (BusinessSegment != null)
                {
                    foreach (var f in BusinessSegment.l_BusinessEntity.OrderBy(o => o.BusinessId))
                    {
                        jsObj = new jsTreeObject
                        {
                            id = "MM" + f.BusinessId.ToString(),
                            text = f.BusinessDesc,
                            GroupIndex = f.BusinessId.ToString(),
                            parent = "MM",
                            state = new stateObject { opened = true, selected = false }
                        };
                        jsTree.Add(jsObj);
                    }

                    foreach (var f in BusinessSegment.l_BusinessSegment.OrderBy(o => o.BusinessId))
                    {
                        jsObj = new jsTreeObject
                        {
                            id = "SM" + f.BusinessId.ToString() + "." + f.SegmentId.ToString(),
                            text = f.SegmentDesc,
                            GroupIndex = f.BusinessId.ToString(),
                            parent = "MM" + f.BusinessId.ToString(),
                            state = new stateObject { opened = true, selected = false }
                        };
                        jsTree.Add(jsObj);
                    }
                }
                return Json(jsTree);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }

        }

        /// <summary>
        ///Get Business Segment Info
        /// </summary>
        [HttpPost]
        public JsonResult GetBusinessSegmentInfo(int BusinessId, int SegmentId)
        {

            try
            {
                var parameter = "?BusinessId=" + BusinessId + "&SegmentId=" + SegmentId;
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<DO_BusinessSegment>("BusinessStructure/GetBusinessSegmentInfo" + parameter).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }

        }

        /// <summary>
        /// Insert or Update Business Segment
        /// </summary>
        [HttpPost]
        public JsonResult InsertOrUpdateBusinessSegment(DO_BusinessSegment BusinessSegment)
        {

            try
            {
                BusinessSegment.FormID = AppSessionVariables.GetSessionFormInternalID(HttpContext);
                BusinessSegment.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                BusinessSegment.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                if (BusinessSegment.SegmentId == 0)
                {
                    var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("BusinessStructure/InsertBusinessSegment", BusinessSegment).Result;
                    if (serviceResponse.Status)
                        return Json(serviceResponse.Data);
                    else
                        return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
                }
                else
                {
                    var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("BusinessStructure/UpdateBusinessSegment", BusinessSegment).Result;
                    if (serviceResponse.Status)
                        return Json(serviceResponse.Data);
                    else
                        return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
                }
               
              
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }

        /// <summary>
        ///DELETE Business Segment
        /// </summary>
        [HttpPost]
        public JsonResult DeleteBusinessSegment(int BusinessId, int SegmentId)
        {
            try
            {
                var parameter = "?BusinessId=" + BusinessId + "&SegmentId=" + SegmentId;
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<DO_ReturnParameter>("BusinessStructure/DeleteBusinessSegment" + parameter).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }
        /// <summary>
        ///Get Currency Name by IsdCode
        /// </summary>
        [HttpPost]
        public JsonResult GetCurrencyNamebyIsdCode(int IsdCode)
        {

            try
            {
                var parameter = "?IsdCode=" + IsdCode;
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<DO_CountryCodes>("Country/GetCurrencyNamebyIsdCode" + parameter).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }

        }

        /// <summary>
        ///Get Business Segment Currency for Grid
        /// </summary>
        [HttpPost]
        public JsonResult GetBSCurrency(int BusinessId, int SegmentId)
        {
            try
            {
                var parameter = "?BusinessId=" + BusinessId + "&SegmentId=" + SegmentId;
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_BusienssSegmentCurrency>>("BusinessStructure/GetBSCurrency" + parameter).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }
        #endregion Business Segment

        #region Business Location
        /// <summary>
        /// Business Location
        /// </summary>
        /// <returns></returns>
        /// 
        [Area("eSyaConfig")]
        [ServiceFilter(typeof(ViewBagActionFilter))]
        public IActionResult V_103_00()
        {
            try
            {
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_BusinessEntity>>("BusinessStructure/GetActiveBusinessEntities").Result;
                ViewBag.entity_list = serviceResponse.Data;
                return View();
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.ToString() });
            }

        }


        [Area("eSyaConfig")]
        public IActionResult V_103_00_Old()
        {
           ViewBag.formName = "Business Location";
           return View();
        }

        /// <summary>
        ///Get Business Segment by Business Id for drop down
        /// </summary>
        [HttpPost]
        public JsonResult GetActiveBusinessSegmentbyBusinessId(int BusinessId)
        {

            try
            {
                var parameter = "?BusinessId=" + BusinessId;
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_BusinessSegment>>("BusinessStructure/GetActiveBusinessSegmentbyBusinessId" + parameter).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }

        }
        /// <summary>
        ///Get Business Location by Business Id & SegmentId for Grid
        /// </summary>
        [HttpPost]
        public JsonResult GetBusinessLocationByBusinessIdandSegmentId(int BusinessId, int SegmentId)
        {

            try
            {
                var parameter = "?BusinessId=" + BusinessId + "&SegmentId=" + SegmentId;
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_BusinessLocation>>("BusinessStructure/GetBusinessLocationByBusinessIdandSegmentId" + parameter).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }

        }

        /// <summary>
        ///Get Business Entities for Tree View
        /// </summary>
        [HttpPost]
        public JsonResult GetBusinessLocationforTreeView()
        {
            try
            {
                List<jsTreeObject> jsTree = new List<jsTreeObject>();

                jsTreeObject jsObj = new jsTreeObject
                {
                    id = "MM",
                    parent = "#",
                    text = "Business Entity",
                    state = new stateObject { opened = true, selected = false }
                };
                jsTree.Add(jsObj);

                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<DO_BusinessConfiguration>("BusinessStructure/GetBusinessLocation").Result;
                var BusinessSegment = serviceResponse.Data;
                if (BusinessSegment != null)
                {
                    foreach (var f in BusinessSegment.l_BusinessEntity.OrderBy(o => o.BusinessId))
                    {
                        jsObj = new jsTreeObject
                        {
                            id = "MM" + f.BusinessId.ToString(),
                            text = f.BusinessDesc,
                            GroupIndex = f.BusinessId.ToString(),
                            parent = "MM",
                            state = new stateObject { opened = true, selected = false }
                        };
                        jsTree.Add(jsObj);
                    }

                    foreach (var f in BusinessSegment.l_BusinessSegment.OrderBy(o => o.BusinessId))
                    {
                        jsObj = new jsTreeObject
                        {
                            id = "SM" + f.BusinessId.ToString() + "." + f.SegmentId.ToString(),
                            text = f.SegmentDesc,
                            GroupIndex = f.BusinessId.ToString(),
                            parent = "MM" + f.BusinessId.ToString(),
                            state = new stateObject { opened = true, selected = false }
                        };
                        jsTree.Add(jsObj);
                    }

                    foreach (var f in BusinessSegment.l_BusinessLocation.OrderBy(o => o.BusinessId))
                    {
                        jsObj = new jsTreeObject
                        {
                            id = "FM" + f.BusinessId.ToString() + "." + f.SegmentId.ToString() + "." + f.LocationId.ToString(),
                            text = f.LocationDescription,
                            GroupIndex = f.SegmentId.ToString(),
                            parent = "SM" + f.BusinessId.ToString() + "." + f.SegmentId.ToString(),
                            state = new stateObject { opened = true, selected = false }
                        };
                        jsTree.Add(jsObj);
                    }
                }
                return Json(jsTree);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }

        }

        /// <summary>
        ///Get Business Location Info
        /// </summary>
        [HttpPost]
        public JsonResult GetBusinessLocationInfo(int BusinessId, int SegmentId, int LocationId)
        {

            try
            {
                var parameter = "?BusinessId=" + BusinessId + "&SegmentId=" + SegmentId + "&LocationId=" + LocationId;
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<DO_BusinessLocation>("BusinessStructure/GetBusinessLocationInfo" + parameter).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }

        }
        /// <summary>
        /// Insert or Update Business Location
        /// </summary>
        [HttpPost]
        public JsonResult InsertOrUpdateBusinessLocation(DO_BusinessLocation BusinessLocation)
        {

            try
            {
                BusinessLocation.FormID = AppSessionVariables.GetSessionFormInternalID(HttpContext);
                BusinessLocation.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                BusinessLocation.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                if (BusinessLocation.LocationId == 0)
                {
                    var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("BusinessStructure/InsertBusinessLocation", BusinessLocation).Result;
                    if (serviceResponse.Status)
                        return Json(serviceResponse.Data);
                    else
                        return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
                    
                }
                else
                {
                    var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("BusinessStructure/UpdateBusinessLocation", BusinessLocation).Result;
                    if (serviceResponse.Status)
                        return Json(serviceResponse.Data);
                    else
                        return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
                    
                }
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }

        /// <summary>
        ///DELETE Business Segment
        /// </summary>
        [HttpPost]
        public JsonResult DeleteBusinessLocation(int BusinessId, int SegmentId, int LocationId)
        {
            try
            {
                var parameter = "?BusinessId=" + BusinessId + "&SegmentId=" + SegmentId + "&LocationId=" + LocationId;
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<DO_ReturnParameter>("BusinessStructure/DeleteBusinessLocation" + parameter).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        ///Get Business Parameter 
        /// </summary>
        [HttpPost]
        //public JsonResult GetBusinessParamter(int BusinessId, int SegmentId, int LocationId)
        //{
        //    try
        //    {
        //        int BusienssKey = Convert.ToInt32(BusinessId.ToString() + SegmentId.ToString() + LocationId.ToString());
        //        var parameter = "?BusienssKey=" + BusienssKey;
        //        var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_BusinessParameterLink>>("BusinessStructure/GetBusinessParamter" + parameter).Result;
        //        return Json(serviceResponse.Data);
        //    }
        //    catch (Exception ex)
        //    {
        //        return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
        //    }
        //}
        #endregion Business Location

        #region Business Stores
        [Area("eSyaConfig")]
        public IActionResult V_14_00()
        {
            ViewBag.formName = "Business Stores";

            ///Getting Store Codes
            var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_StoreMaster>>("StoreMaster/GetActiveStoreCodes").Result;
            ViewBag.StoreMaster = serviceResponse.Data;
            ///Getting Business Key
            var Bk_response = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_BusinessLocation>>("ConfigMasterData/GetBusinessKey").Result;
            ViewBag.BusinessKeys = Bk_response.Data;
            return View();
        }

        /// <summary>
        /// Insert or Update Business Stores
        /// </summary>
        [HttpPost]
        public JsonResult InsertOrUpdateBusinessStores(DO_BusinessStores postData)
        {

            try
            {
                if (postData.BusinessKey == 0)
                {
                    return Json(new { Status = false, Message = "Please Select Location" });
                }
                postData.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                postData.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("BusinessStructure/InsertOrUpdateBusinessStores", postData).Result;
                if (serviceResponse.Status)
                    return Json(serviceResponse.Data);
                else
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }
        /// <summary>
        /// Get Business Stores
        /// </summary>
        [HttpPost]
        public JsonResult GetBusinessStores([FromQuery] int Businesskey)
        {
            try
            {
                var parameter = "?Businesskey=" + Businesskey;
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_BusinessStores>>("BusinessStructure/GetBusinessStores" + parameter).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }
        #endregion Business Stores

        #region Business Statutory Details
        [Area("eSyaConfig")]
        public IActionResult V_15_00()
        {
            ViewBag.formName = "Business Statutory Details";
            // Getting  Country Statutory Details
            var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_CountryStatutoryDetails>>("Country/GetActiveStatutoryCodes").Result;
            ViewBag.StatCodes = serviceResponse.Data;

            ///Getting  Business Keys
            var Bk_response = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_BusinessLocation>>("ConfigMasterData/GetBusinessKey").Result;
            ViewBag.BusinessKeys = Bk_response.Data;
            return View();
        }

        /// <summary>
        /// Insert or Update Business Statutory Details
        /// </summary>
        [HttpPost]
        public JsonResult InsertOrUpdateBusinessStatutoryDetails(DO_BusinessStatutoryDetails postData)
        {

            try
            {
                if (postData.BusinessKey == 0)
                {
                    return Json(new { Status = false, Message = "Please Select Location" });
                }
                postData.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                postData.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("BusinessStructure/InsertOrUpdateBusinessStatutoryDetails", postData).Result;
                if (serviceResponse.Status)
                    return Json(serviceResponse.Data);
                else
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }
        /// <summary>
        /// Get Business Statutory Details
        /// </summary>
        [HttpPost]
        public JsonResult GetBusinessStatutoryDetails(int Businesskey)
        {
            try
            {
                var parameter = "?Businesskey=" + Businesskey;
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_BusinessStatutoryDetails>>("BusinessStructure/GetBusinessStatutoryDetails" + parameter).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }
        #endregion Business Statutory Details
    }
}