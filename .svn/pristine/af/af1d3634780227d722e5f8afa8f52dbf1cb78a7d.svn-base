
@{
    ViewData["Title"] = "V_2002_00";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts{
    @*<script src="~/js/eSyaFixedAssets/DepreciationMethod.js"></script>*@
}
@{
    var userFormRole = (eSyaEnterprise_UI.Models.DO_UserFormRole)ViewBag.UserFormRole;
}
<script>
    var _userFormRole = JSON.parse('@Html.Raw(Json.Serialize(userFormRole))');
</script>

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <table id="jqgAssetGroup"></table>
        <div id="jqpAssetGroup"></div>
    </div>
</div>

<div class="modal fade in" id="PopupDepreciationMethod" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header popupHeader">
                <button type="button" class="close" data-dismiss="modal"> <i class="fa fa-times"></i></button>
                <h4 class="modal-title">Depreciation Method</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" id="hdvAssetGroupId" />
                <input type="hidden" id="hdvAssetSubGroupId" />
                <div class="row form-group">

                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        Asset Group:  <span id="lblAssetGroup" class="fixedText"></span>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        Asset Sub Group:  <span id="lblSubGroup" class="fixedText"></span>
                    </div>

                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <table id="jqgDepreciationMethod"></table>
                        <div id="jqpDepreciationMethod"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-lg-12">
                        <button type="button" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent primary-button" id="btnDepreciationMethodSave" onclick="fnSaveAssetDepreciationMethod()">
                            Save
                        </button>
                        <button type="button" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect  cancel-button" data-dismiss="modal" id="btnDepreciationMethodCancel"> Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>





<script>


    $(document).ready(function () {
        fnGridLoadAssetGroup();
    });

    function fnGridLoadAssetGroup() {
        $("#jqgAssetGroup").jqGrid('GridUnload');
        $("#jqgAssetGroup").jqGrid({
            url: getBaseURL() + '/FixedAssets/GetAssetGroupAndSubGroup',
            mtype: 'Post',
            datatype: 'json',
            ajaxGridOptions: { contentType: 'application/json; charset=utf-8' },
            async: false,
            jsonReader: { repeatitems: false, root: "rows", page: "page", total: "total", records: "records" },
            colNames: ["Asset Group ID", "Asset Group", "Sub Group ID", "Sub Group", "Active", "Action"],
            colModel: [
                { name: "AssetGroupID", width: 70, editable: true, align: 'left', hidden: true },
                { name: "AssetGroup", width: 170, editable: true, align: 'left', hidden: false },
                { name: "AssetSubGroupID", width: 70, editable: true, align: 'left', hidden: true },
                { name: "AssetSubGroup", width: 140, editable: false, hidden: false, align: 'left', resizable: true },
                //{ name: "ActiveStatus", editable: true, width: 28, align: 'left', resizable: false, edittype: "select", formatter: 'select', editoptions: { value: "true: Active;false: Inactive" } },
                { name: "ActiveStatus", editable: true, width: 28, align: 'center', resizable: false, edittype: "checkbox", formatter: 'checkbox', editoptions: { value: "true:false" } },
                {
                    name: 'edit', search: false, align: 'left', width: 64, sortable: false, resizable: false,
                    formatter: function (cellValue, options, rowdata, action) {
                        return '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" id="jqgEdit" title="Edit" onclick="return fnGridAddAssetGroup(event)"><i class="fa fa-edit"></i> Add/ Edit </button><button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title="View" onclick="return fnViewDepreciationMethod(event)"><i class="far fa-eye"></i> View </button>'

                    }
                },
            ],
            rowNum: 10,
            rowList: [10, 20, 50, 100],
            loadonce: true,
            pager: "#jqpAssetGroup",
            viewrecords: true,
            gridview: true,
            rownumbers: true,
            height: 'auto',
            align: "left",
            width: 'auto',
            autowidth: false,
            shrinkToFit: false,
            scrollOffset: 0,
            loadComplete: function (data) {
                SetGridControlByAction("jqgAssetGroup");
            }
        }).jqGrid('navGrid', '#jqpAssetGroup', { add: false, edit: false, search: false, del: false, refresh: false });
        /*.jqGrid('navButtonAdd', '#jqpAssetGroup', {
        caption: '<span class="fa fa-sync"></span> Refresh', buttonicon: "none", id: "custRefresh", position: "first",
        caption: '<span class="fa fa-plus" data-toggle="modal"></span> Add', buttonicon: 'none', id: 'custAdd', position: 'first', onClickButton: fnGridAddAssetGroup
    });*/
    }

    function fnGridAddAssetGroup(e) {

        $('#PopupDepreciationMethod').modal('show');
        //$('#PopupDepreciationMethod').modal({ backdrop: 'static', keyboard: false });
        $('#PopupDepreciationMethod').find('.modal-title').text("Add / Edit Depreciation Method");

        $('#btnDepreciationMethodSave').show();
        $("#btnDepreciationMethodSave").html(' Save');
        $("#btnDepreciationMethodCancel").html(' Cancel');

        var rowid = $(e.target).parents("tr.jqgrow").attr('id');
        var rowData = $('#jqgAssetGroup').jqGrid('getRowData', rowid);
        
        $('#lblAssetGroup').html(rowData.AssetGroup);
        $('#lblSubGroup').html(rowData.AssetSubGroup);
        $('#hdvAssetGroupId').val(rowData.AssetGroupID);
        $('#hdvAssetSubGroupId').val(rowData.AssetSubGroupID);
        fnGridDepreciationMethod(rowData.AssetGroupID, rowData.AssetSubGroupID, true);
    }

    function fnViewDepreciationMethod(e) {

        $('#PopupDepreciationMethod').modal('show');
        $('#PopupDepreciationMethod').find('.modal-title').text("View Depreciation Method");
        $('#btnDepreciationMethodSave').hide();
        $("#btnDepreciationMethodCancel").html(' Close');

        var rowid = $(e.target).parents("tr.jqgrow").attr('id');
        var rowData = $('#jqgAssetGroup').jqGrid('getRowData', rowid);

        $('#lblAssetGroup').html(rowData.AssetGroup);
        $('#lblSubGroup').html(rowData.AssetSubGroup);
        fnGridDepreciationMethod(rowData.AssetGroupID, rowData.AssetSubGroupID, false);
    }

    function SetGridControlByAction(jqg) {
        if (_userFormRole.IsEdit === false) {
            var eleDisable = document.querySelectorAll('#jqgEdit');
            for (var i = 0; i < eleDisable.length; i++) {
                eleDisable[i].disabled = true;
                eleDisable[i].className = "ui-state-disabled";
            }
        }
    }

    function fnGridDepreciationMethod(assetGroup, assetSubGroup, cellEditable) {
        $('#jqgDepreciationMethod').jqGrid('GridUnload');
        $("#jqgDepreciationMethod").jqGrid({
            url: getBaseURL() + '/FixedAssets/GetDepreciationMethods?assetGroup=' + assetGroup + '&assetSubGroup=' + assetSubGroup,
            datatype: 'json',
            mtype: 'Post',
            ajaxGridOptions: { contentType: 'application/json; charset=utf-8' },
            jsonReader: { repeatitems: false, root: "rows", page: "page", total: "total", records: "records" },
            colNames: ["Asset Group ID", "Asset Sub Group ID", "Depreciation Method ID", "Depreciation Method", "Depreciation Percentage ", "Effective From", "Effective Till", "Active"],
            colModel: [
                { name: "AssetGroupID", width: 70, editable: true, align: 'left', hidden: true },
                { name: "AssetSubGroupID", width: 70, editable: true, align: 'left', hidden: true },
                { name: "DepreciationMethod", width: 70, editable: true, align: 'left', hidden: true },
                { name: "DepreciationMethodDesc", width: 150, editable: false, align: 'left', editoptions: { maxlength: 4 }, hidden: false },
                { name: "DepreciationPercentage", width: 160, editable: true, align: 'left', editoptions: { maxlength: 5, onkeypress: 'return fnOnlyDigits(event)' } },
                {
                    name: 'EffectiveFrom', index: 'EffectiveFrom', width: 90, sorttype: "date", formatter: "date", formatoptions:
                        { newformat: _cnfjqgDateFormat },
                    editable: true, editoptions: {
                        size: 20,
                        dataInit: function (el) {
                            $(el).datepicker({ dateFormat: _cnfDateFormat });
                        }
                    }
                },
                {
                    name: 'EffectiveTill', index: 'EffectiveTill', width: 90, sorttype: "date", formatter: "date", hidden: true, formatoptions:
                        { newformat: _cnfjqgDateFormat },
                    editable: true, editoptions: {
                        size: 20,
                        dataInit: function (el) {
                            $(el).datepicker({ dateFormat: _cnfDateFormat });
                        }
                    }
                },
                { name: "ActiveStatus", editable: true, width: 70, align: 'center !important', edittype: "checkbox", formatter: 'checkbox', editoptions: { value: "true:false" } },

            ],

            rowNum: 10000,
            pager: "#jqpDepreciationMethod",
            pgtext: null,
            pgbuttons: null,
            viewrecords: false,
            gridview: true,
            rownumbers: true,
            height: 'auto',
            width: 'auto',
            autowidth: true,
            shrinkToFit: false,
            forceFit: false,
            loadonce: true,
            cellEdit: true,
            editurl: 'url',
            cellsubmit: 'clientArray',
            onSelectRow: function (id) {
                if (id) { $('#jqgDepreciationMethod').jqGrid('editRow', id, true); }
            },
            ondblClickRow: function (rowid) {
            },
            loadComplete: function (data) {
                $(this).find(">tbody>tr.jqgrow:odd").addClass("myAltRowClassEven");
                $(this).find(">tbody>tr.jqgrow:even").addClass("myAltRowClassOdd");
                $("#jqgDepreciationMethod").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
                SetGridControlByAction();
            }
        }).jqGrid('navGrid', '#jqpDepreciationMethod', { add: false, edit: false, search: false, del: false, refresh: false });


    }

    function fnOnlyDigits(e) {
        if ((e.which < 48 || e.which > 57)) {
            if (e.which == 8 || e.which == 0 || e.which == 46) {
                return true;
            }
            else {
                return false;
            }
        }
    }

    function fnSaveAssetDepreciationMethod() {

        $("#btnDepreciationMethodSave").attr("disabled", true);
        var obj = [];
        var gvT = $('#jqgDepreciationMethod').jqGrid('getRowData');
        for (var i = 0; i < gvT.length; ++i) {

            var dm = {
                AssetGroupID: $('#hdvAssetGroupId').val(),
                AssetSubGroupID: $('#hdvAssetSubGroupId').val(),
                DepreciationMethod: gvT[i]['DepreciationMethod'],
                EffectiveFrom: gvT[i]['EffectiveFrom'],
                DepreciationPercentage: gvT[i]['DepreciationPercentage'] = '' ? 0 : gvT[i]['DepreciationPercentage'],
                ActiveStatus: gvT[i]['ActiveStatus']
            }
            obj.push(dm);
        }
        $.ajax({
            url: getBaseURL() + '/FixedAssets/InsertDepreciationMethod',
            type: 'POST',
            datatype: 'json',
            data: { obj },
            //async: false,
            success: function (response) {
                if (response.Status === true) {
                    toastr.success(response.Message);
                    $('#PopupDepreciationMethod').modal('hide');
                }
                else {
                    toastr.error(response.Message);
                }
                $("#btnDepreciationMethodSave").attr("disabled", false);
            },
            error: function (error) {
                toastr.error(error.statusText);
                $("#btnDepreciationMethodSave").attr("disabled", false);
            }
        });

        $("#btnDepreciationMethodSave").attr("disabled", false);
    }


</script>
