using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using eSyaEnterprise_UI.Areas.eSyaClinicalServices.Data;
using eSyaEnterprise_UI.Areas.eSyaClinicalServices.Models;
using eSyaEnterprise_UI.Utility;
using eSyaEnterprise_UI.Models;

namespace eSyaEnterprise_UI.Areas.eSyaClinicalServices.Controllers
{
    public class SpecialtyController : Controller
    {
        private readonly IeSyaClinicalAPIServices _eSyaClinicalAPIServices;
        public SpecialtyController(IeSyaClinicalAPIServices eSyaClinicalAPIServices)
        {
            _eSyaClinicalAPIServices = eSyaClinicalAPIServices;
        }

        [Area("eSyaClinicalServices")]
        public IActionResult V_1571_00()
        {
            ViewBag.formName = "Specialty Codes";
            return View();
        }

        /// <summary>
        /// Insert Specialty Codes
        /// </summary>
        [HttpPost]
        public JsonResult InsertSpecialtyCodes(DO_SpecialtyCodes obj)
        {
            try
            {
                obj.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                obj.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                obj.FormId = "V_1571_00";

                var Insertresponse = _eSyaClinicalAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("SpecialtyCodes/InsertSpecialtyCodes", obj).Result;
                return Json(Insertresponse.Data);

            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        /// Update Doctor Master
        /// </summary>
        [HttpPost]
        public JsonResult UpdateSpecialtyCodes(DO_SpecialtyCodes obj)
        {
            try
            {
                obj.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                obj.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);

                var response = _eSyaClinicalAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("SpecialtyCodes/UpdateSpecialtyCodes", obj).Result;
                return Json(response.Data);

            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        /// Update Doctor Master
        /// </summary>
        [HttpPost]
        public JsonResult DeleteSpecialtyCodes(DO_SpecialtyCodes obj)
        {
            try
            {
                obj.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                obj.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);

                var response = _eSyaClinicalAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("SpecialtyCodes/DeleteSpecialtyCodes", obj).Result;
                return Json(response.Data);

            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        ///Get Asset Group and Sub Group for Tree View
        /// </summary>
        [Produces("application/json")]
        public IActionResult GetSpecialtyTree()
        {

            try
            {
                var response = _eSyaClinicalAPIServices.HttpClientServices.GetAsync<List<DO_SpecialtyCodes>>("SpecialtyCodes/GetSpecialtyCodesList").Result;
                List<DO_SpecialtyCodes> data = response.Data;

                List<jsTreeObject> SpecialtyTree = new List<jsTreeObject>();

                jsTreeObject obj;
                obj = new jsTreeObject();

                obj.id = "H0";
                obj.parent = "#";
                obj.text = "Specialty Codes";
                obj.state = new stateObject { opened = true, selected = false };

                SpecialtyTree.Add(obj);

                //List<DO_SpecialtyCodes> aGroup = data.Select(x => new DO_AssetGroup { AssetGroup = x.AssetGroup, AssetGroupID = x.AssetGroupID }).GroupBy(y => y.AssetGroupID, (key, grp) => grp.FirstOrDefault()).ToList();

                foreach (DO_SpecialtyCodes lst in data)
                {
                    obj = new jsTreeObject();

                    obj.id = lst.SpecialtyID.ToString();
                    obj.parent = "H0";
                    obj.text = lst.SpecialtyDesc;
                    obj.state = new stateObject { opened = false, selected = false };

                    SpecialtyTree.Add(obj);
                }

                return Json(SpecialtyTree);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }

        }

        /// <summary>
        /// Get Specialty Codes Detail
        /// </summary>
        [HttpPost]
        public JsonResult GetSpecialtyCode(int specialtyId)
        {
            try
            {
                var response = _eSyaClinicalAPIServices.HttpClientServices.GetAsync<DO_SpecialtyCodes>("SpecialtyCodes/GetSpecialtyCodes?specialtyId=" + specialtyId).Result;
                if (response.Status)
                {
                    return Json(response.Data);
                }
                else
                {
                    return Json(new DO_ReturnParameter()
                    {
                        Status = false,
                        StatusCode = response.StatusCode.ToString()
                    });
                }
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        [Area("eSyaClinicalServices")]
        public IActionResult V_1572_00()
        {
            ViewBag.formName = "Business Specialty Link";
            return View();
        }

        /// <summary>
        ///Get Asset Group and Sub Group for Tree View
        /// </summary>
        [Produces("application/json")]
        public IActionResult GetSpecialtyLinkTree()
        {

            try
            {
                var response = _eSyaClinicalAPIServices.HttpClientServices.GetAsync<List<DO_SpecialtyClinicLink>>("Specialty/GetSpecialtyClinicList?businessKey=" + AppSessionVariables.GetSessionBusinessKey(HttpContext)).Result;
                List<DO_SpecialtyClinicLink> data = response.Data;

                List<jsTreeObject> SpecialtyTree = new List<jsTreeObject>();

                jsTreeObject obj;
                //obj = new jsTreeObject();

                //obj.id = "H0";
                //obj.parent = "#";
                //obj.text = "Specialty Codes";
                //obj.state = new stateObject { opened = true, selected = false };

                //SpecialtyTree.Add(obj);

                List<DO_SpecialtyClinicLink> sCodes = data.Select(x => new DO_SpecialtyClinicLink { SpecialtyID = x.SpecialtyID, SpecialtyDesc = x.SpecialtyDesc }).GroupBy(y => y.SpecialtyID, (key, grp) => grp.FirstOrDefault()).ToList();

                foreach (DO_SpecialtyClinicLink lst in sCodes)
                {
                    obj = new jsTreeObject();

                    obj.id = lst.SpecialtyID.ToString();
                    obj.parent = "#";
                    obj.text = lst.SpecialtyDesc;
                    obj.state = new stateObject { opened = false, selected = false };

                    SpecialtyTree.Add(obj);
                }

                return Json(SpecialtyTree);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }

        }

        [Area("eSyaClinicalServices")]
        public IActionResult V_1573_00()
        {
            ViewBag.formName = "Specialty Doctor Link";
            return View();
        }
    }
}