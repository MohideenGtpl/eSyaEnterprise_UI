@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_PatientLayout.cshtml";
}
@*<link href="~/css/eSyaPatientFeedback/outpatient.css" rel="stylesheet" />*@
<link href="~/css/eSyaPatientPortal/preRegistration.css" rel="stylesheet" />
<style>
    nav {
        display: none !important;
    }
</style>
<script>

    var _cnfISDCode = "91";
    $(function () {
        _cnfISDCode = "91";
    });
</script>

<section class="section_PreRegistration">
    <div class="row pt-2 mb-3">
        <div class="col-12 text-center">
            <a asp-area="" asp-controller="Home" asp-action="Index" class="navbar-brand">
                <img src="~/images/logo/esya-logo-whitebg.jpeg" class="img-responsive MasterPage-Logo" />
            </a>
        </div>
        <div class="col-lg-12 col-md-12 col-sm-12">
            <p class="_preg_mainheading">Pre Registration</p>

        </div>
        <div class="col-lg-12 col-md-12 col-sm-12 form-group">
            <p class="heading_preRegistration"><i class="fa fa-file"></i> Demographic Details</p>

        </div>
        <div class="col-lg-4 col-md-4 col-sm-6 form-group">
            <label>First Name</label>
            <input type="text" name="First name" class="form-control" id="txtFirstName" maxlength="50" />
        </div>
        <div class="col-lg-4 col-md-4 col-sm-6 form-group">
            <label>Middle Name</label>
            <input type="text" name="Middle name" class="form-control" id="txtMiddleName" maxlength="50" />
        </div>
        <div class="col-lg-4 col-md-4 col-sm-6 form-group">
            <label>Last Name</label>
            <input type="text" name="Last name" class="form-control" id="txtLastName" maxlength="50" />
        </div>
        <div class="col-lg-2 col-md-4 col-sm-6 form-group">
            <label>Gender</label>
            <select class="w-100 selectpicker" id="cboGender">
                <option value="0">Select</option>
                <option value="M">Male</option>
                <option value="F">Female</option>
            </select>
        </div>
        <div class="col-lg-2 col-md-4 col-sm-4 col-4 form-group">
            <label>Age</label>
            <input type="text" name="number" class="form-control" id="txtAge" maxlength="2" />
        </div>
        <p class="m-0 col-lg-1 col-md-1 col-sm-2 col-3 text-center d-flex flex-column justify-content-center">(OR)</p>
        
        <div class="col-lg-2 col-md-4 col-sm-6 col-5 form-group">
            <label>DOB</label>
            <input type="text" name="DOB" class="form-control datepicker" id="dtDob" readonly="readonly" />
        </div>

        <div class="col-lg-2 col-md-4 col-sm-6 form-group">
            <label>Marital Status</label>
            <select class="w-100 selectpicker" id="cboMaritalStatus">
                <option value="0">Select</option>
                <option value="M">Married</option>
                <option value="S">Single</option>
            </select>
        </div>
        <div class="col-lg-2 col-md-4 col-sm-6 form-group" style="display:none">
            <label>Number of Children</label>
            <input type="text" name="number" class="form-control" id="txtNoofChildren" maxlength="10" />
        </div>
        <div class="col-lg-3 col-md-4 col-sm-6 form-group">
            <label>Nationality</label>
            <select class="w-100 selectpicker" data-live-search="true" id="cboNationality" title="Select" data-size="6" asp-items="@ViewBag.Nationality">
                <option value="0">Select</option>
            </select>
        </div>
        <div class="col-lg-4 col-md-4 col-sm-6 form-group">
            <label>Occupation</label>
            <input type="text" class="form-control" id="txtOccupation" maxlength="150" />
        </div>

        <div class="col-lg-4 col-md-4 col-sm-6 form-group">
            <label>Preferred Language</label>
            <select class="w-100 selectpicker" data-live-search="false" id="cboMotherTongue" title="Select" data-size="8" asp-items="@ViewBag.MotherTongueList">
                <option value="0">Select</option>
            </select>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-lg-12 col-md-12 col-sm-12 form-group">
            <p class="heading_preRegistration"><i class="fa fa-phone"></i> Contact Details</p>
        </div>

        <div class="col-lg-4 col-md-4 col-sm-12 form-group">
            <label>Mobile</label>
            @await Component.InvokeAsync("IsdMobileInput", new { id = "MobileNo" })

        </div>
        <div class="col-lg-8 col-md-8 col-sm-12 form-group">
            <label>Email ID</label>
            <input type="text" class="form-control" id="txtEmailId" maxlength="50" />
        </div>

        @*<div class="col-lg-12 col-md-12 col-sm-12 form-group">
                <label>Address</label>
                <input name="Address" class="form-control" id="txtAddress" maxlength="250">
            </div>
            <div class="col-lg-4 col-md-4 col-sm-4 form-group">
                <label>City</label>
                <input type="text" class="form-control" id="txtCity" />
            </div>
            <div class="col-lg-4 col-md-4 col-sm-6 form-group">
                <label>PinCode</label>
                <input type="text" name="number" class="form-control" id="txtPinCode" maxlength="10" />
            </div>
            <div class="col-lg-4 col-md-4 col-sm-6 form-group">
                <label>Area Code</label>
                <input type="text" name="number" class="form-control" id="txtAreaCode" maxlength="10" />
            </div>*@

        <div class="col-lg-3 col-md-2 col-sm-12">
            <div class="form-group">
                <label>Address</label>
                <textarea id="txtAddress" rows="4" class="form-control"></textarea>
            </div>
        </div>

        <div class="col-lg-3 col-lg-3 col-sm-6 form-group">
            <label>State</label>
            <select class="w-100 selectpicker" id="cboState" data-size="8" data-live-search="true" onchange="fncboState_change()">
                <option value="0">Select</option>

            </select>
        </div>

        <div class="col-lg-3 col-md-3 col-sm-6 form-group">
            <label>City</label>
            <select class="w-100 selectpicker" id="cboCity" data-size="8" data-live-search="true" onchange="fncboCity_change()">
                <option value="0">Select</option>

            </select>
        </div>

        <div class="col-lg-3 col-md-3 col-sm-6 form-group">
            <label>Area</label>
            <select class="w-100 selectpicker" id="cboArea" data-size="8" data-live-search="true">
                <option value="0">Select</option>

            </select>
        </div>

        <div class="col-lg-4 col-md-4 col-sm-6 form-group">
            <label>Pin Code</label>
            <input type="text" name="number" class="form-control" id="txtPinCode" maxlength="10" />
        </div>


    </div>
    <div class="row mb-3">
        <div class="col-lg-12 col-md-12 col-sm-12 form-group">
            <p class="heading_preRegistration"><i class="fa fa-user"></i> Relationship Details</p>
        </div>
        <div class="col-lg-4 col-md-4 col-sm-6 form-group">
            <label>RelationShip</label>
            <select class="w-100 selectpicker" id="cboRelationShip">
                <option value="0">Select</option>
                <option value="1">Friend</option>
                <option value="2">Neighbour</option>
                <option value="3">Relative</option>
            </select>
        </div>
        <div class="col-lg-4 col-md-4 col-sm-6 form-group">
            <label>Relation Name</label>
            <input type="text" class="form-control" id="txtRelationName" maxlength="150" />
        </div>

        <div class="col-lg-4 col-md-4 col-sm-6 form-group">
            <label>Referred by:</label>
            <select class="w-100 selectpicker" data-live-search="false" id="cboReffferedby" title="Select" data-size="6" asp-items="@ViewBag.RefferedByList">
                <option value="0">Select</option>
            </select>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-lg-12 col-md-12 col-sm-12 form-group">
            <p class="heading_preRegistration"><i class="fa fa-info-circle"></i> Other Details</p>
        </div>

        <div class="col-lg-12 col-md-12 form-group">

            <label>Present Complaint</label>
            <input type="text" class="form-control" id="txtPresentComplaint" maxlength="150" />
        </div>

        <div class="col-lg-12 col-md-12 form-group">
            <label>Pre Existing Health Condition</label>
            <input type="text" name="Firstname" class="form-control" id="txtPreExistingHealthCondition" maxlength="50" />
        </div>
        <div class="col-lg-4 col-md-4 col-sm-6 form-group" style="display:none">
            <label>RUHID</label>
            <input type="text" name="number" class="form-control" id="txtRUHID" maxlength="50" />
        </div>
        <div class="col-lg-4 col-md-4 col-sm-6 form-group" style="display:none">
            <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect" for="chkActiveStatus">
                <input type="checkbox" id="chkActiveStatus" class="mdl-checkbox__input">
                <span class="mdl-checkbox__label"> Active Status</span>
            </label>
        </div>
        <div class="col-lg-12 col-md-12 col-sm-12 text-center div-button">
            <hr />
            <button type="button" class="btn btn-primary mr-10" id="btnSavePatientRegistration" onclick="fnSavePatientRegistration()"> <i class="fa fa-save"></i>  Save</button>
            <button type="button" class="btn btn-primary  cancel-button" id="btnPatientRegistrationCancel"><i class="fa fa-times"></i> Cancel</button>
        </div>
    </div>
</section>
<script>

    //$(function () {

    //    $("#dtDob").datepicker({
    //        dateFormat: _cnfDateFormat
    //    });
    //});

    $(document).ready(function () {
        $("#chkActiveStatus").parent().addClass("is-checked");
        BindStates();
    });
    //$(".ComplaintSelecteCheckBox").change(function () {
    //    var checkboxid = $(this).attr("id");
    //    var txtboxid = checkboxid.substring(3);
    //    if (this.checked) {

    //        $("#txt" + txtboxid).attr("disabled", false);
    //    }
    //    else {
    //        $("#txt" + txtboxid).val('');
    //        $("#txt" + txtboxid).attr("disabled", true);
    //    }
    //});

    $('input[name="number"]').keyup(function (e) {
        if (/\D/g.test(this.value)) {
            // Filter non-digits from input value.
            this.value = this.value.replace(/\D/g, '');
        }
    });

    function fnSavePatientRegistration() {

        if (IsValidSavePatientRegistration() === false) {
            return;
        }
        var objage = "";
        var objdob = "";
        if (IsStringNullorEmpty($("#txtAge").val() && $("#dtDob").val() != null)) {


            var selecteddate = $("#dtDob").datepicker('getDate');
            var selectedyear = selecteddate.getFullYear();
            var currentDate = new Date();
            var currentYear = currentDate.getFullYear();
            objage = currentYear - selectedyear;
            objdob = $("#dtDob").val();
        }

        if (IsStringNullorEmpty($("#dtDob").val() && $("#txtAge").val() != null)) {

            var _age = $("#txtAge").val();
            var currentDate = new Date();
            var currentYear = currentDate.getFullYear();
            var calyear = currentYear - _age;
            objdob = '01-01-' + calyear;
            objage = $("#txtAge").val();
        }

        //var Complaintschected = [];

        //$("[name='chkComplaintslistitem']").each(function (index, data) {
        //    if (data.checked) {
        //        Complaintschected.push(data.value);
        //    }
        //});



        //var PersonalInfoList = [];

        //$("[name='txtPersonalInfo']").each(function (index, data) {
        //    if (!IsStringNullorEmpty(data.value)) {
        //        PersonalInfoList.push(data.value);
        //    }

        //});



        //var StrPersonalInfo = [];
        //if (Complaintschected.length !== 0 && PersonalInfoList.length !== 0) {
        //    var key = Complaintschected,
        //        value = PersonalInfoList,
        //        StrPersonalInfo = JSON.stringify(key.reduce((p, c, i) => { p[c] = value[i]; return p }, {}));
        //}

        //var Languagechected = [];

        //$("[name='chkLanguagelistitem']").each(function (index, data) {
        //    if (data.checked) {
        //        Languagechected.push(data.value);
        //    }
        //});

        //Languagechected = Languagechected.toString();

        var obj = {
            BusinessKey: 0,
            Prkey: 0,
            //Prdate:0,
            PatientFirstName: $("#txtFirstName").val(),
            PatientMiddleName: $("#txtMiddleName").val(),
            PatientLastName: $("#txtLastName").val(),
            Gender: $("#cboGender").val(),
            //AgeYy: $("#txtAge").val(),
            //DateOfBirth: $("#dtDob").val(),
            AgeYy: objage,
            DateOfBirth: objdob,
            MaritalStatus: $("#cboMaritalStatus").val(),
            NoOfChildren: $("#txtNoofChildren").val(),
            Isdcode: $("#cboMobileNo").val(),
            MobileNumber: $("#txtMobileNo").val(),
            EmailId: $("#txtEmailId").val(),
            Nationality: $("#cboNationality").val(),
            Address: $("#txtAddress").val(),
            //City: $("#txtCity").val(),
            City: $("#cboCity").val(),
            Pincode: $("#txtPinCode").val(),
            AreaCode: $("#cboArea").val(),
            Occupation: $("#txtOccupation").val(),
            PreferredLanguage: $("#cboMotherTongue").val(),
            Relationship: $("#cboRelationShip").val(),
            RelationName: $("#txtRelationName").val(),
            ReferredBy: $("#cboReffferedby").val(),
            PresentComplaints: $("#txtPresentComplaint").val(),
            PreExistingHealthCondition: $("#txtPreExistingHealthCondition").val(),
            //PersonalInfo: StrPersonalInfo,
            //SpeakingLanguages: Languagechected,
            RUhid: $("#txtRUHID").val(),
            ActiveStatus: $("#chkActiveStatus").parent().hasClass("is-checked")

        };
        $("#btnSavePatientRegistration").attr('disabled', true);
        $.ajax({
            url: getBaseURL() + '/PreRegistration/InsertPatientPreRegistration',
            type: 'POST',
            datatype: 'json',
            data: { obj },
            success: function (response) {
                if (response.Status) {
                    toastr.success(response.Message);
                    $("#btnSavePatientRegistration").attr('disabled', false);
                    fnClearPatientRegistrationFields();
                    return true;
                }
                else {
                    toastr.error(response.Message);
                    $("#btnSavePatientRegistration").attr('disabled', false);
                    return false;
                }

            },
            error: function (error) {
                toastr.error(error.statusText);
                $("#btnSavePatientRegistration").attr('disabled', false);
            }
        });

    }

    function IsValidSavePatientRegistration() {

        var EmailPattern = /^\w+([-+.'][^\s]\w+)*@@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
        if (IsStringNullorEmpty($("#txtFirstName").val())) {
            toastr.warning("Please Enter First Name");
            return false;
        }
        if (IsStringNullorEmpty($("#txtLastName").val())) {
            toastr.warning("Please Enter Last Name");
            return false;
        }

        if ($("#cboGender").val() == 0 || $("#cboGender").val() == "0") {
            toastr.warning("Please Select Gender");
            return false;
        }
        if (IsStringNullorEmpty($("#txtAge").val()) && IsStringNullorEmpty($("#dtDob").val())) {
            toastr.warning("Please Enter Age or Date of Birth");
            return false;
        }

        if ($("#cboMaritalStatus").val() == 0 || $("#cboMaritalStatus").val() == "0") {
            toastr.warning("Please Select Marital Status");
            return false;
        }
        if ($("#cboNationality").val() == 0 || $("#cboNationality").val() == "0") {
            toastr.warning("Please Select Nationality");
            return false;
        }
        if ($("#cboMotherTongue").val() == 0 || $("#cboMotherTongue").val() == "0") {
            toastr.warning("Please select Preferred Language");
            return false;
        }
        if (IsStringNullorEmpty($("#cboMobileNo").val()) || $("#cboMobileNo").val() == 0 || $("#cboMobileNo").val() == "0") {
            toastr.warning("Please Select ISD Code");
            return false;
        }
        if (IsStringNullorEmpty($("#txtMobileNo").val())) {
            toastr.warning("Please Enter Mobile Number");
            return false;
        }

        if (!IsStringNullorEmpty($("#txtEmailId").val())) {

            if (!EmailPattern.test($("#txtEmailId").val())) {
                toastr.warning("Email ID is Not Valid");
                $('#txtEmailId').focus();
                return false;
            }
        }
        if (IsStringNullorEmpty($("#txtAddress").val())) {
            toastr.warning("Please Enter Address");
            return false;
        }
        if ($("#cboCity").val() == 0 || $("#cboCity").val() == "0") {
            toastr.warning("Please select City");
            return false;
        }
        if ($("#cboArea").val() == 0 || $("#cboArea").val() == "0") {
            toastr.warning("Please select Area");
            return false;
        }
        if ($("#cboRelationShip").val() == 0 || $("#cboRelationShip").val() == "0") {
            toastr.warning("Please select Relation Ship");
            return false;
        }
        if ($("#cboReffferedby").val() == 0 || $("#cboReffferedby").val() == "0") {
            toastr.warning("Please select Refffered By");
            return false;
        }

    }

    function fnClearPatientRegistrationFields() {
        $("#txtFirstName").val('');
        $("#txtMiddleName").val('');
        $("#txtLastName").val('');
        $("#cboGender").val('0').selectpicker('refresh');
        $("#txtAge").val('');
        $("#dtDob").val('');
        $("#txtOccupation").val('');
        $('#cboMobileNo').val("0").selectpicker('refresh');
        $('#txtMobileNo').val('');
        $("#cboMotherTongue").val('0').selectpicker('refresh');
        $("#cboMaritalStatus").val('0').selectpicker('refresh');
        $("#cboNationality").val('0').selectpicker('refresh');
        $("#cboRelationShip").val('0').selectpicker('refresh');
        $("#cboState").val('0').selectpicker('refresh');
        $("#cboCity").val('0').selectpicker('refresh');
        $("#cboArea").val('0').selectpicker('refresh');
        $("#txtRelationName").val('');
        $("#txtNoofChildren").val('');
        $("#txtAreaCode").val('');
        $("#txtEmailId").val('');
        $("#txtAddress").val('');
        $("#txtCity").val('');
        $("#txtPinCode").val('');
        $('#cboReffferedby').val("0").selectpicker('refresh');
        $("#txtPresentComplaint").val('');
        $("#txtRUHID").val('');
        $("#txtPreExistingHealthCondition").val('');
        $('input[name=chkComplaintslistitem]').prop('checked', false);

        $('input[name=chkLanguagelistitem]').prop('checked', false);

        $('input[name=txtPersonalInfo]').val('');

        $('input[name=txtPersonalInfo]').attr("disabled", true);

        $("#chkActiveStatus").parent().addClass("is-checked");

        $("#btnSavePatientRegistration").attr("disabled", false);
        $("#btnSavePatientRegistration").html('Save');
    }

    $("#btnPatientRegistrationCancel").click(function () {

        fnClearPatientRegistrationFields();
    });

    function fncboState_change() {
        BindCities();
        BindAreas();
    }

    function fncboCity_change() {
        BindAreas();
    }

    function BindStates() {

        $("#cboState").empty();

        $.ajax({
            url: getBaseURL() + '/PreRegistration/GetStateList?isdCode=' + _cnfISDCode,
            type: 'GET',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            error: function (xhr) {
                toastr.error('Error: ' + xhr.statusText);
            },
            success: function (response, data) {

                //refresh each time
                $("#cboState").empty();
                $("#cboState").append($("<option value='0'> Select </option>"));
                for (var i = 0; i < response.length; i++) {

                    $("#cboState").append($("<option></option>").val(response[i]["PlaceId"]).html(response[i]["PlaceName"]));
                }
                $('#cboState').selectpicker('refresh');

            },
            async: false,
            processData: false
        });


    }

    function BindCities() {

        $("#cboCity").empty();
        $.ajax({
            url: getBaseURL() + '/PreRegistration/GetCityList?isdCode=' + _cnfISDCode + '&stateCode=' + $("#cboState").val(),
            type: 'GET',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            error: function (xhr) {
                toastr.error('Error: ' + xhr.statusText);
            },
            success: function (response, data) {

                //refresh each time
                $("#cboCity").empty();

                $("#cboCity").append($("<option value='0'> Select </option>"));
                for (var i = 0; i < response.length; i++) {

                    $("#cboCity").append($("<option></option>").val(response[i]["PlaceId"]).html(response[i]["PlaceName"]));
                }
                $('#cboCity').selectpicker('refresh');

            },
            async: false,
            processData: false
        });


    }

    function BindAreas() {

        $("#cboArea").empty();
        $.ajax({

            url: getBaseURL() + '/PreRegistration/GetAreaList?isdCode=' + _cnfISDCode + "&stateCode=" + $('#cboState').val()
                + "&cityCode=" + $('#cboCity').val() + "&pincode=" + $('#txtPinCode').val(),
            type: 'GET',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            error: function (xhr) {
                toastr.error('Error: ' + xhr.statusText);
            },
            success: function (response, data) {

                //refresh each time
                $("#cboArea").empty();
                $("#cboArea").append($("<option value='0'> Select </option>"));
                for (var i = 0; i < response.length; i++) {

                    $("#cboArea").append($("<option></option>").val(response[i]["AreaCode"]).html(response[i]["AreaName"]));
                }
                $('#cboArea').selectpicker('refresh');
            },

            async: false,
            processData: false
        });
    }


    $('#txtPinCode').blur(function () {

        $.ajax({
            url: getBaseURL() + '/PreRegistration/GetAreaDetailsbyPincode?isdCode=' + _cnfISDCode + '&pincode=' + $("#txtPinCode").val(),
            type: 'GET',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                if (result != null) {

                    BindStates();
                    $('#cboState').val(result.StateCode);
                    $('#cboState').selectpicker('refresh');
                    BindCities();
                    $('#cboCity').val(result.CityCode);
                    $('#cboCity').selectpicker('refresh');
                    BindAreas();
                    $('#cboArea').val(result.AreaCode);
                    $('#cboArea').selectpicker('refresh');
                }

                else {
                    $('#cboState').selectpicker('refresh');
                    $('#CityCode').selectpicker('refresh');
                    $('#cboArea').selectpicker('refresh');
                }
            },
            error: function (result) {
                //Your error message
                $('#cboState').selectpicker('refresh');
                $('#CityCode').selectpicker('refresh');
                $('#cboArea').selectpicker('refresh');
            },
            async: false,
            processData: false
        });

    });

    var _cnfDateFormat = @Json.Serialize(@Configuration.GetSection("cnf").GetSection("DateFormat").Value);
    var _cnfjqgDateFormat = @Json.Serialize(@Configuration.GetSection("cnf").GetSection("ShortDateFormat").Value);
    var _cnfdecimalDigits = @Json.Serialize(@Configuration.GetSection("cnf").GetSection("DecimalDigit").Value);
    var _cnfLocalCurrency = @Json.Serialize(@Configuration.GetSection("cnf").GetSection("LocalCurrencyCode").Value);
    var _cnfISDCode = @Json.Serialize(@Configuration.GetSection("cnf").GetSection("ISDCode").Value);
</script>
