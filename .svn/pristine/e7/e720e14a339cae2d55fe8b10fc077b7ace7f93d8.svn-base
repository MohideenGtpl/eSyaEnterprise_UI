using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using System.Net.Http;
using eSyaEnterprise_UI.Areas.Config.Models;
using eSyaEnterprise_UI.Models;
using eSyaEnterprise_UI.Utility;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Newtonsoft.Json;
namespace eSyaEnterprise_UI.Areas.Config.Controllers
{
    public class UserManagementController : Controller
    {
        ESyaWebAPI _eSyaWebAPI = new ESyaWebAPI();
        //User Group
        [Area("Config")]
        public IActionResult V_51_00()
        {
            var client = _eSyaWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
            int ug_ctype = 1;
            HttpResponseMessage ug_response = client.GetAsync("ConfigMasterData/GetApplicationCodesByCodeType?codeType="+ ug_ctype).Result;
            string ugdata = ug_response.Content.ReadAsStringAsync().Result;
            List<DO_ApplicationCodes> ugapp_codes = JsonConvert.DeserializeObject<List<DO_ApplicationCodes>>(ugdata);
            ViewBag.UGappcodes = ugapp_codes;

            int ut_ctype = 2;
            HttpResponseMessage ut_response = client.GetAsync("ConfigMasterData/GetApplicationCodesByCodeType?codeType=" + ut_ctype).Result;
            string utdata = ut_response.Content.ReadAsStringAsync().Result;
            List<DO_ApplicationCodes> utapp_codes = JsonConvert.DeserializeObject<List<DO_ApplicationCodes>>(utdata);
            ViewBag.UTappcodes = utapp_codes;


            HttpResponseMessage MainMenu_response = client.GetAsync("eSyaConfigureMenu/GetConfigureMenulist").Result;
            string data = MainMenu_response.Content.ReadAsStringAsync().Result;
            var MainMenu = JsonConvert.DeserializeObject< List<DO_MainMenu>>(data);
            return View(MainMenu);
        }

        /// <summary>
        /// Get Configuration Menu List for js tree
        /// </summary>
        [HttpPost]
        public JsonResult GetConfigureMenulist()
        {
            try
            {
                var client = _eSyaWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
                HttpResponseMessage MainMenu_response = client.GetAsync("eSyaConfigureMenu/GetConfigureMenulist").Result;
                string data = MainMenu_response.Content.ReadAsStringAsync().Result;
                var MainMenu = JsonConvert.DeserializeObject<List<DO_MainMenu>>(data);
                return Json(data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        /// Get User Group Menu keys for js tree
        /// </summary>
        [HttpPost]
        public JsonResult GetMenuKeysbyUserGroupAndUserType(int uG, int uT)
        {
            try
            {
                var client = _eSyaWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
                var parameter = "?uG=" + uG + "&uT=" + uT;
                HttpResponseMessage response = client.GetAsync("UserManagement/GetMenuKeysbyUserGroupAndUserType" + parameter).Result;
                string stringData = response.Content.ReadAsStringAsync().Result;
                List<int> data = JsonConvert.DeserializeObject<List<int>>(stringData);
                return Json(data);
               
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }
        /// <summary>
        /// Insert into User Group
        /// </summary>
        [HttpPost]
        public JsonResult InsertMenukeysIntoUserGroup([FromBody] DO_UserGroup selectedkeys)
        {

            try
            {
                var client = _eSyaWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
                selectedkeys.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                selectedkeys.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                HttpResponseMessage response = client.PostAsJsonAsync<DO_UserGroup>("UserManagement/InsertMenukeysIntoUserGroup", selectedkeys).Result;
                string data = response.Content.ReadAsStringAsync().Result;
                var result = JsonConvert.DeserializeObject<DO_ReturnParameter>(data);
                return Json(result);
            }

            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }

        //User Creation Grid
        [Area("Config")]
        public IActionResult V_52_00()
        {
            return View();
        }
        // User Creation form
        [Area("Config")]
        public IActionResult _UserCreation()
        {
            return View();
        }
    }
}