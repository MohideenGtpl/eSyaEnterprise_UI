
Date.prototype.timeToInput = function () {
    return ('0' + (this.getHours())).substr(-2, 2) + ':' + ('0' + this.getMinutes()).substr(-2, 2);
};

$(function () {


});

$.get(getBaseURL() + '/NurseAssessment/GetInPatientDetailsByIPNumber', {
    ipnumber: $('#hdIPNumber').val()
}, function (result, status) {
    $('#lblPatientName').html(result.PatientName);
    $('#lblGender').html(result.Sex);
    $('#lblAge').html(result.Age);
    $('#lblDOA').html(fnFormatDateJsonToInput(result.EffectiveDateOfAdmission));
    $('#lblConsultantName').html(result.DoctorName);
    $('#lblRoomType').html(result.RoomTypeDesc);
    $('#lblBedNumber').html(result.BedNumber);

    gridDoctorNotes();

    Utils_ClinicalCharts.gridClinicalCharts("VT");
});

$("#jqgNursingCarePlan").jqGrid({
    url: getBaseURL() + '/PatientClinicalInformation/GetClinicalInformationValueForPatient',
    datatype: "json",
    contenttype: "application/json; charset-utf-8",
    mtype: 'GET',
    postData: {
        UHID: function () { return $('#hdUHID').val(); },
        IPNumber: function () { return $('#hdIPNumber').val(); },
        clType: "NN"
    },
    colNames: ["ID", "Date", "Nurse Notes", "Actions"],
    colModel: [
        { name: "TransactionID", hidden: true },
        {
            name: 'TransactionDate', index: 'TransactionDate', width: 90, resizable: false, sorttype: "date", formatter: "date",
            formatoptions: { srcformat: "ISO8601Long", newformat: _cnfjqgDateFormat + " h:i A" }
            //formatoptions: { srcformat: "ISO8601Long", newformat: "m/d/Y h:i A" }
        },
        { name: "Value", width: 250, editable: true, align: 'left', resizable: true },
        {
            name: 'edit', search: false, align: 'left', width: 90, sortable: false, resizable: false,
            formatter: function (cellValue, options, rowdata, action) {
                return '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title="Edit" id="jqgEdit" onclick="return editNurseNotes(event,\'edit\')"><i class="fas fa-pencil-alt"></i> </button>' +
                    '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title="View" id="jqgView" onclick="return editNurseNotes(event,\'view\')"><i class="far fa-eye"></i> </button>';
                //'<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title = "Delete" id="jqgDelete" onclick = "return fnEditNurseNotes(event,\'delete\')" > <i class="fas fa-trash"></i> Delete</button >'
            }
        }
    ],
    pager: "#jqpNursingCarePlan",
    rowNum: 10000,
    loadonce: true,
    viewrecords: true,
    gridview: true,
    rownumbers: true,
    height: 'auto',
    width: '100%',
    autowidth: true,
    shrinkToFit: true,
    forceFit: true
}).jqGrid('navGrid', '#jqpNursingCarePlan', { add: false, edit: false, search: false, del: false, refresh: false });

function addNurseNotes() {
    setDate($('#dpNurseDate'), new Date());
    $('#tpNurseTime').val(new Date().timeToInput());
    $('#txtNurseNotes').val("");
    $("#PopupNurseNotes").modal('show');
    _isUpdate = false;
    _intTransactionId = 0;
}

var _isUpdate = false;
var _intTransactionId = 0;

function editNurseNotes(e, actiontype) {
    var rowid = $(e.target).parents("tr.jqgrow").attr('id');
    var rowData = $('#jqgNursingCarePlan').jqGrid('getRowData', rowid);

    $("#PopupNurseNotes").modal('show');
    _isUpdate = true;
    _intTransactionId = rowData.TransactionID;

    getClinicalInformationByID(rowData.TransactionID, function (data) {
        $.each(data, function (key, val) {
            setDate($('#dpNurseDate'), val.TransactionDate);
            $('#tpNurseTime').val(new Date(val.TransactionDate).timeToInput());
            $('#txtNurseNotes').val(val.Value);
        });
    });
}

function saveNurseNotes() {
    fnProcessLoading(true, "saving");
    $("#btnSaveNurseNotes").attr('disabled', true);

    var l_NurseNotes = [];
    l_NurseNotes.push({
        CLType: "NN",
        CLControlID: "NN",
        ValueType: "text",
        Value: $('#txtNurseNotes').val()
    });

    var ns = {
        TransactionID: _intTransactionId,
        UHID: $('#hdUHID').val(),
        IPNumber: $('#hdIPNumber').val(),
        TransactionDate: getDate($('#dpNurseDate')),
        TransactionTime: $('#tpNurseTime').val(),
        l_CL_ControlValue: l_NurseNotes,
        ActiveStatus: true,
        UserID: 0
    };

    saveClinicalInformationData(ns, function (result) {
        fnProcessLoading(false);
        $("#btnSaveNurseNotes").attr('disabled', false);
        if (result) {
            $("#PopupNurseNotes").modal('hide');
            jQuery("#jqgNursingCarePlan").jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
        }
    });
}


function gridDoctorNotes() {

    $("#jqgDoctorNotes").jqGrid({
        url: getBaseURL() + '/PatientClinicalInformation/GetClinicalInformationValueForPatient',
        datatype: "json",
        contenttype: "application/json; charset-utf-8",
        mtype: 'GET',
        postData: {
            UHID: function () { return $('#hdUHID').val(); },
            IPNumber: function () { return $('#hdIPNumber').val(); },
            clType: "DN"
        },
        colNames: ["ID", "Date", "Doctor Notes", "Actions"],
        colModel: [
            { name: "TransactionID", hidden: true },
            {
                name: 'TransactionDate', index: 'TransactionDate', width: 90, resizable: false, sorttype: "date", formatter: "date",
                formatoptions: { srcformat: "ISO8601Long", newformat: _cnfjqgDateFormat + " h:i A" }
            },
            { name: "Value", width: 420, editable: true, align: 'left', resizable: true },
            {
                name: 'edit', search: false, align: 'left', width: 70, sortable: false, resizable: false,
                formatter: function (cellValue, options, rowdata, action) {
                    return '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title="Edit" id="jqgEdit" onclick="return editDoctorNotes(event,\'edit\')"><i class="fas fa-pencil-alt"></i> </button>' +
                        '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title="View" id="jqgView" onclick="return editDoctorNotes(event,\'view\')"><i class="far fa-eye"></i> </button>';
                }
            }
        ],
        pager: "#jqpDoctorNotes",
        rowNum: 10000,
        loadonce: true,
        viewrecords: true,
        gridview: true,
        rownumbers: true,
        height: 'auto',
        width: '100%',
        autowidth: true,
        shrinkToFit: true,
        forceFit: true
    }).jqGrid('navGrid', '#jqpDoctorNotes', { add: false, edit: false, search: false, del: false, refresh: false });
}

function addDoctorNotes() {
    setDate($('#dpDoctorDate'), new Date());
    $('#tpDoctorTime').val(new Date().timeToInput());
    $('#txtDoctorNotes').val("");
    $("#PopupDoctorNotes").modal('show');
    _isUpdate = false;
    _intTransactionId = 0;
}

function editDoctorNotes(e, actiontype) {
    var rowid = $(e.target).parents("tr.jqgrow").attr('id');
    var rowData = $('#jqgDoctorNotes').jqGrid('getRowData', rowid);

    $("#PopupDoctorNotes").modal('show');
    _isUpdate = true;
    _intTransactionId = rowData.TransactionID;

    getClinicalInformationByID(rowData.TransactionID, function (data) {
        $.each(data, function (key, val) {
            setDate($('#dpDoctorDate'), val.TransactionDate);
            $('#tpDoctorTime').val(new Date(val.TransactionDate).timeToInput());
            $('#txtDoctorNotes').val(val.Value);
        });
    });
}

function saveDoctorNotes() {
    fnProcessLoading(true, "saving");
    $("#btnSaveDoctorNotes").attr('disabled', true);

    var l_DoctorNotes = [];
    l_DoctorNotes.push({
        CLType: "DN",
        CLControlID: "DN",
        ValueType: "text",
        Value: $('#txtDoctorNotes').val()
    });

    var ns = {
        TransactionID: _intTransactionId,
        UHID: $('#hdUHID').val(),
        IPNumber: $('#hdIPNumber').val(),
        TransactionDate: getDate($('#dpDoctorDate')),
        TransactionTime: $('#tpDoctorTime').val(),
        l_CL_ControlValue: l_DoctorNotes,
        ActiveStatus: true,
        UserID: 0
    };

    saveClinicalInformationData(ns, function (result) {
        fnProcessLoading(false);
        $("#btnSaveDoctorNotes").attr('disabled', false);
        if (result) {
            $("#PopupDoctorNotes").modal('hide');
            jQuery("#jqgDoctorNotes").jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
        }
    });
}

var Utils_ClinicalCharts = {

    gridClinicalCharts: function (type) {

        var cl_result;
        var gv_colNames = [];
        var gv_colModel = [];
        var gv_colId = [];
        var gv_data = [];

        gv_colNames.push("ID");
        gv_colModel.push({ name: "TransactionID", hidden: true });
        gv_colId.push("TransactionID");

        gv_colNames.push("Date");
        gv_colModel.push({
            name: 'TransactionDate', index: 'TransactionDate', width: 90, resizable: false, sorttype: "date", formatter: "date",
            formatoptions: { srcformat: "ISO8601Long", newformat: _cnfjqgDateFormat + " h:i A" }
        });
        gv_colId.push("TransactionDate");

        $.get(getBaseURL() + '/PatientClinicalInformation/GetClinicalInformationValueView',
            {
                UHID: $('#hdUHID').val(),
                IPNumber: $('#hdIPNumber').val(),
                clType: type
            }, function (data, status) {
                cl_result = data;
            }).then(function () {
                $.getJSON(getBaseURL() + "/json/eSyaNursingStation/patientclinicalinformation.json",
                    function (data) {

                        var i = 0;
                        var d = data.filter(element => element.cltype === "VT");
                        $.each(d, function (key, item_nav) {
                            $.each(item_nav.item, function (keys, item_control) {
                                gv_colNames.push(item_control.name);
                                gv_colModel.push({ name: item_control.controlid, width: 80, editable: true, align: 'left', resizable: true });
                                gv_colId.push(item_control.controlid);
                            });
                        });

                    }).then(function () {
                        $.each(cl_result, function (key, data) {
                            var dataRow = {};
                            var dataColumn = "";
                            var dataValue = "";
                            $.each(gv_colId, function (keys, colId) {
                                if (colId === "TransactionID") {
                                    dataRow["TransactionID"] = data.TransactionID;
                                }
                                else if (colId === "TransactionDate") {
                                    dataRow["TransactionDate"] = data.TransactionDate;
                                }
                                else {
                                    $.each(data.l_CL_ControlValue, function (ky, cl) {
                                        if (cl.CLControlID === colId) {
                                            dataRow[colId] = cl.Value;
                                        }
                                    });
                                }

                            });
                            gv_data.push(dataRow);
                        });
                        //alert(JSON.stringify(gv_colNames));
                        //alert(JSON.stringify(gv_colModel));
                        //alert(JSON.stringify(gv_data));
                    }).then(function () {

                        gv_colNames.push("Action");
                        gv_colModel.push({
                            name: 'edit', search: false, align: 'left', width: 70, sortable: false, resizable: false,
                            formatter: function (cellValue, options, rowdata, action) {
                                return '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title="Edit" id="jqgEdit" onclick="return editClinicalCharts(\'' + type + '\',event,\'edit\')"><i class="fas fa-pencil-alt"></i> </button>' +
                                    '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title="View" id="jqgView" onclick="return editClinicalCharts(\'' + type + '\',event,\'view\')"><i class="far fa-eye"></i> </button>';
                            }
                        });

                        if (type === "VT") {
                            $("#jqgVitalCharts").jqGrid('GridUnload');
                            $("#jqgVitalCharts").jqGrid({
                                data: gv_data,
                                datatype: "local",
                                colNames: gv_colNames,
                                colModel: gv_colModel,
                                pager: "#jqpVitalCharts",
                                rowNum: 10000,
                                loadonce: false,
                                viewrecords: true,
                                gridview: true,
                                rownumbers: true,
                                height: 'auto',
                                width: '100%',
                                autowidth: true,
                                shrinkToFit: true,
                                forceFit: true
                            }).jqGrid('navGrid', '#jqpVitalCharts', { add: false, edit: false, search: false, del: false, refresh: false });
                        }

                    });
            });
    },

    populateClinicalTemplate: function (type) {
        var section_item = "";
        return new Promise(function (resolve) {
            $.getJSON(getBaseURL() + "/json/eSyaNursingStation/patientclinicalinformation.json", function (data) {
                var i = 0;
                var d = data.filter(element => element.cltype === type);

                $.each(d, function (key, item_nav) {
                    section_item = "<div class='row border-bottom '>";
                    $.each(item_nav.item, function (keys, item_control) {
                        if (item_control.valuetype === "float") {
                            section_item += "<div class='col-lg-4 col-md-4 col-sm-4'><div class= 'form-group'>";
                            section_item += "<label>" + item_control.name + "</label>";

                            var eventName = "";
                            if (item_control.event === "Y")
                                eventName = "fnControl_onchange('" + item_control.formula + "')";

                            if (!IsStringNullorEmpty(item_control.controlid_2)) {
                                section_item += "<input id='" + item_control.controlid + "' class='form-control decimalNumber d-inline' style='width:50px'>  / ";
                                section_item += "<input id='" + item_control.controlid_2 + "' class='form-control decimalNumber d-inline' style='width:50px'>";
                            }
                            else
                                section_item += "<input id='" + item_control.controlid + "' class='form-control decimalNumber d-inline' style='width:80px' onchange=" + eventName + " >";

                            section_item += "<span class='f-italic'>" + item_control.unittype + "</span>";
                            section_item += "</div></div>";
                        }
                        if (item_control.valuetype === "text") {
                            section_item += "<div class='col-lg-4 col-md-4 col-sm-4'><div class= 'form-group'>";
                            section_item += "<label>" + item_control.name + "</label>";
                            section_item += "<input id='" + item_control.controlid + "' class='form-control' type='text' />";
                            section_item += "</div></div>";
                        }
                        if (item_control.valuetype === "textarea") {
                            section_item += "<div class='col-lg-4 col-md-4 col-sm-12'><div class= 'form-group'>";
                            section_item += "<label>" + item_control.name + "</label>";
                            section_item += "<textarea id='" + item_control.controlid + "' class='form-control' rows='3' cols='50'></textarea>";
                            section_item += "</div></div>";
                        }
                        if (item_control.valuetype === "checkbox") {
                            section_item += "<div class='col-lg-12 col-md-12 col-sm-12'><div class='row pb-2'>";
                            section_item += "<div class='col-lg-4 col-md-5 col-sm-6'><label>" + item_control.name + "</label></div>";
                            section_item += "<div class='col-lg-2 col-md-2 col-sm-2'><label class=''><input type='radio' id='" + item_control.controlid + "_y' class='mr-1' name=" + item_control.controlid + " value='Y'>Yes</label></div>";
                            section_item += "<div class='col-lg-2 col-md-2 col-sm-2'><label class=''><input type='radio' id='" + item_control.controlid + "_n' class='mr-1' name=" + item_control.controlid + " value='N'>No</label></div>";
                            section_item += "</div></div>";
                        }
                        if (item_control.valuetype === "combox") {
                            section_item += "<div class='col-lg-4 col-md-4 col-sm-12'><div class= 'form-group'>";
                            section_item += "<label>" + item_control.name + "</label>";
                            section_item += "<select class='selectpicker form-control' id='" + item_control.controlid + "'>";
                            section_item += "<option value='0' selected>NA</option>";
                            $.each(item_control.values, function (keyv, item_values) {
                                section_item += "<option value='" + item_values.value + "'>" + item_values.name + "</option>";
                            });
                            section_item += "</select>";
                            section_item += "</div></div>";
                        }
                    });
                    section_item += "</div>";
                });
            }).done(function () {
                $("#dvClinicalTemplate").html(section_item);
                fnProcessLoading(false);
            });
            resolve();
        });
    },

    setClinicalTemplate: function (result) {

        $.each(result, function (keys, item) {

            if (item.ValueType === "float" || item.ValueType === "text" || item.ValueType === "textarea") {
                $('#' + item.CLControlID).val(item.Value);
            }
            if (item.ValueType === "combox") {
                $('#' + item.CLControlID).val(item.Value);
            }
            if (item.ValueType === "checkbox") {
                if (item.Value === "Y")
                    $('#' + item.CLControlID + '_y').prop('checked', true);
                if (item.Value === "N")
                    $('#' + item.CLControlID + '_n').prop('checked', true);
            }
            if (item.ValueType === "radio") {
                $('input:radio[name="' + item.CLControlID + '"][value=' + item.Value + ']').prop('checked', true).trigger("click");
            }
        });
    },

    getClinicalTemplate: function (type) {

        return new Promise(function (resolve) {
            var l_VitalCharts = [];

            $.getJSON(getBaseURL() + "/json/eSyaNursingStation/patientclinicalinformation.json", function (data) {
                var i = 0;
                var d = data.filter(element => element.cltype === type);
                $.each(d, function (key, item_nav) {
                    $.each(item_nav.item, function (keys, item_control) {

                        if (item_control.valuetype === "float") {
                            l_VitalCharts.push({
                                CLType: "VT",
                                CLControlID: item_control.controlid,
                                ValueType: item_control.valuetype,
                                Value: $('#' + item_control.controlid).val()
                            });
                        }
                        if (item_control.valuetype === "text") {
                            l_VitalCharts.push({
                                CLType: "VT",
                                CLControlID: item_control.controlid,
                                ValueType: item_control.valuetype,
                                Value: $('#' + item_control.controlid).val()
                            });
                        }
                        if (item_control.valuetype === "textarea") {
                            ns_result.push({
                                CLType: "VT",
                                CLControlID: item_control.controlid,
                                ValueType: item_control.valuetype,
                                Value: $('#' + item_control.controlid).val()
                            });
                        }
                        if (item_control.valuetype === "checkbox") {
                            var rd_value = $("input[type='radio'][name='" + item_control.controlid + "']:checked").val();
                            ns_result.push({
                                CLType: "VT",
                                CLControlID: item_control.controlid,
                                ValueType: item_control.valuetype,
                                Value: rd_value
                            });
                        }
                        if (item_control.valuetype === "combox") {
                            ns_result.push({
                                CLType: "VT",
                                CLControlID: item_control.controlid,
                                ValueType: item_control.valuetype,
                                Value: $('#' + item_control.controlid).val()
                            });
                        }
                    });
                });
            });

            resolve(l_VitalCharts);
        });
    }

};

function editClinicalCharts(type, e, actiontype) {
    editVitalCharts(e, actiontype);
}

function addVitalCharts() {
    setDate($('#dpVitalChartsDate'), new Date());
    $('#tpVitalChartsTime').val(new Date().timeToInput());

    $("#PopupVitalCharts").modal('show');
    _isUpdate = false;
    _intTransactionId = 0;

   Utils_ClinicalCharts.populateClinicalTemplate("VT");
}

function editVitalCharts(e, actiontype) {
    var rowid = $(e.target).parents("tr.jqgrow").attr('id');
    var rowData = $('#jqgVitalCharts').jqGrid('getRowData', rowid);

    $("#PopupVitalCharts").modal('show');
    _isUpdate = true;
    _intTransactionId = rowData.TransactionID;

    getClinicalInformationByID(rowData.TransactionID, function (data) {
        $.each(data, function (key, val) {
            setDate($('#dpVitalChartsDate'), val.TransactionDate);
            $('#tpVitalChartsTime').val(new Date(val.TransactionDate).timeToInput());
        });

        $.when(Utils_ClinicalCharts.populateClinicalTemplate("VT")).then(function () {
            Utils_ClinicalCharts.setClinicalTemplate(data);
        });

    });
}

function saveVitalCharts() {
    fnProcessLoading(true, "saving");
    $("#btnSaveVitalCharts").attr('disabled', true);

    var l_VitalCharts = [];

    $.when(Utils_ClinicalCharts.getClinicalTemplate("VT")).then(function (l_VitalCharts) {
        var ns = {
            TransactionID: _intTransactionId,
            UHID: $('#hdUHID').val(),
            IPNumber: $('#hdIPNumber').val(),
            TransactionDate: getDate($('#dpVitalChartsDate')),
            TransactionTime: $('#tpVitalChartsTime').val(),
            l_CL_ControlValue: l_VitalCharts,
            ActiveStatus: true,
            UserID: 0
        };

        saveClinicalInformationData(ns, function (result) {
            fnProcessLoading(false);
            $("#btnSaveVitalCharts").attr('disabled', false);
            if (result) {
                $("#PopupVitalCharts").modal('hide');
              //  jQuery("#jqgVitalCharts").jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
                Utils_ClinicalCharts.gridClinicalCharts("VT");
            }
        });

    });



    //$.getJSON(getBaseURL() + "/json/eSyaNursingStation/patientclinicalinformation.json", function (data) {
    //    var i = 0;
    //    var d = data.filter(element => element.cltype === "VT");
    //    $.each(d, function (key, item_nav) {
    //        $.each(item_nav.item, function (keys, item_control) {

    //            if (item_control.valuetype === "float") {
    //                l_VitalCharts.push({
    //                    CLType: "VT",
    //                    CLControlID: item_control.controlid,
    //                    ValueType: item_control.valuetype,
    //                    Value: $('#' + item_control.controlid).val()
    //                });
    //            }
    //            if (item_control.valuetype === "text") {
    //                l_VitalCharts.push({
    //                    CLType: "VT",
    //                    CLControlID: item_control.controlid,
    //                    ValueType: item_control.valuetype,
    //                    Value: $('#' + item_control.controlid).val()
    //                });
    //            }
    //            if (item_control.valuetype === "textarea") {
    //                ns_result.push({
    //                    CLType: "VT",
    //                    CLControlID: item_control.controlid,
    //                    ValueType: item_control.valuetype,
    //                    Value: $('#' + item_control.controlid).val()
    //                });
    //            }
    //            if (item_control.valuetype === "checkbox") {
    //                var rd_value = $("input[type='radio'][name='" + item_control.controlid + "']:checked").val();
    //                ns_result.push({
    //                    CLType: "VT",
    //                    CLControlID: item_control.controlid,
    //                    ValueType: item_control.valuetype,
    //                    Value: rd_value
    //                });
    //            }
    //            if (item_control.valuetype === "combox") {
    //                ns_result.push({
    //                    CLType: "VT",
    //                    CLControlID: item_control.controlid,
    //                    ValueType: item_control.valuetype,
    //                    Value: $('#' + item_control.controlid).val()
    //                });
    //            }
    //        });
    //    });
    //}).done(function () {

    //    var ns = {
    //        TransactionID: _intTransactionId,
    //        UHID: $('#hdUHID').val(),
    //        IPNumber: $('#hdIPNumber').val(),
    //        TransactionDate: getDate($('#dpVitalChartsDate')),
    //        TransactionTime: $('#tpVitalChartsTime').val(),
    //        l_CL_ControlValue: l_VitalCharts,
    //        ActiveStatus: true,
    //        UserID: 0
    //    };

    //    saveClinicalInformationData(ns, function (result) {
    //        fnProcessLoading(false);
    //        $("#btnSaveVitalCharts").attr('disabled', false);
    //        if (result) {
    //            $("#PopupVitalCharts").modal('hide');
    //            jQuery("#jqgVitalCharts").jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
    //        }
    //    });

    //});
}



function getClinicalInformationByID(transactionID, callback) {
    $.get(getBaseURL() + '/PatientClinicalInformation/GetClinicalInformationValueByTransaction',
        {
            UHID: $('#hdUHID').val(),
            IPNumber: $('#hdIPNumber').val(),
            transactionID: transactionID
        }, function (data, status) {
            callback(data);
        });
}

function saveClinicalInformationData(l_data, callback) {

    var url = getBaseURL() + '/PatientClinicalInformation/InsertIntoPatientClinicalInformation';

    if (_isUpdate === true)
        url = getBaseURL() + '/PatientClinicalInformation/UpdatePatientClinicalInformation';

    $.ajax({
        url: url,
        type: 'POST',
        datatype: 'json',
        contenttype: 'application/json; charset=utf-8',
        data: l_data,
        async: true,
        success: function (response) {
            if (response.Status) {
                toastr.success("Saved!");
                callback(true);
            }
            else {
                toastr.error(response.Message);
                callback(false);
            }
        },
        error: function (error) {
            toastr.error(error.statusText);
            callback(false);
        }
    });
}