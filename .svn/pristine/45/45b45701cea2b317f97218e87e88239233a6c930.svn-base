using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using eSyaEnterprise_UI.ActionFilter;
using eSyaEnterprise_UI.Areas.Config.Models;
using eSyaEnterprise_UI.Areas.eSyaCustomer.Data;
using eSyaEnterprise_UI.Areas.eSyaCustomer.Models;
using eSyaEnterprise_UI.Models;
using eSyaEnterprise_UI.Utility;
using Microsoft.AspNetCore.Mvc;

namespace eSyaEnterprise_UI.Areas.eSyaCustomer.Controllers
{
    public class CustomerController : Controller
    {
        private readonly IeSyaCustomerAPIServices _eSyaCustomerAPIServices;
        public CustomerController(IeSyaCustomerAPIServices eSyaCustomerAPIServices)
        {
            _eSyaCustomerAPIServices = eSyaCustomerAPIServices;
        }

        [Area("eSyaCustomer")]
        [ServiceFilter(typeof(ViewBagActionFilter))]
        public IActionResult V_271_00()
        {
            try
            {
                var serviceResponse = _eSyaCustomerAPIServices.HttpClientServices.GetAsync<List<DO_CountryCodes>>("CommonData/GetISDCodes").Result;
                ViewBag.isd_co = serviceResponse.Data;
                return View();
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.ToString() });
            }
        }

        /// <summary>
        ///Get Customer Code Information By Customer Name Prefix
        /// </summary>
        [HttpPost]
        public JsonResult GetCustomerCodeInformationByNamePrefix(string customerNamePrefix)
        {
            try
            {
                var serviceResponse = _eSyaCustomerAPIServices.HttpClientServices.GetAsync<List<DO_CustomerCodes>>("CustomerMaster/GetCustomerCodeInformationByNamePrefix?customerNamePrefix=" + customerNamePrefix).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        [Area("eSyaCustomer")]
        public IActionResult _CustomerDetails()
        {
            ViewBag.formName = "Customer Codes";
            return View();
        }

        /// <summary>
        /// Insert Into Customer Codes
        /// </summary>
        [HttpPost]
        public JsonResult InsertIntoCustomerCode(DO_CustomerCodes cs_cc)
        {
            try
            {
                cs_cc.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                cs_cc.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                cs_cc.FormID = AppSessionVariables.GetSessionFormInternalID(HttpContext).ToString();

                var serviceResponse = _eSyaCustomerAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("CustomerMaster/InsertIntoCustomerCode", cs_cc).Result;
                if (serviceResponse.Status)
                    return Json(serviceResponse.Data);
                else
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }

        /// <summary>
        /// Update Customer Codes
        /// </summary>
        [HttpPost]
        public JsonResult UpdateCustomerCode(DO_CustomerCodes cs_cc)
        {
            try
            {
                cs_cc.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                cs_cc.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                cs_cc.FormID = AppSessionVariables.GetSessionFormInternalID(HttpContext).ToString();

                var serviceResponse = _eSyaCustomerAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("CustomerMaster/UpdateCustomerCode", cs_cc).Result;
                if (serviceResponse.Status)
                    return Json(serviceResponse.Data);
                else
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }

        [Area("eSyaCustomer")]
        public IActionResult _CustomerContact()
        {
            ViewBag.formName = "Customer Codes";
            return View();
        }

        /// <summary>
        ///Get Customer Contact By Customer Id
        /// </summary>
        //[HttpPost]
        public JsonResult GetCustomerContactInformationByCustomerId(int customerId)
        {
            try
            {
                var serviceResponse = _eSyaCustomerAPIServices.HttpClientServices.GetAsync<List<DO_CustomerContact>>("CustomerMaster/GetCustomerContactInformationByCustomerId?customerId=" + customerId).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        ///Get Customer Contact By Customer Id And Location Id
        /// </summary>
        public JsonResult GetCustomerContactInformationByCustomerIdLocId(int customerId, int locationId)
        {
            try
            {
                var serviceResponse = _eSyaCustomerAPIServices.HttpClientServices.GetAsync<DO_CustomerContact>("CustomerMaster/GetCustomerContactInformationByCustomerIdLocId?customerId=" + customerId + "&locationId=" + locationId).Result;
                DO_CustomerContact cc_cn = serviceResponse.Data;
                return Json(cc_cn);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        /// Insert Into Customer Contact
        /// </summary>
        [HttpPost]
        public JsonResult InsertIntoCustomerContact(DO_CustomerContact cs_cc)
        {
            try
            {
                cs_cc.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                cs_cc.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                cs_cc.FormId = AppSessionVariables.GetSessionFormInternalID(HttpContext).ToString();

                var serviceResponse = _eSyaCustomerAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("CustomerMaster/InsertIntoCustomerContact", cs_cc).Result;
                if (serviceResponse.Status)
                    return Json(serviceResponse.Data);
                else
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }

        /// <summary>
        /// Update Customer Contact
        /// </summary>
        [HttpPost]
        public JsonResult UpdateCustomerContact(DO_CustomerContact cs_cc)
        {
            try
            {
                cs_cc.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                cs_cc.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                cs_cc.FormId = AppSessionVariables.GetSessionFormInternalID(HttpContext).ToString();

                var serviceResponse = _eSyaCustomerAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("CustomerMaster/UpdateCustomerContact", cs_cc).Result;
                if (serviceResponse.Status)
                    return Json(serviceResponse.Data);
                else
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }

        [Area("eSyaCustomer")]
        public IActionResult _BusinessLink()
        {
            ViewBag.formName = "Customer Codes";
            return View();
        }

        /// <summary>
        ///Get Customer Business Location By Customer Id
        /// </summary>
        //[HttpPost]
        public JsonResult GetCustomerBusinessLocationByCustomerId(int customerId)
        {
            try
            {
                var serviceResponse = _eSyaCustomerAPIServices.HttpClientServices.GetAsync<List<DO_CustomerBusinessLocation>>("CustomerMaster/GetCustomerBusinessLocationByCustomerId?customerId=" + customerId).Result; ;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        /// Insert Into Customer Business Location
        /// </summary>
        [HttpPost]
        public JsonResult InsertOrUpdateCustomerBusinessLocation(List<DO_CustomerBusinessLocation> cs_bl)
        {
            try
            {
                cs_bl.All(c =>
                {
                    c.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                    c.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                    c.FormId = AppSessionVariables.GetSessionFormInternalID(HttpContext).ToString();
                    return true;
                });

                var serviceResponse = _eSyaCustomerAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("CustomerMaster/InsertOrUpdateCustomerBusinessLocation", cs_bl).Result;
                if (serviceResponse.Status)
                    return Json(serviceResponse.Data);
                else
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }

        [Area("eSyaCustomer")]
        public IActionResult _StatutoryDetails()
        {
            ViewBag.formName = "Customer Codes";
            return View();
        }

        /// <summary>
        ///Get Customer Statutory Detail By Customer Id , Location Id and IsdCode
        /// </summary>
        [HttpPost]
        public JsonResult GetStatutoryInformationByCusIdLocIdIsdCode(int customerId, int locationId, int isdCode)
        {
            try
            {
                var serviceResponse = _eSyaCustomerAPIServices.HttpClientServices.GetAsync<List<DO_CustomerStatutoryDetail>>("CustomerMaster/GetStatutoryInformationByCusIdLocIdIsdCode?customerId=" + customerId + "&locationId=" + locationId + "&isdCode=" + isdCode).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        /// Insert Into Customer Statutory Details
        /// </summary>
        [HttpPost]
        public JsonResult InsertOrUpdateCustomerStatutoryDetail(List<DO_CustomerStatutoryDetail> cs_sd)
        {
            try
            {
                cs_sd.All(c =>
                {
                    c.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                    c.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                    c.FormId = AppSessionVariables.GetSessionFormInternalID(HttpContext).ToString();
                    return true;
                });

                var serviceResponse = _eSyaCustomerAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("CustomerMaster/InsertOrUpdateCustomerStatutoryDetail", cs_sd).Result;
                if (serviceResponse.Status)
                    return Json(serviceResponse.Data);
                else
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }

        [Area("eSyaCustomer")]
        public IActionResult _BankDetails()
        {
            ViewBag.formName = "Customer Codes";
            return View();
        }
        [Area("eSyaCustomer")]
        public IActionResult _ItemLink()
        {
            ViewBag.formName = "Customer Codes";
            return View();
        }
        [Area("eSyaCustomer")]
        public IActionResult _PartNumber()
        {
            ViewBag.formName = "Customer Codes";
            return View();
        }

        [Area("eSyaCustomer")]
        [ServiceFilter(typeof(ViewBagActionFilter))]
        public IActionResult V_272_00()
        {
            try
            {
                var serviceResponse = _eSyaCustomerAPIServices.HttpClientServices.GetAsync<List<DO_ApplicationCodes>>("CommonData/GetApplicationCodesByCodeType?codeType=" + CodeTypeValues.CustomerHoldReason).Result;
                if (serviceResponse.Status)
                {
                    ViewBag.HRappcodes = serviceResponse.Data;
                }
                else
                {
                    ViewBag.HRappcodes = null;
                }
                return View();
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.ToString() });
            }
        }

        /// <summary>
        /// Update Customer Hold
        /// </summary>
        [HttpPost]
        public JsonResult UpdateCustomerCodeForHold(DO_CustomerCodes cs_hd)
        {
            try
            {
                cs_hd.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                cs_hd.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                cs_hd.FormID = AppSessionVariables.GetSessionFormInternalID(HttpContext).ToString();

                var serviceResponse = _eSyaCustomerAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("CustomerMaster/UpdateCustomerCodeForHold", cs_hd).Result;
                if (serviceResponse.Status)
                    return Json(serviceResponse.Data);
                else
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }

    }
}
