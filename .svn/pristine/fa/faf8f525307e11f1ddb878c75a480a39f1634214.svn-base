using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using System.Net.Http;
using eSyaEnterprise_UI.Areas.Config.Models;
using eSyaEnterprise_UI.Models;
using eSyaEnterprise_UI.Utility;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Newtonsoft.Json;
namespace eSyaEnterprise_UI.Areas.Config.Controllers
{
    public class BusinessStructureController : Controller
    {
        ESyaWebAPI _eSyaWebAPI = new ESyaWebAPI();

        #region Business Entity
        /// <summary>
        /// Business Entity
        /// </summary>
        /// <returns></returns>
       
        [Area("Config")]
        public IActionResult V_11_00()
        {
            return View();
        }
        /// <summary>
        ///Get Business Entities for Grid
        /// </summary>
        [HttpPost]
        public JsonResult GetBusinessEntities()
        {

            try
            {
                var client = _eSyaWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
                HttpResponseMessage response = client.GetAsync("BusinessStructure/GetBusinessEntities").Result;
                string stringData = response.Content.ReadAsStringAsync().Result;
                var data = JsonConvert.DeserializeObject<List<DO_BusinessEntity>>(stringData);
                return Json(data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }

        }

        /// <summary>
        /// Insert or Update Business Entity
        /// </summary>
        [HttpPost]
        public JsonResult InsertOrUpdateBusinessEntity([FromBody] DO_BusinessEntity businessentity)
        {

            try
            {
                var client = _eSyaWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
                businessentity.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                businessentity.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                if (businessentity.Isadd == 1)
                {
                    HttpResponseMessage response = client.PostAsJsonAsync<DO_BusinessEntity>("BusinessStructure/InsertBusinessEntity", businessentity).Result;
                    string data = response.Content.ReadAsStringAsync().Result;
                    var result = JsonConvert.DeserializeObject<DO_ReturnParameter>(data);
                    return Json(result);
                }
                else
                {
                    HttpResponseMessage response = client.PostAsJsonAsync<DO_BusinessEntity>("BusinessStructure/UpdateBusinessEntity", businessentity).Result;
                    string data = response.Content.ReadAsStringAsync().Result;
                    var result = JsonConvert.DeserializeObject<DO_ReturnParameter>(data);
                    return Json(result);
                }
               
                
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }
        #endregion Business Entity

        #region Business Segment
        /// <summary>
        /// Business Segment
        /// </summary>
        /// <returns></returns>
        [Area("Config")]
        public IActionResult V_12_00()
        {
            try
            {

                var client = _eSyaWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
                HttpResponseMessage response = client.GetAsync("BusinessStructure/GetCboBusinessEntities").Result;
                string data = response.Content.ReadAsStringAsync().Result;
                List<DO_BusinessEntity> entities = JsonConvert.DeserializeObject<List<DO_BusinessEntity>>(data);
                ViewBag.entity_list = entities;
                return View();
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.ToString() });
            }

        }
        
        /// <summary>
        ///Get Business Segments by Business Id for Grid
        /// </summary>
        [HttpPost]
        public JsonResult GetBusinessSegmentByBusinessId(int BusinessId)
        {

            try
            {
                var client = _eSyaWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
                HttpResponseMessage response = client.GetAsync("BusinessStructure/GetBusinessSegmentByBusinessId?BusinessId=" + BusinessId).Result;
                string stringData = response.Content.ReadAsStringAsync().Result;
                var data = JsonConvert.DeserializeObject<List<DO_BusinessSegment>>(stringData);
                return Json(data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }

        }

        /// <summary>
        /// Insert or Update Business Segment
        /// </summary>
        [HttpPost]
        public JsonResult InsertOrUpdateBusinessSegment([FromBody] DO_BusinessSegment BusinessSegment)
        {

            try
            {
                var client = _eSyaWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
                BusinessSegment.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                BusinessSegment.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                if (BusinessSegment.Isadd == 1)
                {
                    HttpResponseMessage response = client.PostAsJsonAsync<DO_BusinessSegment>("BusinessStructure/InsertBusinessSegment", BusinessSegment).Result;
                    string data = response.Content.ReadAsStringAsync().Result;
                    var result = JsonConvert.DeserializeObject<DO_ReturnParameter>(data);
                    return Json(result);
                }
                else
                {
                    HttpResponseMessage response = client.PostAsJsonAsync<DO_BusinessSegment>("BusinessStructure/UpdateBusinessSegment", BusinessSegment).Result;
                    string data = response.Content.ReadAsStringAsync().Result;
                    var result = JsonConvert.DeserializeObject<DO_ReturnParameter>(data);
                    return Json(result);
                }
               
              
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }
        #endregion Business Segment

        #region Business Location
        /// <summary>
        /// Business Location
        /// </summary>
        /// <returns></returns>
        /// 
        [Area("Config")]
        public IActionResult V_13_00()
        {
            try
            {
                var client = _eSyaWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
                HttpResponseMessage response = client.GetAsync("BusinessStructure/GetCboBusinessEntities").Result;
                string data = response.Content.ReadAsStringAsync().Result;
                List<DO_BusinessEntity> entities = JsonConvert.DeserializeObject<List<DO_BusinessEntity>>(data);
                ViewBag.entity_list = entities;
                return View();
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.ToString() });
            }

        }
        
        /// <summary>
        ///Get Business Location by Business Id & SegmentId for Grid
        /// </summary>
        [HttpPost]
        public JsonResult GetCboBusinessSegmentbyBusinessId(int BusinessId)
        {

            try
            {
                var client = _eSyaWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
                var parameter = "?BusinessId=" + BusinessId;
                HttpResponseMessage response = client.GetAsync("BusinessStructure/GetCboBusinessSegmentbyBusinessId" + parameter).Result;
                string stringData = response.Content.ReadAsStringAsync().Result;
                var data = JsonConvert.DeserializeObject<List<DO_BusinessSegment>>(stringData);
                return Json(data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }

        }
        /// <summary>
        ///Get Business Location by Business Id & SegmentId for Grid
        /// </summary>
        [HttpPost]
        public JsonResult GetBusinessLocationByBusinessIdandSegmentId(int BusinessId, int SegmentId)
        {

            try
            {
                var client = _eSyaWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
                var parameter = "?BusinessId=" + BusinessId + "&SegmentId=" + SegmentId;
                
                HttpResponseMessage response = client.GetAsync("BusinessStructure/GetBusinessLocationByBusinessIdandSegmentId" + parameter).Result;
                string stringData = response.Content.ReadAsStringAsync().Result;
                var data = JsonConvert.DeserializeObject<List<DO_BusinessLocation>>(stringData);
                return Json(data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }

        }

        /// <summary>
        /// Insert or Update Business Location
        /// </summary>
        [HttpPost]
        public JsonResult InsertOrUpdateBusinessLocation([FromBody] DO_BusinessLocation location)
        {

            try
            {
                var client = _eSyaWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
                location.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                location.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                HttpResponseMessage response = client.PostAsJsonAsync<DO_BusinessLocation>("BusinessStructure/InsertOrUpdateBusinessLocation", location).Result;
                string data = response.Content.ReadAsStringAsync().Result;
                var result = JsonConvert.DeserializeObject<DO_ReturnParameter>(data);
                return Json(result);
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }
        #endregion Business Location
    }
}