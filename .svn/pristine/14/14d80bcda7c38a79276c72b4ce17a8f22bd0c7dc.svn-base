using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using System.Net.Http;
using eSyaEnterprise_UI.Areas.Config.Models;
using eSyaEnterprise_UI.Models;
using eSyaEnterprise_UI.Utility;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Newtonsoft.Json;
namespace eSyaEnterprise_UI.Areas.Config.Controllers
{
    public class CurrencyMasterController : Controller
    {
        ESyaWebAPI _eSyaWebAPI = new ESyaWebAPI();

        #region Currency Master
        /// <summary>
        /// Currency Master
        /// </summary>
        /// <returns></returns>
         
        [Area("Config")]
        public IActionResult V_6_00()
        {
            ViewBag.formName = "Currency Master";
            return View();
        }

        /// <summary>
        ///Get Currency for Grid
        /// </summary>
        [HttpGet]
        public JsonResult GetCurrencyMaster()
        {

            try
            {
                var client = _eSyaWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
                HttpResponseMessage response = client.GetAsync("CurrencyMaster/GetCurrencyMaster").Result;
                string stringData = response.Content.ReadAsStringAsync().Result;
                var data = JsonConvert.DeserializeObject<List<DO_CurrencyMaster>>(stringData);
                return Json(data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }

        }

        /// <summary>
        /// Insert Currency Master
        /// </summary>
        [HttpPost]
        public JsonResult InsertIntoCurrencyMaster([FromBody] DO_CurrencyMaster obj)
        {

            try
            {
                var client = _eSyaWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
                obj.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                obj.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                obj.FormId = AppSessionVariables.GetSessionFormID(HttpContext).ToString();
                HttpResponseMessage response = client.PostAsJsonAsync<DO_CurrencyMaster>("CurrencyMaster/InsertIntoCurrencyMaster", obj).Result;
                string data = response.Content.ReadAsStringAsync().Result;
                var result = JsonConvert.DeserializeObject<DO_ReturnParameter>(data);
                return Json(result);
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }

        /// <summary>
        /// Update Currency Master
        /// </summary>
        [HttpPost]
        public JsonResult UpdateCurrencyMaster([FromBody] DO_CurrencyMaster obj)
        {

            try
            {
                var client = _eSyaWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
                obj.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                obj.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                obj.FormId = AppSessionVariables.GetSessionFormID(HttpContext).ToString();
                HttpResponseMessage response = client.PostAsJsonAsync<DO_CurrencyMaster>("CurrencyMaster/UpdateCurrencyMaster", obj).Result;
                string data = response.Content.ReadAsStringAsync().Result;
                var result = JsonConvert.DeserializeObject<DO_ReturnParameter>(data);
                return Json(result);
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }
        /// <summary>
        ///Get Currency DenominationInfo By Currency Code for Grid
        /// </summary>
        [HttpPost]
        public JsonResult GetCurrencyDenominationInfoByCurrencyCode(string CurrencyCode)
        {
            try
            {
                var client = _eSyaWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
                var parameter = "?currencyCode=" + CurrencyCode;
                HttpResponseMessage response = client.GetAsync("CurrencyMaster/GetCurrencyDenominationInfoByCurrencyCode" + parameter).Result;
                string respData = response.Content.ReadAsStringAsync().Result;
                List<DO_CurrencyDenominationInformation> currency_denomination = JsonConvert.DeserializeObject<List<DO_CurrencyDenominationInformation>>(respData);
                return Json(currency_denomination);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        ///Insert Or Update Currency DenominationInfo
        /// </summary>
        [HttpPost]
        public JsonResult InsertUpdateCurrencyDenominationInformation([FromBody]DO_CurrencyDenominationInformation postData, [FromQuery] string CCode)
        {
            try
            {
                   var client = _eSyaWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
                    //when First Denomination is Created
                    if (string.IsNullOrEmpty(postData.CurrencyCode))
                    {
                        postData.CurrencyCode = CCode;
                    }
                    postData.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                    postData.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                    postData.FormId = AppSessionVariables.GetSessionFormID(HttpContext).ToString();
                    HttpResponseMessage response = client.PostAsJsonAsync<DO_CurrencyDenominationInformation>("CurrencyMaster/InsertOrUpdateCurrencyDenominationInformation", postData).Result;
                    string data = response.Content.ReadAsStringAsync().Result;
                    var result = JsonConvert.DeserializeObject<DO_ReturnParameter>(data);
                    return Json(result);
                
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }
        /// <summary>
        ///Insert Or Update Currency DenominationInfo
        /// </summary>
        [HttpPost]
        public JsonResult DeleteCurrencyDenominationInformation(string currencyCode, decimal denomination)
        {
            try
            {
                var client = _eSyaWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
                var parameter = "?currencyCode=" + currencyCode + "&denomination=" + denomination;
                HttpResponseMessage response = client.DeleteAsync("CurrencyMaster/DeleteCurrencyDenominationInformation" + parameter).Result;
                var respData = response.Content.ReadAsStringAsync().Result;
                var rp_app = JsonConvert.DeserializeObject<DO_ReturnParameter>(respData);
                return Json(rp_app);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }
        #endregion
    }
}