using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Net.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.AspNetCore.Mvc.Rendering;
using Microsoft.Extensions.Logging;
using Newtonsoft.Json;
using eSyaEnterprise_UI.Utility;
using eSyaEnterprise_UI.Areas.Config.Models;
using eSyaEnterprise_UI.Areas.eSyaFixedAssets.Models;
using eSyaEnterprise_UI.Models;
using eSyaEnterprise_UI.Areas.eSyaFixedAssets.Data;
using eSyaEnterprise_UI.ActionFilter;

namespace eSyaEnterprise_UI.Areas.eSyaFixedAssets.Controllers
{
    [SessionTimeout]
    public class FixedAssetsController : Controller
    {
        ESyaFA_WebAPI _eSyaFAWebAPI = new ESyaFA_WebAPI();
        private readonly ILogger<FixedAssetsController> _logger;

        private readonly IeSyaFixedAssetsAPIServices _eSyaFixedAssetsAPIServices;
        public FixedAssetsController(IeSyaFixedAssetsAPIServices eSyaFixedAssetsAPIServices, ILogger<FixedAssetsController> logger)
        {
            _eSyaFixedAssetsAPIServices = eSyaFixedAssetsAPIServices;
            _logger = logger;
        }
        #region Asset Group
        [Area("eSyaFixedAssets")]
        //[ServiceFilter(typeof(ViewBagActionFilter))]
        public IActionResult V_2001_00()
        {
            try
            {
                ViewBag.UserFormRole = new DO_UserFormRole { IsInsert = true, IsEdit = true, IsDelete = true , IsView =true};
                return View();
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "UD:AssetGroup_V_2001_00");
                throw ex;
            }
        }
       
        [Produces("application/json")]
        [HttpGet]
        public IActionResult GetAssetGroupTreeView()
        {
            try
            {

                List<jsTreeObject> jsTree = new List<jsTreeObject>();
                jsTreeObject jsObj1 = new jsTreeObject
                {
                    id = "MM",
                    parent = "#",
                    text = "Asset Group",
                    icon = "/images/jsTree/foldergroupicon.png",
                    state = new stateObject { opened = true, selected = false }
                };
                jsTree.Add(jsObj1);

                var serviceResponse = _eSyaFixedAssetsAPIServices.HttpClientServices.GetAsync<List<DO_AssetGroup>>("AssetGroup/GetAssetGroupTreeView").Result;
                if (serviceResponse.Status)
                {
                    var configureMenu = serviceResponse.Data;

                    if (configureMenu != null)
                    {
                        List<DO_AssetGroup> l_menu = new List<DO_AssetGroup>();
                        //Add Main Menu
                        foreach (var m in configureMenu.OrderBy(o => o.AssetGroupId))
                        {
                            jsTreeObject jsObj = new jsTreeObject
                            {
                                //id = "MM" + m.AssetGroupId.ToString(),
                                id = "MM" + m.AssetGroupId.ToString(),
                                text = m.AssetGroupDesc,
                                icon = m.ActiveStatus ? "/images/jsTree/openfolder.png" : "/images/jsTree/inactive.png",
                                GroupIndex = m.ParentId.ToString(),
                                parent = "MM",
                            };
                            jsTree.Add(jsObj);

                            //var sb = GetMenuFormItems(m.AssetGroupId, 0, configureMenu, m.ParentId);
                            //l_menu.AddRange(sb);

                        }


                        //Add Sub Menu
                        //foreach (var s in configureMenu.l_SubMenu.OrderBy(o => o.MenuIndex))
                        var menu = l_menu.OrderBy(o => o.AssetGroupId);
                        foreach (var s in menu)
                        {
                            //if (!s.IsForm)
                            //{
                                jsTreeObject jsObj = new jsTreeObject
                                {
                                    //id = "SM" + s.AssetGroupId.ToString(),
                                    id = "MM" + s.AssetGroupId.ToString(),
                                    text = s.AssetGroupDesc,
                                    //icon = "/images/jsTree/openfolder.png",
                                    icon = s.ActiveStatus ? "/images/jsTree/openfolder.png" : "/images/jsTree/inactive.png",
                                    GroupIndex = s.ParentId.ToString(),
                                    parent = s.ParentId == 0 ? "MM" + s.AssetGroupId.ToString() : "MM" + s.ParentId.ToString()
                                };
                                jsTree.Add(jsObj);

                            //}
                            //else
                            //{
                            //    jsTreeObject jsObj = new jsTreeObject
                            //    {
                            //        id = "FM" + s.ParentID.ToString() + "_" + s.FormId.ToString(),
                            //        text = s.MenuItemName,
                            //        //icon = "/images/jsTree/fileIcon.png",
                            //        icon = s.ActiveStatus ? "/images/jsTree/fileIcon.png" : "/images/jsTree/inactive.png",
                            //        GroupIndex = s.MenuIndex.ToString(),
                            //        //parent = "MM" + s.MainMenuId.ToString()
                            //        parent = s.ParentID == 0 ? "MM" + s.MainMenuId.ToString() : "SM" + s.ParentID.ToString()
                            //    };
                            //    jsTree.Add(jsObj);
                            //}
                        }

                        //Add Form
                        //foreach (var f in configureMenu.l_FormMenu.Where(w => w.MenuItemId != 0).OrderBy(o => o.FormIndex))
                        //{
                        //    jsObj = new jsTreeObject
                        //    {
                        //        id = "FM" + f.MenuItemId.ToString() + "_" + f.FormId.ToString(),
                        //        text = f.FormNameClient,
                        //        //icon = "/images/jsTree/fileIcon.png",
                        //        icon = f.ActiveStatus ? "/images/jsTree/fileIcon.png" : "/images/jsTree/inactive.png",
                        //        GroupIndex = f.FormIndex.ToString(),
                        //        parent = f.MenuItemId == 0 ? "MM" + f.MainMenuId.ToString() : "SM" + f.MenuItemId.ToString()
                        //    };
                        //    jsTree.Add(jsObj);
                        //}

                    }

                    return Json(jsTree);
                }
                else
                {
                    _logger.LogError(new Exception(serviceResponse.Message), "UD:GetConfigureMenuTreeView");
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
                }
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "UD:GetConfigureMenuTreeView");
                throw ex;
            }
        }

        /// <summary>
        /// Insert Or Update Asset Group
        /// </summary>
        [HttpPost]
        public async Task<JsonResult> InsertOrUpdateAssetGroup(DO_AssetGroup obj)
        {
            try
            {
                obj.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                obj.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                obj.FormId = AppSessionVariables.GetSessionFormInternalID(HttpContext).ToString();

                var serviceResponse = await _eSyaFixedAssetsAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("AssetGroup/InsertOrUpdateAssetGroup", obj);
                if (serviceResponse.Status)
                    return Json(serviceResponse.Data);
                else
                {
                    _logger.LogError(new Exception(serviceResponse.Message), "UD:InsertOrUpdateAssetGroup:params:" + JsonConvert.SerializeObject(obj));
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
                }
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "UD:InsertOrUpdateAssetGroup:params:" + JsonConvert.SerializeObject(obj));
                return Json(new { Status = false, Message = ex.ToString() });
            }
        }
        /// <summary>
        /// Getting Asset Group by Asset Group Id
        /// </summary>
        [HttpGet]
        public async Task<JsonResult> GetAssetGroupbyId(int AssetId)
        {

            try
            {

                var parameter = "?AssetId=" + AssetId;
                var serviceResponse = await _eSyaFixedAssetsAPIServices.HttpClientServices.GetAsync<DO_AssetGroup>("AssetGroup/GetAssetGroupbyId" + parameter);
                if (serviceResponse.Status)
                    return Json(serviceResponse.Data);
                else
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });

            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "UD:GetAssetGroupbyId:For AssetId {0} ", AssetId);
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }
        #endregion Asset Group

        //#region Asset Group
        //[Area("eSyaFixedAssets")]
        ////[ServiceFilter(typeof(ViewBagActionFilter))]
        //public IActionResult V_2001_00()
        //{
        //    try
        //    {
        //        ViewBag.UserFormRole = new DO_UserFormRole { IsInsert = true, IsEdit = true, IsDelete = true };
        //        List<int> l_ac = new List<int>();
        //        l_ac.Add(CodeTypeValues.AssetGroup);
        //        l_ac.Add(CodeTypeValues.AssetSubGroup);
        //        var response = _eSyaFixedAssetsAPIServices.HttpClientServices.PostAsJsonAsync<List<DO_ApplicationCodes>>("CommonData/GetApplicationCodesByCodeTypeList", l_ac).Result;
        //        if (response.Status)
        //        {
        //            List<DO_ApplicationCodes> ac = response.Data.Where(x => x.CodeType == CodeTypeValues.AssetGroup).ToList();
        //            ViewBag.AssetGroupList = ac.Select(a => new SelectListItem
        //            {
        //                Value = a.ApplicationCode.ToString(),
        //                Text = a.CodeDesc
        //            }).ToList();


        //            ac = response.Data.Where(x => x.CodeType == CodeTypeValues.AssetSubGroup).ToList();
        //            ViewBag.AssetSubGroupList = ac.Select(a => new SelectListItem
        //            {
        //                Value = a.ApplicationCode.ToString(),
        //                Text = a.CodeDesc
        //            }).ToList();
        //        }
        //        else
        //        {
        //            ViewBag.AssetGroupList = "";
        //            ViewBag.AssetSubGroupList = "";
        //        }

        //        return View();
        //    }
        //    catch (Exception ex)
        //    {
        //        _logger.LogError(ex, "UD:AssetGroup_V_2001_00");
        //        throw ex;
        //    }
        //}

        ///// <summary>
        ///// Insert Asset Group Master
        ///// </summary>
        //[HttpPost]
        //public async Task<JsonResult> InsertAssetGroup(int isadd, DO_AssetGroup a_grp)
        //{

        //    try
        //    {
        //        a_grp.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
        //        a_grp.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
        //        a_grp.FormID = AppSessionVariables.GetSessionFormInternalID(HttpContext);
        //        if (isadd == 1)
        //        {
        //            var serviceResponse = await _eSyaFixedAssetsAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("AssetGroup/InsertIntoAssetGroup", a_grp);
        //            if (serviceResponse.Status)
        //                return Json(serviceResponse.Data);
        //            else
        //                return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
        //        }
        //        else
        //        {
        //            var serviceResponse = await _eSyaFixedAssetsAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("AssetGroup/UpdateAssetGroup", a_grp);
        //            if (serviceResponse.Status)
        //                return Json(serviceResponse.Data);
        //            else
        //                return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
        //        }
        //    }
        //    catch (Exception ex)
        //    {
        //        _logger.LogError(ex, "UD:InsertAssetGroup:params:" + JsonConvert.SerializeObject(a_grp));
        //        return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
        //    }



        //}

        ///// <summary>
        /////Get Asset Group and Sub Group for Tree View
        ///// </summary>
        //[Produces("application/json")]
        //public async Task<IActionResult> GetAssetGroupAndSubGroupTree()
        //{

        //    try
        //    {
        //        var response = await _eSyaFixedAssetsAPIServices.HttpClientServices.GetAsync<List<DO_AssetGroup>>("AssetGroup/GetAssetGroupAndSubGroup");
        //        if (response.Status)
        //        {
        //            List<DO_AssetGroup> data = response.Data;

        //            List<jsTreeObject> AssetGroupTree = new List<jsTreeObject>();

        //            jsTreeObject obj;
        //            obj = new jsTreeObject();

        //            obj.id = "H0";
        //            obj.parent = "#";
        //            obj.text = "Fixed Assets";
        //            obj.state = new stateObject { opened = true, selected = false };

        //            AssetGroupTree.Add(obj);

        //            List<DO_AssetGroup> aGroup = data.Select(x => new DO_AssetGroup { AssetGroup = x.AssetGroup, AssetGroupID = x.AssetGroupID }).GroupBy(y => y.AssetGroupID, (key, grp) => grp.FirstOrDefault()).ToList();

        //            foreach (DO_AssetGroup lst in aGroup)
        //            {
        //                obj = new jsTreeObject();

        //                obj.id = lst.AssetGroupID.ToString();
        //                obj.parent = "H0";
        //                obj.text = lst.AssetGroup;
        //                obj.state = new stateObject { opened = false, selected = false };

        //                AssetGroupTree.Add(obj);
        //            }

        //            foreach (DO_AssetGroup lst in data)
        //            {
        //                obj = new jsTreeObject();

        //                obj.id = "S_" + lst.AssetGroupID.ToString() + "_" + lst.AssetSubGroupID.ToString() + "_" + lst.ActiveStatus.ToString();
        //                obj.parent = lst.AssetGroupID.ToString();
        //                obj.text = lst.AssetSubGroup;
        //                //obj.icon = "/images/jsTree/fileIcon.png";
        //                obj.state = new stateObject { opened = false, selected = false };

        //                AssetGroupTree.Add(obj);
        //            }

        //            return Json(AssetGroupTree);
        //        }
        //        else
        //        {
        //            _logger.LogError(new Exception(response.Message), "UD:GetAssetGroupAndSubGroupTree:params");
        //            return Json(new DO_ReturnParameter() { Status = false, Message = response.StatusCode });
        //        }
        //    }
        //    catch (Exception ex)
        //    {
        //        _logger.LogError(ex, "UD:GetAssetGroupAndSubGroupTree");
        //        return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
        //    }

        //}

        ///// <summary>
        ///// Update Asset Group Master
        ///// </summary>
        //[HttpPost]
        //public JsonResult UpdateAssetGroup(DO_AssetGroup data)
        //{

        //    try
        //    {
        //        data.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
        //        data.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);

        //        var result = _eSyaFixedAssetsAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("AssetGroup/UpdateAssetGroup", data).Result;
        //        return Json(result);
        //    }
        //    catch (Exception ex)
        //    {
        //        _logger.LogError(ex, "UD:UpdateAssetGroup:params:" + JsonConvert.SerializeObject(data));
        //        return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
        //    }
        //}
        //#endregion Asset Group

        //#region Depreciation Method
        //[Area("eSyaFixedAssets")]
        //[ServiceFilter(typeof(ViewBagActionFilter))]
        //public IActionResult V_2002_00()
        //{
        //    ViewBag.formName = "Depreciation Methods";
        //    return View();
        //}

        ///// <summary>
        /////Get Asset Group and Asset Sub Group
        ///// </summary>
        //[HttpPost]
        //public async Task<JsonResult> GetAssetGroupAndSubGroup()
        //{

        //    try
        //    {
        //        var response = await _eSyaFixedAssetsAPIServices.HttpClientServices.GetAsync<List<DO_AssetGroup>>("AssetGroup/GetAssetGroupAndSubGroup");
        //        if (response.Status)
        //        {
        //            return Json(response.Data);
        //        }
        //        else
        //        {
        //            _logger.LogError(new Exception(response.Message), "UD:GetAssetGroupAndSubGroup");
        //            return Json(new DO_ReturnParameter() { Status = false, Message = response.StatusCode });
        //        }
        //    }
        //    catch (Exception ex)
        //    {
        //        _logger.LogError(ex, "UD:GetAssetGroupAndSubGroup");
        //        return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
        //    }

        //}

        ///// <summary>
        /////Get Depreciation Method by Asset group and Asset Sub Group for Grid
        ///// </summary>
        //[HttpPost]
        //public async Task<JsonResult> GetDepreciationMethods(int assetGroup, int assetSubGroup)
        //{
        //    try
        //    {
        //        var response = await _eSyaFixedAssetsAPIServices.HttpClientServices.GetAsync<List<DO_AssetDepreciationMethod>>("AssetDepreciationMethod/GetActiveDepreciationMethods?assetGroup=" + assetGroup + "&assetSubGroup=" + assetSubGroup);
        //        if(response.Status)
        //        return Json(response.Data);
        //        else
        //        {
        //            _logger.LogError(new Exception(response.Message), "UD:GetDepreciationMethods:Asset group-{0}:Asset Sub Group-{1}", assetGroup, assetSubGroup);
        //            return Json(new DO_ReturnParameter() { Status = false, Message = response.StatusCode });
        //        }
        //    }
        //    catch (Exception ex)
        //    {
        //        _logger.LogError(ex, "UD:GetDepreciationMethods:Asset group-{0}:Asset Sub Group-{1}", assetGroup, assetSubGroup);
        //        return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
        //    }

        //}

        ///// <summary>
        ///// Insert Depreciation Methods
        ///// </summary>
        //[HttpPost]
        //public JsonResult InsertDepreciationMethod(List<DO_AssetDepreciationMethod> obj)
        //{

        //    try
        //    {
        //        obj.All(c =>
        //        {
        //            c.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
        //            c.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
        //            c.FormID = AppSessionVariables.GetSessionFormInternalID(HttpContext);
        //            return true;
        //        });

        //        var result = _eSyaFixedAssetsAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("AssetDepreciationMethod/InsertDepreciationMethod", obj).Result;
        //        return Json(result.Data);
        //    }
        //    catch (Exception ex)
        //    {
        //        return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
        //    }
        //}
        //#endregion Depreciation Method
    }

}