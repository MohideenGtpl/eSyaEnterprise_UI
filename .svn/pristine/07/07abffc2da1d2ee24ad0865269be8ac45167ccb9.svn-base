using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using System.Net.Http;
using eSyaEnterprise_UI.Areas.Config.Models;
using eSyaEnterprise_UI.Models;
using eSyaEnterprise_UI.Utility;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Newtonsoft.Json;
using eSyaEnterprise_UI.Areas.Config.Data;
using eSyaEnterprise_UI.ActionFilter;
using Microsoft.Extensions.Logging;
using Microsoft.AspNetCore.Mvc.Rendering;
using eSyaEnterprise_UI.Areas.eSyaConfig.Models;

namespace eSyaEnterprise_UI.Areas.eSyaConfig.Controllers
{
    [SessionTimeout]
    public class MobilePannelController : Controller
    {
        private readonly IeSyaConfigAPIServices _eSyaConfigAPIServices;
        private readonly ILogger<TemplateCreatorController> _logger;
        public MobilePannelController(IeSyaConfigAPIServices eSyaConfigAPIServices, ILogger<TemplateCreatorController> logger)
        {
            _eSyaConfigAPIServices = eSyaConfigAPIServices;
            _logger = logger;
        }
        #region Mobile Pannel

        [Area("eSyaConfig")]
        //[ServiceFilter(typeof(ViewBagActionFilter))]
        public IActionResult MobilePannel()
        {
            ViewBag.UserFormRole = new DO_UserFormRole { IsInsert = true, IsEdit = true, IsView = true, IsDelete = true };
            return View();
        }

        /// <summary>
        /// Mobile Pannel
        /// </summary>
        /// <returns></returns>

        /// <summary>
        ///Get Mobile Pannel by Language Code &&  Template Type for Grid
        /// </summary>
        [HttpPost]
        public async Task<JsonResult> GetMobilePannelbyTemplateType(string LanguageCode, string TemplateType)
        {

            try
            {
                var parameter = "?LanguageCode=" + LanguageCode + "&TemplateType=" + TemplateType;
                var serviceResponse = await _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_MobilePannel>>("MobilePannel/GetMobilePannelbyTemplateType" + parameter);
                if (serviceResponse.Status)
                {
                    return Json(serviceResponse.Data);
                }
                else
                {
                    _logger.LogError(new Exception(serviceResponse.Message), "UD:GetMobilePannelbyTemplateType:For LanguageCode {0} with TemplateType selected {1}", LanguageCode, TemplateType);
                    return Json(new { Status = false, StatusCode = "500" });
                }
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "UD:GetMobilePannelbyTemplateType:For LanguageCode {0} with TemplateType selected {1}", LanguageCode, TemplateType);
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }

        }
        /// <summary>
        /// Insert or Update Mobile Pannel
        /// </summary>
        [HttpPost]
        public async Task<JsonResult> InsertOrUpdateMobilePannel(DO_MobilePannel obj)
        {

            try
            {
                obj.FormID = AppSessionVariables.GetSessionFormInternalID(HttpContext);
                obj.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                obj.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);

                if (obj.TemplateId == 0)
                {
                    var serviceResponse = await _eSyaConfigAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("MobilePannel/InsertIntoMobilePannel", obj);
                    if (serviceResponse.Status)
                        return Json(serviceResponse.Data);
                    else
                        return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
                }

                else
                {
                    var serviceResponse = await _eSyaConfigAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("MobilePannel/UpdateMobilePannel", obj);
                    if (serviceResponse.Status)
                        return Json(serviceResponse.Data);
                    else
                        return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
                }
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "UD:InsertOrUpdateMobilePannel:params:" + JsonConvert.SerializeObject(obj));
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        /// Activate or De Activate Mobile Pannel
        /// </summary>
        [HttpPost]
        public async Task<JsonResult> ActiveOrDeActiveMobilePannel(bool status, int TemplateId,string TemplateType,string LanguageCode)
        {

            try
            {

                var parameter = "?status=" + status + "&TemplateId=" + TemplateId + "&TemplateType=" + TemplateType + "&LanguageCode=" + LanguageCode;
                var serviceResponse = await _eSyaConfigAPIServices.HttpClientServices.GetAsync<DO_ReturnParameter>("MobilePannel/ActiveOrDeActiveMobilePannel" + parameter);
                if (serviceResponse.Status)
                    return Json(serviceResponse.Data);
                else
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });

            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "UD:ActiveOrDeActiveMobilePannel:For TemplateId {0} ", TemplateId);
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }
        #endregion
    }
}