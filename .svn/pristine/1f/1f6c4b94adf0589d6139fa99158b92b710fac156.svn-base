var actiontype = "";
$(document).ready(function () {
    fnGridLoadStoreCodes();
});
function fnGridLoadStoreCodes() {
    $("#jqgStoreMaster").jqGrid({
        url: getBaseURL() + '/Inventory/GetStoreCodes',
        datatype: 'json',
        mtype: 'Post',
        ajaxGridOptions: { contentType: 'application/json; charset=utf-8' },
        jsonReader: { repeatitems: false, root: "rows", page: "page", total: "total", records: "records" },
        colNames: ["Store Codes", "Store Type", "Store Description", "Status", "Action"],

        colModel: [

            { name: "StoreCode", width: 10, editable: true, align: 'left', editoptions: { maxlength: 25 }, hidden: true },
            { name: "StoreType", editable: true, width: 60, edittype: "select", align: 'left', formatter: 'select', editoptions: { value: "M:Main Store;S:Sub Store;D:Department" } },
            {
                name: "StoreDesc", width: 150, editable: true, editoptions: { size: "40", maxlength: "25" }, edittype: "text"
            },
            //{ name: "IsMaterial", editable: true, width: 100, align: 'center !important', edittype: "checkbox", formatter: 'checkbox', editoptions: { value: "true:false" } },
            //{ name: "IsPharmacy", editable: true, width: 100, align: 'center !important', edittype: "checkbox", formatter: 'checkbox', editoptions: { value: "true:false" } },
            //{ name: "IsCafeteria", editable: true, width: 100, align: 'center !important', edittype: "checkbox", formatter: 'checkbox', editoptions: { value: "true:false" } },
            //{ name: "IsFandB", editable: true, hidden: false, width: 100, align: 'center !important', edittype: "checkbox", formatter: 'checkbox', editoptions: { value: "true:false" } },
            //{ name: "IsCustodianStore", editable: true, width: 120, hidden: true, align: 'center !important', edittype: "checkbox", formatter: 'checkbox', editoptions: { value: "true:false" } },
            //{ name: "IsAccountingStore", editable: true, width: 120, hidden: true, align: 'center !important', edittype: "checkbox", formatter: 'checkbox', editoptions: { value: "true:false" } },
            //{ name: "IsConsumptionStore", editable: true, width: 120, hidden: true, align: 'center !important', edittype: "checkbox", formatter: 'checkbox', editoptions: { value: "true:false" } },
            //{ name: "IsStationary", editable: true, hidden: true, width: 120, align: 'center !important', edittype: "checkbox", formatter: 'checkbox', editoptions: { value: "true:false" } },

            { name: "ActiveStatus", editable: true, width: 60, edittype: "select", align: 'left', formatter: 'select', editoptions: { value: "true:Active;false:Inactive" } },

            {
                name: 'action', search: false, align: 'left', width: 150, sortable: false, resizable: false,
                formatter: function (cellValue, options, rowdata, action) {
                    return '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title="Edit" id="jqgEdit", onclick="return fnEditStoreCodes(event,\'edit\')"><i class="fas fa-pencil-alt"></i> Edit </button>' +
                        '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title="View" onclick="return fnEditStoreCodes(event,\'view\')"><i class="far fa-file-alt"></i> View </button>' +
                        '<button onclick=" return fnDeleteStoreCode(event)" id="jqgDelete", class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid"><i class="fa fa-trash"></i>  Delete</button>'

                }
            }

        ],
        rowNum: 10,
        rowList: [10, 20, 30, 50, 100],
        emptyrecords: "No records to Veiw",
        pager: "#jqpStoreMaster",
        viewrecords: true,
        gridview: true,
        rownumbers: true,
        height: 'auto',
        width: 'auto',
        scroll: false,
        autowidth: false,
        shrinkToFit: false,
        forceFit: false,
        loadonce: true,
        loadComplete: function (data) {
            SetGridControlByAction();
        },
    }).jqGrid('navGrid', '#jqpStoreMaster', { add: false, edit: false, search: false, del: false, refresh: false }).jqGrid('navButtonAdd', '#jqpStoreMaster', {
        caption: '<span class="fa fa-sync" style="padding-right:5px;padding-top:2px;padding-right: 2px; vertical-align:text-top;margin-left:8px;"></span> Refresh', buttonicon: "none", id: "custRefresh", position: "first", onClickButton: fnGridRefreshStoreCodes
    }).jqGrid('navButtonAdd', '#jqpStoreMaster', {
        caption: '<span class="fa fa-plus" data-toggle="modal" data-whatever="something" style="padding-right:5px;padding-top:2px;padding-right: 2px; vertical-align:text-top;margin-left:8px;"></span> Add', buttonicon: 'none', id: 'jqgAdd', position: 'first', onClickButton: fnAddStoreCodes
    });
}

function fnAddStoreCodes() {
    fnClearFields();
    $("#PopupStoreMaster").modal('show');
    $('#PopupStoreMaster').find('.modal-title').text("Add Store");
    $("#btnSaveStoreMaster").html(' Save');
}

function fnEditStoreCodes(e, actiontype) {
   
    var rowid = $(e.target).parents("tr.jqgrow").attr('id');
    var rowData = $('#jqgStoreMaster').jqGrid('getRowData', rowid);
    $('#txtStoreCode').val(rowData.StoreCode);
    $("#cboStoreType").val(rowData.StoreType).selectpicker('refresh');
    $("#cboStoreType").attr('disabled', true);
    $("#txtStoreDescription").val(rowData.StoreDesc);
    //if (rowData.IsMaterial === "true") {
    //    $("#chkIsMaterial").parent().addClass("is-checked");
    //}
    //else { $("#chkIsMaterial").parent().removeClass("is-checked"); }
    //if (rowData.IsPharmacy === "true") {
    //    $("#chkIsPharmacy").parent().addClass("is-checked");
    //}
    //else { $("#chkIsPharmacy").parent().removeClass("is-checked"); }
    //if (rowData.IsCafeteria === "true") {
    //    $("#chkIsCafeteria").parent().addClass("is-checked");
    //}
    //else { $("#chkIsCafeteria").parent().removeClass("is-checked"); }
    //if (rowData.IsFandB === "true") {
    //    $("#chkIsFandB").parent().addClass("is-checked");
    //}
    //else { $("#chkIsFandB").parent().removeClass("is-checked"); }
    //if (rowData.IsCustodianStore === "true") {
    //    $("#chkIsCustodian").parent().addClass("is-checked");
    //}
    //else { $("#chkIsCustodian").parent().removeClass("is-checked"); }
    //if (rowData.IsAccountingStore === "true") {
    //    $("#chkIsAccountingStore").parent().addClass("is-checked");
    //}
    //else { $("#chkIsAccountingStore").parent().removeClass("is-checked"); }
    //if (rowData.IsConsumptionStore === "true") {
    //    $("#chkIsConsumptionStore").parent().addClass("is-checked");
    //}
    //else { $("#chkIsConsumptionStore").parent().removeClass("is-checked"); }
    //if (rowData.IsStationary === "true") {
    //    $("#chkIsStationary").parent().addClass("is-checked");
    //}
    //else { $("#chkIsStationary").parent().removeClass("is-checked"); }

    $('#cboActiveStatus').val(rowData.ActiveStatus);
    $('#cboActiveStatus').selectpicker('refresh');

    $.ajax({
        url: getBaseURL() + '/Inventory/GetStoreParameterList?StoreCode=' + $('#txtStoreCode').val(),
        type: 'POST',
        datatype: 'json',
        success: function (response) {
            if (response != null) {
                if (response.length > 0)
                    eSyaParams.SetValue(response);
                else
                    eSyaParams.ClearValue();
            }
            else {
                eSyaParams.ClearValue();
            }
        },
        error: function (error) {
            toastr.error(error.statusText);

        }
    });

    $('#PopupStoreMaster').modal('show');
    if (actiontype.trim() == "edit") {
        $('#PopupStoreMaster').find('.modal-title').text("Update Store");
        $("#btnSaveStoreMaster").html(' Update');
    }

    if (actiontype.trim() == "view") {
        $('#PopupStoreMaster').find('.modal-title').text("View Store");
        $("#btnSaveStoreMaster").hide();
        $("input,textarea").attr('readonly', true);
        $("select").next().attr('disabled', true);
        $("input[type=checkbox]").attr('disabled', true);
        $("#PopupStoreMaster").on('hidden.bs.modal', function () {
            $("#btnSaveStoreMaster").show();
            $("input,textarea").attr('readonly', false);
            $("select").next().attr('disabled', false);
            $("input[type=checkbox]").attr('disabled', false);
        });
    }
}

function fnSaveStoreCodes() {
    if (validateStoreCodes() === false) {
        return;
    }
    storecodes = {
        StoreType: $("#cboStoreType").val(),
        StoreCode: $("#txtStoreCode").val() === '' ? 0 : $("#txtStoreCode").val(),
        StoreDesc: $("#txtStoreDescription").val(),
        //IsMaterial: $("#chkIsMaterial").parent().hasClass("is-checked"),
        //IsPharmacy: $("#chkIsPharmacy").parent().hasClass("is-checked"),
        //IsStationary: $("#chkIsStationary").parent().hasClass("is-checked"),
        //IsCafeteria: $("#chkIsCafeteria").parent().hasClass("is-checked"),
        //IsFandB: $("#chkIsFandB").parent().hasClass("is-checked"),
        //IsCustodianStore: $("#chkIsCustodian").parent().hasClass("is-checked"),
        //IsAccountingStore: $("#chkIsAccountingStore").parent().hasClass("is-checked"),
        //IsConsumptionStore: $("#chkIsConsumptionStore").parent().hasClass("is-checked"),
        ActiveStatus: $("#cboActiveStatus").val()
    };

    var objPar = [];
    objPar = eSyaParams.GetValue();

    $.ajax({
        url: getBaseURL() + '/Inventory/InsertOrUpdateStoreCodes',
        type: 'POST',
        datatype: 'json',
        data: { storecodes, objPar },
        success: function (response) {
            if (response.Status) {
                toastr.success(response.Message);
                fnGridRefreshStoreCodes();
                $("#PopupStoreMaster").modal('hide');
            }
            else {
                toastr.error(response.Message);
             
            }
        },
        error: function (error) {
            toastr.error(error.statusText);
           
        }
    });
}

function validateStoreCodes() {
    if ($("#cboStoreType").val() === "0" || $("#cboStoreType").val() === "") {
        toastr.warning("Please Select Store Type");
        return false;
    }
    if (IsStringNullorEmpty($("#txtStoreDescription").val())) {
        toastr.warning("Please Enter Store Description");
        return false;
    }
   
}

function fnDeleteStoreCode(e) {
   
    var rowid = $(e.target).parents("tr.jqgrow").attr('id');
    var rowData = $('#jqgStoreMaster').jqGrid('getRowData', rowid);
    var id = rowData.StoreCode;
    bootbox.confirm({
        title: 'Store Code',
        message: "Are you sure you want to delete ?",
        buttons: {
            confirm: {
                label: 'Yes',
                className: 'mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent primary-button'
            },
            cancel: {
                label: 'No',
                className: 'mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect  cancel-button cancel-button'
            }
        },
        callback: function (result) {
            if (result == true) {
                if (id == null || id == undefined || id == "0" || id == '') {
                    alert("Could not Delete");
                    return false;
                }
                $.ajax({
                    type: 'POST',
                    url: getBaseURL() + '/Inventory/DeleteStoreCode',
                    data: { StoreCode: id },
                    success: function (response) {
                        if (response.Status) {
                            toastr.success(response.Message);
                            fnGridRefreshStoreCodes();

                            return true;
                        }
                        else{
                            toastr.error(response.Message);
                            return false;
                            fnGridRefreshStoreCodes();
                        }
                    },
                    error: function (response) {
                        alert("Couldn't Delete");
                    }
                });

            }
        }
    });
}

function fnGridRefreshStoreCodes() {
    $("#jqgStoreMaster").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
}

function fnClearFields() {
    $("#txtStoreCode").val("");
    $("#cboStoreType").attr('disabled', false);
    $("#cboStoreType").val("0").selectpicker('refresh');
    $("#txtStoreDescription").val("");
    //$("#chkIsMaterial").parent().removeClass("is-checked");
    //$("#chkIsPharmacy").parent().removeClass("is-checked");
    //$("#chkIsCafeteria").parent().removeClass("is-checked");
    //$("#chkIsFandB").parent().removeClass("is-checked");
    //$("#chkIsCustodian").parent().removeClass("is-checked");
    //$("#chkIsAccountingStore").parent().removeClass("is-checked");
    //$("#chkIsConsumptionStore").parent().removeClass("is-checked");
    //$("#chkIsStationary").parent().removeClass("is-checked");
    $('#cboActiveStatus').val("true").selectpicker('refresh');
}

function SetGridControlByAction() {
    $('#jqgAdd').removeClass('ui-state-disabled');
    var eleEditEbnable = document.querySelectorAll('#jqgEdit');

    for (var i = 0; i < eleEditEbnable.length; i++) {
        eleEditEbnable[i].disabled = false;
    }


    var eleDeleteEnable = document.querySelectorAll('#jqgDelete');

    for (var i = 0; i < eleDeleteEnable.length; i++) {
        eleDeleteEnable[i].disabled = false;
    }

    if (_userFormRole.IsInsert === false) {
        $('#jqgAdd').addClass('ui-state-disabled');
    }
    if (_userFormRole.IsEdit === false) {
        var eleEditDisable = document.querySelectorAll('#jqgEdit');
        for (var i = 0; i < eleEditDisable.length; i++) {
            eleEditDisable[i].disabled = true;
            eleEditDisable[i].className = "ui-state-disabled";
        }
    }
    if (_userFormRole.IsDelete === false) {
        var eleDeleteDisable = document.querySelectorAll('#jqgDelete');
        for (var i = 0; i < eleDeleteDisable.length; i++) {
            eleDeleteDisable[i].disabled = true;
            eleDeleteDisable[i].className = "ui-state-disabled";
        }
    }
}

