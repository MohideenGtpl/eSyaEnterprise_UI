@using Microsoft.AspNetCore.Mvc.Localization

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "V_2002_00";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/css/jquery.contextMenu.min.css" rel="stylesheet" />

@section scripts{
    @*<script src="~/js/eSyaFixedAssets/DepreciationMethod.js"></script>*@

    <script src="~/js/jquery.contextMenu.min.js"></script>
}
@{
    var userFormRole = (eSyaEnterprise_UI.Models.DO_UserFormRole)ViewBag.UserFormRole;
}
<script>
    var _userFormRole = JSON.parse('@Html.Raw(Json.Serialize(userFormRole))');

    var localization = {
         Add: '@Localizer["Add"]',
         Update: '@Localizer["Update"]',
         Save: '@Localizer["Save"]',
         View: '@Localizer["View"]',
         AssetGroup: '@Localizer["AssetGroup"]',
         AssetGroupID: '@Localizer["AssetGroupID"]',
         Active: '@Localizer["Active"]',
         Actions: '@Localizer["Actions"]',
         AddEdit: '@Localizer["AddEdit"]',
         AddEditDepreciationMethod: '@Localizer["AddEditDepreciationMethod"]',
         ViewDepreciationMethod: '@Localizer["ViewDepreciationMethod"]',
         Cancel: '@Localizer["Cancel"]',
         Close: '@Localizer["Close"]',
         DepreciationMethodID: '@Localizer["DepreciationMethodID"]',
         DepreciationMethod: '@Localizer["DepreciationMethod"]',
         DepreciationPercentage: '@Localizer["DepreciationPercentage"]',
         EffectiveFrom: '@Localizer["EffectiveFrom"]',
         EffectiveTill: '@Localizer["EffectiveTill"]',
        AssetSubGroupID: '@Localizer["AssetSubGroupID"]',
        AssetSubGroup: '@Localizer["AssetSubGroup"]',
        UsefulYears: '@Localizer["UsefulYears"]',
    };
</script>

<div class="row">
    <div class="col-lg-3 col-md-5 col-sm-6 col-xs-12">
        <div class="form-group">
            <label class="lable-color">@Localizer["AssetGroup"] </label>
            <div>
                <select class="selectpicker" data-live-search="true" id="cboAssetGroup" title="" data-size="8"
                        asp-items="@ViewBag.AssetGroup"
                        onchange="fnLoadAssetGroup()">
                    <option value="0">All</option>
                </select>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-5 col-sm-6 col-xs-12">
        <div class="form-group">
            <label class="lable-color">@Localizer["ISDCode"] </label>
            <div>
                <select class="selectpicker" data-live-search="true" id="cboIsdCode" title="" data-size="8" asp-items="@ViewBag.ISDCodes"
                        onchange="fnLoadAssetGroup()"></select>
            </div>
        </div>
    </div>

</div>

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <table id="jqgAssetGroup"></table>
        <div id="jqpAssetGroup"></div>
    </div>
</div>

<div class="modal fade in" id="PopupDepreciationMethod" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header popupHeader">
                <button type="button" class="close" data-dismiss="modal"> <i class="fa fa-times"></i></button>
                <h4 class="modal-title">@Localizer["DepreciationMethod"] </h4>
            </div>
            <div class="modal-body">
                <input type="hidden" id="hdvAssetGroupId" />
                <input type="hidden" id="hdvAssetSubGroupId" />
                <div class="row form-group">

                    <div class="col-lg-4 col-md-4 col-sm-6 col-xs-6">
                        @Localizer["AssetGroup"] :  <span id="lblAssetGroup" class="fixedText"></span>
                    </div>
                    <div class="col-lg-4 col-md-4 col-sm-6 col-xs-6">
                        @Localizer["AssetSubGroup"] :  <span id="lblAssetSubGroup" class="fixedText"></span>
                    </div>
                    <div class="col-lg-4 col-md-4 col-sm-6 col-xs-6">
                        @Localizer["ISDCode"] :  <span id="lblIsdCode" class="fixedText"></span>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <table id="jqgDepreciationMethod"></table>
                        <div id="jqpDepreciationMethod"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-lg-12">
                        <button type="button" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent primary-button" id="btnDepreciationMethodSave" onclick="fnSaveAssetDepreciationMethod()">
                            @Localizer["Save"]
                        </button>
                        <button type="button" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect  cancel-button" data-dismiss="modal" id="btnDepreciationMethodCancel">@Localizer["Cancel"] </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>





<script>


    $(document).ready(function () {
        fnLoadAssetGroup();

        $.contextMenu({
            // define which elements trigger this menu
            selector: "#btnDepretionAssetGroup",
            trigger: 'left',
            // define the elements of the menu
            items: {
                jqgEdit: { name: localization.AddEdit, icon: "edit", callback: function (key, opt) { fnGridAddAssetGroup(event, 'edit') } },
                jqgView: { name: localization.View, icon: "view", callback: function (key, opt) { fnViewDepreciationMethod(event, 'view') } },
            }
            // there's more, have a look at the demos and docs...
        });
        $(".context-menu-icon-edit").html("<span class='icon-contextMenu'><i class='fa fa-pen'></i>" + localization.AddEdit + " </span>");
        $(".context-menu-icon-view").html("<span class='icon-contextMenu'><i class='fa fa-eye'></i>" + localization.View + " </span>");

    });

    function fnLoadAssetGroup() {
        fnGridLoadAssetGroup();
    }
    function fnGridLoadAssetGroup() {
        $("#jqgAssetGroup").jqGrid('GridUnload');
        $("#jqgAssetGroup").jqGrid({
            url: getBaseURL() + '/FixedAssets/GetAssetGroupforGrid?AssetId=' + $("#cboAssetGroup").val() + '&Isdcode=' + $("#cboIsdCode").val(),
            mtype: 'Post',
            datatype: 'json',
            ajaxGridOptions: { contentType: 'application/json; charset=utf-8' },
            async: false,
            jsonReader: { repeatitems: false, root: "rows", page: "page", total: "total", records: "records" },
            colNames: [localization.AssetGroupID, localization.AssetGroup, localization.AssetSubGroupID, localization.AssetSubGroup, "", "", "", "Depreciation Method", "Depreciation Method", "ISD Code", "Percentage", "Useful Years", "Effective From", "Effective Till", localization.Active, localization.Actions],
            colModel: [
                { name: "AssetGroupId", width: 50, editable: true, align: 'left', hidden: true },
                { name: "AssetGroupDesc", width: 120, editable: true, align: 'left', hidden: false },
                { name: "AssetSubGroupId", width: 50, editable: true, align: 'left', hidden: true },
                { name: "AssetSubGroupDesc", width: 120, editable: true, align: 'left', hidden: false },
                { name: "FaaccountCode", width: 50, editable: true, align: 'left', hidden: true },
                { name: "AdaccountCode", width: 50, editable: true, align: 'left', hidden: true },
                { name: "DpaccountCode", width: 50, editable: true, align: 'left', hidden: true },
                { name: "DepreciationMethod", width: 50, editable: true, align: 'left', hidden: true },
                { name: "DepreciationMethodDesc", width: 120, editable: true, align: 'left', hidden: false },
                { name: "Isdcode", width: 50, editable: true, align: 'left', hidden: false },
                { name: "DepreciationPercentage", width: 50, editable: true, align: 'left', hidden: false },
                { name: "UsefulYears", width: 50, editable: true, align: 'left', hidden: false },

                {
                    name: "EffectiveFrom", editable: false, width: 60, align: 'left', formatter: 'date', formatoptions: { newformat: _cnfjqgDateFormat }

                },
                {
                    name: "EffectiveTill", editable: false, width: 60, align: 'left', formatter: 'date', hidden: true, formatoptions: { newformat: _cnfjqgDateFormat }

                },
                { name: "ActiveStatus", editable: true, width: 28, align: 'center', resizable: false, edittype: "checkbox", formatter: 'checkbox', editoptions: { value: "true:false" } },
                //{
                //    name: 'edit', search: false, align: 'left', width: 64, sortable: false, resizable: false,
                //    formatter: function (cellValue, options, rowdata, action) {
                //        return '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" id="jqgEdit" title="Edit" onclick="return fnGridAddAssetGroup(event)"><i class="fa fa-edit"></i>' + localization.AddEdit + '</button><button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title="View" onclick="return fnViewDepreciationMethod(event)"><i class="far fa-eye"></i>' + localization.View+ '</button>'

                //    }
                //},
                {
                    name: 'edit', search: false, align: 'left', width: 35, sortable: false, resizable: false,
                    formatter: function (cellValue, options, rowdata, action) {
                        return '<button class="mr-1 btn btn-outline" id="btnDepretionAssetGroup"><i class="fa fa-ellipsis-v"></i></button>'
                    }
                },
            ],
            rowNum: 10,
            rowList: [10, 20, 50, 100],
            rownumWidth: 55,
            loadonce: true,
            pager: "#jqpAssetGroup",
            viewrecords: true,
            gridview: true,
            rownumbers: true,
            height: 'auto',
            align: "left",
            width: 'auto',
            autowidth: true,
            shrinkToFit: true,
            scrollOffset: 0,
            loadComplete: function (data) {
                SetGridControlByAction("jqgAssetGroup");
            },

            onSelectRow: function (rowid, status, e) {
                var $self = $(this), $target = $(e.target),
                    p = $self.jqGrid("getGridParam"),
                    rowData = $self.jqGrid("getLocalRow", rowid),
                    $td = $target.closest("tr.jqgrow>td"),
                    iCol = $td.length > 0 ? $td[0].cellIndex : -1,
                    cmName = iCol >= 0 ? p.colModel[iCol].name : "";

                switch (cmName) {
                    case "id":
                        if ($target.hasClass("myedit")) {
                            alert("edit icon is clicked in the row with rowid=" + rowid);
                        } else if ($target.hasClass("mydelete")) {
                            alert("delete icon is clicked in the row with rowid=" + rowid);
                        }
                        break;
                    case "serial":
                        if ($target.hasClass("mylink")) {
                            alert("link icon is clicked in the row with rowid=" + rowid);
                        }
                        break;
                    default:
                        break;
                }

            },

        }).jqGrid('navGrid', '#jqpAssetGroup', { add: false, edit: false, search: false, del: false, refresh: false });
        /*.jqGrid('navButtonAdd', '#jqpAssetGroup', {
        caption: '<span class="fa fa-sync"></span> Refresh', buttonicon: "none", id: "custRefresh", position: "first",
        caption: '<span class="fa fa-plus" data-toggle="modal"></span> Add', buttonicon: 'none', id: 'custAdd', position: 'first', onClickButton: fnGridAddAssetGroup
    });*/
    }
    function fnGridRefreshAssetGroup() {
        $("#jqgAssetGroup").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
    }
    function fnGridAddAssetGroup(e) {

        $('#PopupDepreciationMethod').modal('show');
        $('#PopupDepreciationMethod').find('.modal-title').text(localization.AddEditDepreciationMethod);

        $('#btnDepreciationMethodSave').show();
        $("#btnDepreciationMethodSave").html(localization.Save);
        $("#btnDepreciationMethodCancel").html(localization.Cancel);

        
        var rowid = $("#jqgAssetGroup").jqGrid('getGridParam', 'selrow');
        var rowData = $('#jqgAssetGroup').jqGrid('getRowData', rowid);

        fnGridDepreciationMethod(rowData.AssetGroupId, rowData.AssetSubGroupId, rowData.Isdcode, true);

        $("#lblAssetGroup").text(rowData.AssetGroupDesc);
        $("#lblAssetSubGroup").text(rowData.AssetSubGroupDesc);
        $("#lblIsdCode").text(rowData.Isdcode);
    }

    function fnViewDepreciationMethod(e) {

        $('#PopupDepreciationMethod').modal('show');
        $('#PopupDepreciationMethod').find('.modal-title').text(localization.ViewDepreciationMethod);
        $('#btnDepreciationMethodSave').hide();
        $("#btnDepreciationMethodCancel").html(localization.Close);

        
        var rowid = $("#jqgAssetGroup").jqGrid('getGridParam', 'selrow');
        var rowData = $('#jqgAssetGroup').jqGrid('getRowData', rowid);
        fnGridDepreciationMethod(rowData.AssetGroupId, rowData.AssetSubGroupId, rowData.Isdcode, false);

        $("#lblAssetGroup").text(rowData.AssetGroupDesc);
        $("#lblAssetSubGroup").text(rowData.AssetSubGroupDesc);
        $("#lblIsdCode").text(rowData.Isdcode);
    }

    function SetGridControlByAction(jqg) {
        if (_userFormRole.IsEdit === false) {
            var eleDisable = document.querySelectorAll('#jqgEdit');
            for (var i = 0; i < eleDisable.length; i++) {
                eleDisable[i].disabled = true;
                eleDisable[i].className = "ui-state-disabled";
            }
        }
    }

    function fnGridDepreciationMethod(AssetGroupId, AssetSubGroupId, Isdcode, cellEditable) {
        $('#jqgDepreciationMethod').jqGrid('GridUnload');
        $("#jqgDepreciationMethod").jqGrid({
            url: getBaseURL() + '/FixedAssets/GetAssetDepreciationMethodsbyAssGroupId?assetGroupId=' + AssetGroupId + '&AssetSubGroupId=' + AssetSubGroupId + '&Isdcode=' + Isdcode,
            datatype: 'json',
            mtype: 'Post',
            ajaxGridOptions: { contentType: 'application/json; charset=utf-8' },
            jsonReader: { repeatitems: false, root: "rows", page: "page", total: "total", records: "records" },
            colNames: ["ISD Code", localization.AssetGroupID,"Asset Sub Group Id", localization.DepreciationMethodID, localization.DepreciationMethod, localization.DepreciationPercentage, localization.UsefulYears, localization.EffectiveFrom, localization.EffectiveTill, localization.Active],
            colModel: [
                { name: "Isdcode", width: 70, editable: true, align: 'left', hidden: true },
                { name: "AssetGroupId", width: 70, editable: true, align: 'left', hidden: true },
                { name: "AssetSubGroupId", width: 70, editable: true, align: 'left', hidden: true },
                { name: "DepreciationMethod", width: 70, editable: true, align: 'left', hidden: true },
                { name: "DepreciationMethodDesc", width: 150, editable: false, align: 'left', editoptions: { maxlength: 50 }, hidden: false },
                { name: "DepreciationPercentage", width: 160, editable: true, align: 'left', editoptions: { maxlength: 5, onkeypress: 'return fnOnlyDigits(event)' } },
                { name: "UsefulYears", width: 160, editable: true, align: 'left', editoptions: { maxlength: 5, onkeypress: 'return fnOnlyDigits(event)' } },

                {
                    name: 'EffectiveFrom', index: 'EffectiveFrom', width: 90, sorttype: "date", formatter: "date", formatoptions:
                        { newformat: _cnfjqgDateFormat },
                    editable: true, editoptions: {
                        size: 20,
                        dataInit: function (el) {
                            $(el).datepicker({ dateFormat: _cnfDateFormat });
                        }
                    }
                },
                {
                    name: 'EffectiveTill', index: 'EffectiveTill', width: 90, sorttype: "date", formatter: "date", hidden: true, formatoptions:
                        { newformat: _cnfjqgDateFormat },
                    editable: true, editoptions: {
                        size: 20,
                        dataInit: function (el) {
                            $(el).datepicker({ dateFormat: _cnfDateFormat });
                        }
                    }
                },
                { name: "ActiveStatus", editable: true, width: 70, align: 'center !important', edittype: "checkbox", formatter: 'checkbox', editoptions: { value: "true:false" } },

            ],

            rowNum: 10000,
            pager: "#jqpDepreciationMethod",
            pgtext: null,
            pgbuttons: null,
            viewrecords: false,
            gridview: true,
            rownumbers: true,
            height: 'auto',
            width: 'auto',
            autowidth: true,
            shrinkToFit: true,
            forceFit: true,
            loadonce: true,
            cellEdit: true,
            editurl: 'url',
            cellsubmit: 'clientArray',
            onSelectRow: function (id) {
                if (id) { $('#jqgDepreciationMethod').jqGrid('editRow', id, true); }
            },
            ondblClickRow: function (rowid) {
            },
            loadComplete: function (data) {
                $(this).find(">tbody>tr.jqgrow:odd").addClass("myAltRowClassEven");
                $(this).find(">tbody>tr.jqgrow:even").addClass("myAltRowClassOdd");
                $("#jqgDepreciationMethod").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
                SetGridControlByAction();
            }
        }).jqGrid('navGrid', '#jqpDepreciationMethod', { add: false, edit: false, search: false, del: false, refresh: false });


    }

    function fnOnlyDigits(e) {
        if ((e.which < 48 || e.which > 57)) {
            if (e.which == 8 || e.which == 0 || e.which == 46) {
                return true;
            }
            else {
                return false;
            }
        }
    }

    function fnSaveAssetDepreciationMethod() {

        $("#btnDepreciationMethodSave").attr("disabled", true);
        var obj = [];
        var gvT = $('#jqgDepreciationMethod').jqGrid('getRowData');
        for (var i = 0; i < gvT.length; ++i) {

            var dm = {
                Isdcode: gvT[i]['Isdcode'],
                AssetGroupId: gvT[i]['AssetGroupId'],
                AssetSubGroupId: gvT[i]['AssetSubGroupId'],
                DepreciationMethod: gvT[i]['DepreciationMethod'],
                UsefulYears: gvT[i]['UsefulYears'],
                EffectiveFrom: gvT[i]['EffectiveFrom'],
                DepreciationPercentage: gvT[i]['DepreciationPercentage'] = '' ? 0 : gvT[i]['DepreciationPercentage'],
                ActiveStatus: gvT[i]['ActiveStatus']
            }
            obj.push(dm);
        }
        $.ajax({
            url: getBaseURL() + '/FixedAssets/InsertDepreciationMethod',
            type: 'POST',
            datatype: 'json',
            data: { obj },
            //async: false,
            success: function (response) {
                if (response.Status === true) {
                    toastr.success(response.Message);
                    $('#PopupDepreciationMethod').modal('hide');
                    fnGridRefreshAssetGroup();
                }
                else {
                    toastr.error(response.Message);
                }
                $("#btnDepreciationMethodSave").attr("disabled", false);
            },
            error: function (error) {
                toastr.error(error.statusText);
                $("#btnDepreciationMethodSave").attr("disabled", false);
            }
        });

        $("#btnDepreciationMethodSave").attr("disabled", false);
    }


</script>
