using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using eSyaEnterprise_UI.ActionFilter;
using Microsoft.AspNetCore.Mvc;
using eSyaEnterprise_UI.Models;
using eSyaEnterprise_UI.Utility;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc.Rendering;
using Microsoft.Extensions.Logging;
using Newtonsoft.Json;
using eSyaEnterprise_UI.Areas.eSyaPharma.Data;
using eSyaEnterprise_UI.Areas.eSyaPharma.Models;

namespace eSyaEnterprise_UI.Areas.eSyaPharma.Controllers
{
    //[SessionTimeout]
    public class DrugController : Controller
    {
        private readonly IeSyaPharmaAPIServices _eSyaPharmaAPIServices;
        private readonly ILogger<DrugController> _logger;

        public DrugController(IeSyaPharmaAPIServices eSyaPharmaAPIServices, ILogger<DrugController> logger)
        {
            _eSyaPharmaAPIServices = eSyaPharmaAPIServices;
            _logger = logger;
        }


        #region Drug Manufacturers
        [Area("eSyaPharma")]
        [ServiceFilter(typeof(ViewBagActionFilter))]
        public async Task<IActionResult> V_9001_00()
        {
            try
            {
                var serviceResponse = await _eSyaPharmaAPIServices.HttpClientServices.GetAsync<List<DO_CountryCodes>>("CommonData/GetISDCodes");
                if (serviceResponse.Status)
                {
                    if (serviceResponse.Data != null)
                    {
                        ViewBag.ISDCodeList = serviceResponse.Data.Select(b => new SelectListItem
                        {
                            Value = b.Isdcode.ToString(),
                            Text = b.CountryName
                        }).ToList();
                    }
                    else
                    {
                        _logger.LogError(new Exception(serviceResponse.Message), "UD:DrugManufacturers");
                    }
                }
                else
                {
                    _logger.LogError(new Exception(serviceResponse.Message), "UD:DrugManufacturers");
                }
                return View();
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "UD:DrugManufacturers");
                throw ex;
            }
        }

        /// <summary>
        ///Get Manufacturer Information 
        /// </summary>
        [HttpGet]
        public async Task<JsonResult> GetManufacturerListByNamePrefix(string manufacturerNamePrefix)
        {
            try
            {
                var serviceResponse = await _eSyaPharmaAPIServices.HttpClientServices.GetAsync<List<DO_DrugManufacturer>>("DrugManufacturer/GetManufacturerListByNamePrefix?manufacturerNamePrefix=" + manufacturerNamePrefix);
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "UD:GetCustomerCodeInformationByNamePrefix:For Prefix {0}", manufacturerNamePrefix);
                throw ex;
            }
        }

        /// <summary>
        /// Insert or Update Manufacturer
        /// </summary>
        [HttpPost]
        public async Task<JsonResult> InsertOrUpdateManufacturer(DO_DrugManufacturer drugManufacturer)
        {
            try
            {
                if (string.IsNullOrEmpty(drugManufacturer.ManufacturerName))
                {
                    return Json(new DO_ReturnParameter() { Status = false, Message = "Please Enter Manufacturer Name" });
                }
                else if (string.IsNullOrEmpty(drugManufacturer.ManfShortName))
                {
                    return Json(new DO_ReturnParameter() { Status = false, Message = "Please Enter Manufacturer Short Name" });
                }
                else if (string.IsNullOrEmpty(drugManufacturer.OriginCode))
                {
                    return Json(new DO_ReturnParameter() { Status = false, Message = "Please Select Origin" });
                }
                else if (drugManufacturer.OriginCode == "MK" && string.IsNullOrEmpty(drugManufacturer.MarketedBy))
                {
                    return Json(new DO_ReturnParameter() { Status = false, Message = "Please Select Marketed By" });
                }
                else if (string.IsNullOrEmpty(drugManufacturer.ISDCode.ToString()) || drugManufacturer.ISDCode == 0)
                {
                    return Json(new DO_ReturnParameter() { Status = false, Message = "Please Select ISD Code" });
                }
                else
                {
                    drugManufacturer.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                    drugManufacturer.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                    drugManufacturer.FormId = AppSessionVariables.GetSessionFormInternalID(HttpContext);

                    var serviceResponse = await _eSyaPharmaAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("DrugManufacturer/InsertOrUpdateManufacturer", drugManufacturer);
                    if (serviceResponse.Status)
                        return Json(serviceResponse.Data);
                    else
                    {
                        _logger.LogError(new Exception(serviceResponse.Message), "UD:InsertOrUpdateManufacturer:params:" + JsonConvert.SerializeObject(drugManufacturer));
                        return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
                    }
                }
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "UD:InsertOrUpdateManufacturer:params:" + JsonConvert.SerializeObject(drugManufacturer));
                return Json(new { Status = false, Message = ex.ToString() });
            }
        }
        #endregion


        #region Drug Generics
        [Area("eSyaPharma")]
        public IActionResult V_9002_00()
        {
            return View();
        }
        #endregion

        #region Drug Brands
        [Area("eSyaPharma")]
        public IActionResult V_9003_00()
        {
            return View();
        }
        #endregion

         
    }
}