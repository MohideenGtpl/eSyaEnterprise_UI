using eSyaEssentials_UI;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Threading.Tasks;

namespace eSyaEnterprise_UI.Areas.Config.Data   
{
    public class eSyaConfigAPIServices : IeSyaConfigAPIServices
    {
       
        public HttpClient Client { get; private set; }
        public IConfiguration _iConfig { get; private set; }

        public bool IsSuccessStatusCode { get; private set; }

        public IHttpClientServices HttpClientServices { get; set; }
        public eSyaConfigAPIServices(HttpClient httpClient, IHttpClientServices clientServices)
        {
            //string apiBaseURI = iConfig.GetValue<string>("eSyaWebAPIUrl");
            //string apiKey = iConfig.GetValue<string>("Apikey");

            ////Passing service base url    
            //httpClient.BaseAddress = new Uri(apiBaseURI);

            //httpClient.DefaultRequestHeaders.Clear();

            //httpClient.DefaultRequestHeaders.Add("Apikey", apiKey);

            ////Define request data format    
            //httpClient.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));

            //Client = httpClient;
            clientServices.Client = httpClient;
            HttpClientServices = clientServices;
        }

        public HttpClient GetHttpClient()
        {
            return Client;
        }

        public HttpClient GetConfigCSHttpClient(IConfiguration iConfig)
        {
            string apiBaseURI = _iConfig.GetValue<string>("eSyaWebAPIUrl");
            string apiKey = _iConfig.GetValue<string>("Apikey");

            var client = new HttpClient();
            //Passing service base url    
            client.BaseAddress = new Uri(apiBaseURI);

            client.DefaultRequestHeaders.Clear();

            client.DefaultRequestHeaders.Add("Apikey", apiKey);

            //Define request data format    
            client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));

            return client;
        }
    }


}
