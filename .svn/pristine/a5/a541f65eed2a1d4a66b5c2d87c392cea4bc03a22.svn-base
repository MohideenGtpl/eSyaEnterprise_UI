

$(document).ready(function () {
    $(".dot").click(function () {
        $('.dot').removeClass('active');
       var EmployeeNamePrefix = $(this).text();
        fnGridEmployeeDetails(EmployeeNamePrefix);
        $(this).addClass('active');
    });
    $("#jqgEmployeeDetails").jqGrid({
        jsonReader: { repeatitems: false, root: "rows", page: "page", total: "total", records: "records" },
        colNames: ["Business Key", "Employee Number", "Employee ID", "Biometric Code", "Employee Name", "Email ID", "Mobile Number", "Active Status", ""],
        colModel: [
            { name: "BusinessKey", width: 70, align: 'left', editable: true, editoptions: { maxlength: 6 }, resizable: false, hidden: true },
            { name: "EmployeeNumber", width: 110, align: 'left', editable: true, editoptions: { maxlength: 6 }, resizable: false, hidden: true },
            { name: "EmployeeId", width: 110, align: 'left', editable: true, editoptions: { maxlength: 50 }, resizable: false, hidden: false },
            { name: "BiometricId", width: 110, align: 'left', editable: true, editoptions: { maxlength: 50 }, resizable: false },
            { name: "EmployeeName", width: 110, align: 'left', editable: true, editoptions: { maxlength: 50 }, resizable: false },
            { name: "EmailID", width: 120, align: 'left', editable: true, editoptions: { maxlength: 50 }, resizable: false },
            { name: "MobileNumber", width: 110, align: 'left', editable: true, editoptions: { maxlength: 50 }, resizable: false },
            { name: "ActiveStatus", width: 65, editable: true, align: 'center', edittype: "checkbox", formatter: 'checkbox', editoptions: { value: "true:false" } },
            {
                name: 'edit', search: false, align: 'left', width: 88, sortable: false, resizable: false,
                formatter: function (cellValue, options, rowdata, action) {
                    return '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title="Edit" id="jqgEdit" onclick="return fnEditEmpDetails(event,\'edit\');"><i class="fa fa-edit"></i>' + 'Edit' + '</button>' +
                        '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title="View" onclick="return fnEditEmpDetails(event,\'view\');"><i class="far fa-eye"></i>' + 'View' + '</button>'
                }
            },
        ],
        pager: "#jqpEmployeeDetails",
        rowNum: 10,
        rowList: [10, 20, 50, 100],
        loadonce: true,
        viewrecords: true,
        gridview: true,
        rownumbers: true,
        height: 'auto',
        scroll: false,
        width: 'auto',
        autowidth: false,
        shrinkToFit: false,
        forceFit: false,
        
    }).jqGrid('navGrid', '#jqpEmployeeDetails', { add: false, edit: false, search: false, del: false, refresh: false, refreshtext: 'Reload' }).jqGrid('navButtonAdd', '#jqpEmployeeDetails', {
        caption: '<span class="fa fa-sync"></span> Refresh', buttonicon: "none", id: "custRefresh", position: "first", onClickButton: fnGridRefreshEmployeeDetails
    }).jqGrid('navButtonAdd', '#jqpEmployeeDetails', {
        caption: '<span class="fa fa-plus" data-toggle="modal"></span> Add', buttonicon: 'none', id: 'jqgAdd', position: 'first', onClickButton: fnAddEmployeeDetails
    });

    $(window).on("resize", function () {
        var $grid = $("#jqgEmployeeDetails"),
            newWidth = $grid.closest(".codetypecontainer").parent().width();
        $grid.jqGrid("setGridWidth", newWidth, true);
    });
    fnAddGridSerialNoHeading();

});


$('#v-pills-tab a').on('click', function (e) {
    var activeTabName = "";
    e.preventDefault();
    $(".tab-pane").removeClass('show active');
    activeTabName = $(this).attr("href");
    $(activeTabName).addClass("show");
});
var actiontype = "";

function fnGridEmployeeDetails(alphabet) {

    $("#jqgEmployeeDetails").GridUnload();

    $("#jqgEmployeeDetails").jqGrid({
        url: getBaseURL() + '/Employee/GetEmployeesInfobySuffix?Alphabet=' + alphabet,
        mtype: 'POST',
        datatype: 'json',
        contentType: 'application/json; charset=utf-8',
        ajaxGridOptions: { contentType: 'application/json; charset=utf-8' },
        colNames: ["Business Key", "Employee Number", "Employee ID", "Biometric Code", "Employee Name", "Email ID", "Mobile Number", "Active Status", ""],
        colModel: [
            { name: "BusinessKey", width: 70, align: 'left', editable: true, editoptions: { maxlength: 6 }, resizable: false, hidden: true },
            { name: "EmployeeNumber", width: 110, align: 'left', editable: true, editoptions: { maxlength: 6 }, resizable: false, hidden: true },
            { name: "EmployeeId", width: 110, align: 'left', editable: true, editoptions: { maxlength: 50 }, resizable: false, hidden:false },
            { name: "BiometricId", width: 110, align: 'left', editable: true, editoptions: { maxlength: 50 }, resizable: false },
            { name: "EmployeeName", width: 110, align: 'left', editable: true, editoptions: { maxlength: 50 }, resizable: false },
            { name: "EmailID", width: 120, align: 'left', editable: true, editoptions: { maxlength: 50 }, resizable: false },
            { name: "MobileNumber", width: 110, align: 'left', editable: true, editoptions: { maxlength: 50 }, resizable: false },
            { name: "ActiveStatus", width: 65, editable: true, align: 'center', edittype: "checkbox", formatter: 'checkbox', editoptions: { value: "true:false" } },
            {
                name: 'edit', search: false, align: 'left', width: 88, sortable: false, resizable: false,
                formatter: function (cellValue, options, rowdata, action) {
                    return '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title="Edit" id="jqgEdit" onclick="return fnEditEmpDetails(event,\'edit\');"><i class="fa fa-edit"></i>' +'Edit' +'</button>' +
                        '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title="View" onclick="return fnEditEmpDetails(event,\'view\');"><i class="far fa-eye"></i>' +'View' + '</button>'
                }
            },
        ],
        pager: "#jqpEmployeeDetails",
        rowNum: 10,
        rowList: [10, 20, 50, 100],
        loadonce: true,
        viewrecords: true,
        gridview: true,
        rownumbers: true,
        height: 'auto',
        scroll: false,
        width: 'auto',
        autowidth: false,
        shrinkToFit: false,
        forceFit: false,
        loadComplete: function (data) {
            //SetGridControlByAction();
        },
    }).jqGrid('navGrid', '#jqpEmployeeDetails', { add: false, edit: false, search: false, del: false, refresh: false, refreshtext: 'Reload' }).jqGrid('navButtonAdd', '#jqpEmployeeDetails', {
        caption: '<span class="fa fa-sync"></span> Refresh', buttonicon: "none", id: "custRefresh", position: "first", onClickButton: fnGridRefreshEmployeeDetails
        }).jqGrid('navButtonAdd', '#jqpEmployeeDetails', {
            caption: '<span class="fa fa-plus" data-toggle="modal"></span> Add', buttonicon: 'none', id: 'jqgAdd', position: 'first', onClickButton: fnAddEmployeeDetails
    });

    $(window).on("resize", function () {
        var $grid = $("#jqgEmployeeDetails"),
            newWidth = $grid.closest(".codetypecontainer").parent().width();
        $grid.jqGrid("setGridWidth", newWidth, true);
    });
    fnAddGridSerialNoHeading();
}


function fnSaveEmployeeDetails() {
    if (IsValidEmployee() == false) {
        return;
    }

    $("#btnSaveEmployeeDetails").attr('disabled', true);
    var file = ($('#imgPhoto img').attr('src').indexOf('TakePicture.jpg') > 0) ? null : $('#imgPhoto img').attr('src');// Data URI
    var obj = {
        BusinessKey: $("#cboBusinessKey").val(),
        EmployeeNumber: $("#txtEmployeenumber").val() === '' ? 0 : $("#txtEmployeenumber").val(),
        EmployeeId: $("#txtEmployeeId").val(),
        BiometricId: $("#txtBiometriccode").val(),
        Title: $("#cboTitle").val(),
        EmployeeName: $("#txtEmployeename").val(),
        Gender: $("#cboGender").val(),
        MobileNumber: $("#txtMobilenumber").val(),
        WillingnessToWorkInShifts: 0,
        ExemptedFromAttendance: $('#chkExemptedfromATT').parent().hasClass("is-checked"),
        EmployeeStatus: $("#txtEmployeeStatus").val(),
        ActiveStatus: $("#chkActiveStatus").parent().hasClass("is-checked"),
        EmployeeGroup: $("#cboEmployeegroup").val(),
        EmployeeClass: $("#cboEmployeeclass").val(),
        EmployeePayCategory: $("#cboEmployeepaycategory").val(),
        DateProbationTill: $("#txtDateofProbationTill").val(),
        DateOfJoining: $("#txtDateofjoining").val(),
        DateOfConfirmation: $("#txtDateofconfirmation").val(),
        DateOfResignation: $("#txtDateofresignation").val(),
        DateOfTermination: $("#txtDateoftermination").val(),
        DateOfRelieving: $("#txtDateofrelieving").val(),
        AnySuspension: $("#chkSuspensionemploymenttenure").parent().hasClass("is-checked"),
        CurrentDepartment: $("#txtCurrentdepartment").val(),
        CurrentLocationPosted: $("#txtCurrentlocationposted").val(),
        CurrentBasic: $("#txtCurrentbasic").val(),
        CurrentGross: $("#txtCurrentgross").val(),
    };
   
    $.ajax({

        url: getBaseURL() + '/Employee/InsertOrUpdateEmployeeInfo',
        type: 'POST',
        datatype: 'json',
        data: {
            obj,
            file: file,
        },
        success: function (response) {
            if (response.Status) {
                toastr.success(response.Message);
                fnGridRefreshEmployeeDetails();
                ReadEmployeeNumber(response);
                $("#btnSaveEmployeeDetails").attr('disabled', false);
                return true;
            }
            else {
                toastr.error(response.Message);
                $("#btnSaveEmployeeDetails").attr('disabled', false);
                return false;
            }

        },
        error: function (error) {
            toastr.error(error.statusText);
            $("#btnSaveEmployeeDetails").attr('disabled', false);
        }
    });
}

function ReadEmployeeNumber(res) {
    $("#txtEmployeenumber").val('');
    $("#txtEmployeenumber").val(res.EmployeeNumber);
    $("#txtBusinesskey").val(res.Businesskey); 
}

function IsValidEmployee() {

    //var EmailPattern = /^\w+([-+.'][^\s]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
    //if ($("#txtemailid").val().trim().length <= 0) {
    //    toastr.warning("Please Enter Email Id");
    //    return false;
    //}
    //if (!EmailPattern.test($("#txtemailid").val())) {
    //    toastr.warning("Email ID is Not Valid");
    //    return false;
    //}
    if ($("#cboBusinessKey").val() === '0' || $("#cboBusinessKey").val() === '') {
        toastr.warning("Please Select Business Key");
        return false;
    }


    if (IsStringNullorEmpty($("#txtEmployeeId").val())) {
        toastr.warning("Please Enter Employee ID");
        return false;
    }
    if (IsStringNullorEmpty($("#txtEmployeename").val())) {
        toastr.warning("Please Enter Employee Name");
        return false;
    }

    if ($("#cboGender").val() === "0") {
        toastr.warning("Please Select Gender");
        return false;
    }
    if (IsStringNullorEmpty($("#txtMobilenumber").val())) {
        toastr.warning("Please Enter Mobile Number");
        return false;
    }
    if ($("#cboTitle").val() === "0") {
        toastr.warning("Please Select Title");
        return false;
    }
    if (IsStringNullorEmpty($("#txtEmployeeStatus").val())) {
        toastr.warning("Please Enter Employee Status");
        return false;
    }
    if ($("#cboEmployeeclass").val() === "0") {
        toastr.warning("Please Select Employee Class");
        return false;
    }
    if ($("#cboEmployeegroup").val() === "0") {
        toastr.warning("Please Select Employee Group");
        return false;
    }
    if ($("#cboEmployeepaycategory").val() === "0") {
        toastr.warning("Please Select Employee Pay Category");
        return false;
    }

    if (IsStringNullorEmpty($("#txtDateofjoining").val())) {
        toastr.warning("Please Enter Date of joining");
        return false;
    }
    if (IsStringNullorEmpty($("#txtCurrentdepartment").val())) {
        toastr.warning("Please Enter Current Department");
        return false;
    }
    if (IsStringNullorEmpty($("#txtCurrentlocationposted").val())) {
        toastr.warning("Please Enter Current Location Posted");
        return false;
    }
    if (IsStringNullorEmpty($("#txtCurrentbasic").val())) {
        toastr.warning("Please Enter Current Basic");
        return false;
    }
    if (IsStringNullorEmpty($("#txtCurrentgross").val())) {
        toastr.warning("Please Enter Current Gross");
        return false;
    }
}

function fnEditEmpDetails(e, actiontype) {
    var rowid = $(e.target).parents("tr.jqgrow").attr('id');
    var rowData = $('#jqgEmployeeDetails').jqGrid('getRowData', rowid);
    EmpNo = rowData.EmployeeNumber;

    $("#txtEmployeenumber").val(EmpNo);
    if ($("#txtEmployeenumber").val() !== '' && $("#txtEmployeenumber").val() !== undefined) {
        fnFillEmployeeDetails(actiontype);
    }
}

function fnFillEmployeeDetails(actiontype) {
    if ($("#txtEmployeenumber").val() !== '' && $("#txtEmployeenumber").val() !== undefined) {
        $.ajax({
            async: false,
            url: getBaseURL() + "/Employee/GetEmployeeInfobyEmployeeNumber?EmpNumber=" + $("#txtEmployeenumber").val(),
            type: 'post',
            datatype: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (result) {

                $("#divForm").css("display", "block");
                $("#divGrid").hide();

                $('#cboBusinessKey').val(result.BusinessKey).selectpicker('refresh');
                $('#cboBusinessKey').prop('disabled', true).selectpicker('refresh');
                $("#txtEmployeenumber").val('');
                $('#txtEmployeenumber').val(result.EmployeeNumber);
                $("#txtBusinesskey").val(''); 
                $('#txtBusinesskey').val(result.BusinessKey); 
                $('#txtEmployeeId').val(result.EmployeeId);
                $("#txtBiometriccode").val(result.BiometricId);
                $("#cboTitle").val(result.Title).selectpicker('refresh');
                $('#txtEmployeename').val(result.EmployeeName);
                $('#cboGender').val(result.Gender).selectpicker('refresh');
                $('#txtMobilenumber').val(result.MobileNumber);
                
               
                //if (result.WillingnessToWorkInShifts === true) {

                //    $("#chkWillingnesstoworkInShifts").parent().addClass("is-checked");
                //}
                //else {
                //    $("#chkWillingnesstoworkInShifts").parent().removeClass("is-checked");
                //}
                if (result.ExemptedFromAttendance === true) {

                    $("#chkExemptedfromATT").parent().addClass("is-checked");
                }
                else {
                    $("#chkExemptedfromATT").parent().removeClass("is-checked");
                }
                $('#txtEmployeeStatus').val(result.EmployeeStatus);
                if (result.ActiveStatus === true) {

                    $("#chkActiveStatus").parent().addClass("is-checked");
                }
                else {
                    $("#chkActiveStatus").parent().removeClass("is-checked");
                }
                $('#cboEmployeegroup').val(result.EmployeeGroup).selectpicker('refresh');
                $('#cboEmployeeclass').val(result.EmployeeClass).selectpicker('refresh');
                $('#cboEmployeepaycategory').val(result.EmployeePayCategory).selectpicker('refresh');

                if (result.DateProbationTill !== null) {
                    setDate($('#txtDateofProbationTill'), result.DateProbationTill);
                }
                else {
                    $('#txtDateofProbationTill').val('');
                }
                if (result.DateOfJoining !== null) {
                    setDate($('#txtDateofjoining'), result.DateOfJoining);
                }
                else {
                    $('#txtDateofjoining').val('');
                }
                if (result.DateOfConfirmation !== null) {
                    setDate($('#txtDateofconfirmation'), result.DateOfConfirmation);
                }
                else {
                    $('#txtDateofconfirmation').val('');
                }
                if (result.DateOfResignation !== null) {
                    setDate($('#txtDateofresignation'), result.DateOfResignation);
                }
                else {
                    $('#txtDateofresignation').val('');
                }
                if (result.DateOfTermination !== null) {
                    setDate($('#txtDateoftermination'), result.DateOfTermination);
                }
                else {
                    $('#txtDateoftermination').val('');
                }
                if (result.DateOfRelieving !== null) {
                    setDate($('#txtDateofrelieving'), result.DateOfRelieving);
                }
                else {
                    $('#txtDateofrelieving').val('');
                }
                if (result.AnySuspension === true) {

                    $("#chkSuspensionemploymenttenure").parent().addClass("is-checked");
                }
                else {
                    $("#chkSuspensionemploymenttenure").parent().removeClass("is-checked");
                }
                $('#txtCurrentdepartment').val(result.CurrentDepartment);
                $('#txtCurrentlocationposted').val(result.CurrentLocationPosted);
                $('#txtCurrentbasic').val(result.CurrentBasic);
                $('#txtCurrentgross').val(result.CurrentGross);
                if (result.Emplyeeimage !== null && result.Emplyeeimage !== "") {
                    document.getElementById('imgPhoto').innerHTML = '<img id="imgPhotoimageblah" src=" ' + result.Emplyeeimage + '"  alt=" &nbsp; User Image"   /> <input class="fileInput" id="FileUpload1" type="file" name="file" onchange="readPhotoimage(this);" accept="image/*" enctype="multipart/form-data" />';
                }

            }
        });


        if (actiontype.trim() == "edit") {
            $("#btnSaveEmployeeDetails").show();
            $("#btnCancel").show();
            fnEnableEmployeeDetails(false);
            $("#btnSaveSMSInformation").html('Update');
            $("#btnSaveBankDetails,#btnPartNumberDisabled,#btnsavestatutory,#btnSaveBusinessLink,#btnSaveVendorDetails,#btnlocationsave").show();
           
        }
        if (actiontype.trim() == "view") {
            $("#btnSaveEmployeeDetails").hide();
            $("#btnCancel").hide();
            fnEnableEmployeeDetails(true);
            $("#btnSaveBankDetails,#btnPartNumberDisabled,#btnsavestatutory,#btnSaveBusinessLink,#btnSaveVendorDetails,#btnlocationsave").hide();
           
        }

    }

}


function fnEnableEmployeeDetails(val) {
    $("input,textarea").attr('readonly', val);
    $("#chkActiveStatus").attr('disabled', val);
    $("#chklocationstatus").prop('disabled', val);
    $("input[id*='chk']").attr('disabled', val);
    $("select").next().attr('disabled', val);
    $("#txtDateofProbationTill").prop('disabled', val);
    $("#txtDateofjoining").prop('disabled', val);
    $("#txtDateofconfirmation").prop('disabled', val);
    $("#txtDateofresignation").prop('disabled', val);
    $("#txtDateoftermination").prop('disabled', val);
    $("#txtDateofrelieving").prop('disabled', val);
}

function fnAddEmployeeDetails() {
    fnClearEmpdetailsFields();
    $("#divForm").css("display", "block");
    $("#divGrid").hide();
    $("#btnSaveEmployeeDetails").html('Save');
}

function fnClearEmpdetailsFields() {
    $('#cboBusinessKey').val('0').selectpicker('refresh');
    $('#cboBusinessKey').prop('disabled', false).selectpicker('refresh');
    $("#txtEmployeenumber").val('');
    $("#txtBusinesskey").val('');
    $("#txtEmployeeId").val('');
    $("#txtEmployeename").val('');
    $("#txtBiometriccode").val('');
    $('#cboGender').val('0').selectpicker('refresh');
    $('#cboTitle').val('0').selectpicker('refresh');
    $("#txtEmailId").val('');
    $("#txtMobilenumber").val(''); 
    $("#chkWillingtoworkinshifts").parent().removeClass("is-checked");
    $("#chkExemptedfromATT").parent().removeClass("is-checked");
    $("#chkActiveStatus").parent().addClass("is-checked");
    $('#Photoimage').val('');
    $('#imgPhotoimageblah').removeAttr('src');
    $('#cboEmployeeclass').val('0').selectpicker('refresh');
    $('#cboEmployeegroup').val('0').selectpicker('refresh');
    $('#cboEmployeepaycategory').val('0').selectpicker('refresh');
    $("#txtDateofProbationTill").val('');
    $("#txtEmployeeStatus").val('');
    $("#txtDateofjoining").val('');
    $("#txtDateofconfirmation").val('');
    $("#txtDateofresignation").val('');
    $("#txtDateofrelieving").val('');
    $("#txtDateoftermination").val('');
    $("#txtCurrentdepartment").val('');
    $("#txtCurrentlocationposted").val('');
    $("#txtCurrentbasic").val('');
    $("#txtCurrentgross").val('');
    $("#chkSuspensionemploymenttenure").parent().removeClass("is-checked");
    $("#btnSaveEmployeeDetails").attr('disabled', false);
    $("#btnSaveEmployeeDetails").show();
    $("#btnCancel").show();
}

function fnGridRefreshEmployeeDetails() {
    $("#jqgEmployeeDetails").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
}

function fnCloseEmployeeDetails(){
    $("#divGrid").show();
    $("#divForm").css("display", "none");
}