@using Microsoft.AspNetCore.Mvc.Localization

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "Business Entity";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var userFormRole = (eSyaEnterprise_UI.Models.DO_UserFormRole)ViewBag.UserFormRole;
}
<script>
    var _userFormRole = JSON.parse('@Html.Raw(Json.Serialize(userFormRole))');

    var localization = {
        AddBusinessEntity: '@Localizer["AddBusinessEntity"]',
        BusinessEntity: '@Localizer["BusinessEntity"]',
        EditBusinessEntity: '@Localizer["EditBusinessEntity"]',
        ViewBusinessEntity: '@Localizer["ViewBusinessEntity"]',
        Save: '@Localizer["Save"]',
        Update: '@Localizer["Update"]',
    };
</script>

<link href="~/css/jsTree.css" rel="stylesheet" />
@section scripts{
    <script src="~/js/jsTree.js"></script>
}
<div class="row">
    <div class="col-lg-4 col-md-4 col-sm-6" id="divJstBusinessEntity">
        <div id="jstBusinessEntity"></div>
    </div>
    <div class="col-lg-6 col-md-6 col-sm-6">
        <div class="demo-card-square mdl-card mdl-shadow--2dp" id="pnlMainMenu" style="width: 100%; display:none">
            <div id="pnlMainModuleHeading" class="mdl-card__title mdl-card--expand padleft0 padtop0 h-52 d-block">
                <h5 class="mdl-card__title-text">Add Business Entity</h5>
            </div>
            <div class="mdl-card__supporting-text fullwidth pad0">
                <div class="row mar0">
                    <input type="text" id="txtBusinessEntityId" style="display:none" />
                    <div class="col-lg-12">
                        <div class="form-group">
                            <label> @Localizer["BusinessDescription"] </label>
                            <input id="txtEntityDescription" class=" form-control" maxlength="75" type="text" />
                        </div>
                    </div>

                </div>
                <div class="row" style="margin:0px">
                    <div class="col-lg-4  col-md-4 col-sm-12 col-xs-12">
                        <div class="form-group">
                            <label> @Localizer["BusinessUnitType"] </label>
                            <div>
                                <select class="selectpicker" data-live-search="false" id="cboUnitType" onchange="fnHideshowUnits()">
                                    <option value="S">Single Segment</option>
                                    <option value="M">Multi Segment</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4  col-md-4 col-sm-12 col-xs-12">
                        <div class="form-group">
                            <label> @Localizer["NumberofUnits"] </label>
                            <input id="txtNoofUnits" class=" form-control" maxlength="8" type="text" />
                        </div>
                    </div>

                    <div class="col-lg-4  col-md-4 col-sm-12 col-xs-12">
                        <div class="form-group">
                            <label> @Localizer["NumberofActiveUnits"] </label>
                            <input id="txtNoActiveofUnits" class=" form-control" maxlength="8" type="text" readonly="readonly"/>
                        </div>
                    </div>

                    <div class="col-lg-4  col-md-4 col-sm-12 col-xs-12">
                        <div class="default-checkbox checkbox-group">
                            <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect" for="chkActiveStatus">
                                <input type="checkbox" id="chkActiveStatus" class="mdl-checkbox__input">
                                <span class="mdl-checkbox__label">@Localizer["Active"]</span>
                            </label>
                        </div>
                    </div>

                </div>
            </div>
            <div class="mdl-card__actions mdl-card--border" style="text-align: center;">
                <button class="mdl-button mdl-js-button mdl-button--raised primary-button" id="btnSaveBusinessEntity" onclick="fnSaveBusinessEntity()">
                    @Localizer["Save"]
                </button>

            </div>

        </div>

    </div>
    <div class="col-lg-2 col-md-2 col-sm-6">
        <div>
            <h5>Action</h5>
        </div>
        <div class="row">
            <div class="col-lg-12 btn_pdnTop">
                <button class="mdl-button mdl-js-button mdl-button--raised cancel-button btn_wdth" id="btnDeleteNode" onclick="fnDeleteNode()">
                    <i class="fa fa-times"></i>     @Localizer["DeleteNode"]
                </button>
            </div>

            <div class="col-lg-12 btn_pdnTop">
                <button class="mdl-button mdl-js-button mdl-button--raised primary-button btn_wdth" id="btnExpandAll" onclick="fnExpandAll()">
                    <i class="fas fa-expand"></i>   @Localizer["ExpandAll"]
                </button>
            </div>
            <div class="col-lg-12 btn_pdnTop">
                <button class="mdl-button mdl-js-button mdl-button--raised primary-button btn_wdth" id="btnCollapseAll" onclick="fnCollapseAll()">
                    <i class="fas fa-compress"></i>   @Localizer["CollapseAll"]
                </button>
            </div>

        </div>
    </div>
</div>


<script>
    var NodeID;
    var prevSelectedID;

    $(document).ready(function () {
        $("#pnlMainMenu").hide();
        LoadBusinessEntityTree();
        $("#btnDeleteNode").attr("disabled", _userFormRole.IsDelete === false);
        $("#txtNoofUnits").attr('readonly', true);
        $("#txtNoofUnits").inputmask({ regex: "^[0-9]{1,7}(\\.\\d{1,2})?$" });
    });
    function fnHideshowUnits() {
        var ddlunitval = $('#cboUnitType').val();
        if (ddlunitval === "S") {
            
            $("#txtNoofUnits").attr('readonly', true);
            $('#txtNoofUnits').val('1');
        }
        else {
            $("#txtNoofUnits").attr('readonly', false);
        }
    }
    function LoadBusinessEntityTree() {
        $.ajax({
            url: getBaseURL() + '/BusinessStructure/GetBusinessEntitiesforTreeView',
            success: function (result) {
                fnGetBusinessEntities_Success(result);
            },
            error: function (error) {
                toastr.error(error.status);
            }
        });
    }

    function fnGetBusinessEntities_Success(dataArray) {
        $("#jstBusinessEntity").jstree({
            "state": { "checkbox_disabled": true },
            "checkbox": {
                "keep_selected_style": false
            },
            core: { 'data': dataArray, 'check_callback': true, 'multiple': true }

        });

        $("#jstBusinessEntity").on('loaded.jstree', function () {
            $("#jstBusinessEntity").jstree('open_all');
            $("#jstBusinessEntity").jstree()._open_to(prevSelectedID);
            $('#jstBusinessEntity').jstree().select_node(prevSelectedID);

        });

        $('#jstBusinessEntity').on("changed.jstree", function (e, data) {
            if (data.node != undefined) {
                if (prevSelectedID != data.node.id) {
                    prevSelectedID = data.node.id;

                    if (data.node.id == "0") {
                        fnClearFields();
                        $("#pnlMainMenu").hide();
                    }
                    else {

                        $('#View').remove();
                        $('#Edit').remove();
                        $('#Add').remove();

                        $("#pnlMainMenu").hide();

                        if (data.node.parent == "#") {
                            $('#' + data.node.id + "_anchor").html($('#' + data.node.id + "_anchor").html() + '<span id="Add" style="padding-left:10px;padding-right:10px">&nbsp;<i class="fa fa-plus" style="color:#337ab7"aria-hidden="true"></i></span>')

                            $('#Add').on('click', function () {
                                if (_userFormRole.IsInsert === false) {
                                    $('#pnlMainMenu').hide();
                                    toastr.warning(errorMsgCS["E003"]);
                                    return;
                                }

                                $("#pnlMainMenu").show();
                                $(".mdl-card__title-text").text(localization.AddBusinessEntity);
                                fnClearFields();
                                $("#btnSaveBusinessEntity").show();
                                $("input,textarea").attr('readonly', false);
                                $("input[type=checkbox]").attr('disabled', false);
                                $("#chkActiveStatus").attr('disabled', true);
                                $("#txtNoActiveofUnits").attr('readonly', true);
                                $("#txtNoofUnits").attr('readonly', true);
                                $("#btnSaveBusinessEntity").html('<i class="fa fa-plus"></i> ' + localization.Save);
                            });
                        }
                        else if (data.node.id.startsWith("FM")) {

                            NodeID = 0;
                            NodeID = data.node.id.substring(2).split("_")[1];

                            $('#' + data.node.id + "_anchor").html($('#' + data.node.id + "_anchor").html() + '<span id="View" style="padding-left:10px">&nbsp;<i class="fa fa-eye" style="color:#337ab7"aria-hidden="true"></i></span>')
                            $('#' + data.node.id + "_anchor").html($('#' + data.node.id + "_anchor").html() + '<span id="Edit" style="padding-left:10px">&nbsp;<i class="fa fa-pen" style="color:#337ab7"aria-hidden="true"></i></span>')



                            $('#View').on('click', function () {

                                if (_userFormRole.IsView === false) {
                                    $('#pnlMainMenu').hide();
                                    toastr.warning(errorMsgCS["E001"]);
                                    return;
                                }

                                $("#pnlMainMenu").show();
                                $(".mdl-card__title-text").text(localization.ViewBusinessEntity);
                                $('#txtBusinessEntityId').val(NodeID);

                                fnFillBusinessEntityInfo();

                                $("#btnSaveBusinessEntity").hide();
                                $("input,textarea").attr('readonly', true);
                                $("input[type=checkbox]").attr('disabled', true);
                                $("#txtNoActiveofUnits").attr('readonly', true);
                                $("#chkActiveStatus").attr('disabled', true);
                            });

                            $('#Edit').on('click', function () {
                                if (_userFormRole.IsEdit === false) {
                                    $('#pnlMainMenu').hide();
                                    toastr.warning(errorMsgCS["E002"]);
                                    return;
                                }

                                $("#pnlMainMenu").show();
                                $(".mdl-card__title-text").text(localization.EditBusinessEntity);
                                $('#txtBusinessEntityId').val(NodeID);

                              
                                $("#btnSaveBusinessEntity").show();
                                $("input,textarea").attr('readonly', false);
                                $("input[type=checkbox]").attr('disabled', false);
                                $("#chkActiveStatus").attr('disabled', true);
                                fnFillBusinessEntityInfo();
                                $("#txtNoActiveofUnits").attr('readonly', true);
                                $("#btnSaveBusinessEntity").html('<i class="fa fa-sync"></i> ' + localization.Update);
                                //$("#btnSaveBusinessEntity").attr("disabled", _userFormRole.IsEdit === false);
                            });
                        }
                        else {
                            fnClearFields();
                            $("#pnlMainMenu").hide();
                        }
                    }
                }
            }
        });

        $('#jstBusinessEntity').on("close_node.jstree", function (node) {
            var closingNode = node.handleObj.handler.arguments[1].node;
            $('#jstBusinessEntity').jstree().deselect_node(closingNode.children);
        });
        fnTreeSize("#divJstBusinessEntity");
    };

    function fnFillBusinessEntityInfo() {
        if ($("#txtBusinessEntityId").val() != '' && $("#txtBusinessEntityId").val() != undefined) {
            $.ajax({
                async: false,
                url: getBaseURL() + "/BusinessStructure/GetBusinessEntityInfo?BusinessId=" + $("#txtBusinessEntityId").val(),
                type: 'post',
                datatype: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (result) {
                    $('#txtEntityDescription').val(result.BusinessDesc);

                    if (result.BusinessUnitType === 'S') {
                        $("#txtNoofUnits").attr('readonly', true);
                    }
                    else {
                        $("#txtNoofUnits").attr('readonly', false); 
                    }
                    $('#cboUnitType').val(result.BusinessUnitType);
                    $('#cboUnitType').selectpicker('refresh');
                    $('#txtNoofUnits').val(result.NoOfUnits);
                    $('#txtNoActiveofUnits').val(result.ActiveNoOfUnits);
                    $("#txtNoActiveofUnits").attr('readonly', true);
                    if (result.ActiveStatus == 1) {
                        $("#chkActiveStatus").parent().addClass("is-checked");
                    }
                    else { $('#chkActiveStatus').parent().removeClass("is-checked"); }
                }
            });
        }
    }

    function fnSaveBusinessEntity() {

        if (validationBusinessEntity() === false) {
            return;
        }
        
       
        $("#btnSaveBusinessEntity").attr('disabled', true);
        var EntityID = $("#txtBusinessEntityId").val();
        var businessentity;
        if (EntityID == null || EntityID == "") {
            businessentity = {
                BusinessId: 0,
                BusinessDesc: $("#txtEntityDescription").val(),
                //IsMultiSegmentApplicable: $("#chkIsMultiSegmentApplicable").parent().hasClass("is-checked"),
                BusinessUnitType: $('#cboUnitType').val(),
                NoOfUnits: $('#txtNoofUnits').val(),
                ActiveStatus: $("#chkActiveStatus").parent().hasClass("is-checked"),
                ActiveNoOfUnits:$('#txtNoActiveofUnits').val()
            };

        }
        else {
            businessentity = {
                BusinessId: $("#txtBusinessEntityId").val(),
                BusinessDesc: $("#txtEntityDescription").val(),
                //IsMultiSegmentApplicable: $("#chkIsMultiSegmentApplicable").parent().hasClass("is-checked"),
                BusinessUnitType: $('#cboUnitType').val(),
                NoOfUnits: $('#txtNoofUnits').val(),
                ActiveStatus: $("#chkActiveStatus").parent().hasClass("is-checked"),
                ActiveNoOfUnits: $('#txtNoActiveofUnits').val()
            };
        }
        $.ajax({
            url: getBaseURL() + '/BusinessStructure/InsertOrUpdateBusinessEntity',
            type: 'POST',
            datatype: 'json',
            data: { businessentity },
            success: function (response) {
                if (response.Status) {
                    toastr.success(response.Message);
                    location.reload();

                    return true;
                }
                else {
                    toastr.error(response.Message);
                    $("#btnSaveBusinessEntity").attr('disabled', false);
                    return false;
                }

            },
            error: function (error) {
                toastr.error(error.statusText);
                $("#btnSaveBusinessEntity").attr('disabled', false);
            }
        });
    }

    function validationBusinessEntity() {

        if (IsStringNullorEmpty($("#txtEntityDescription").val())) {
            toastr.warning("Please Enter Entity Description");
            return false;
        }
       
        if ($('#cboUnitType').val() === "M") {
            if (IsStringNullorEmpty($("#txtNoofUnits").val())) {
                toastr.warning("Please Enter Number of Units");
                return false;
            }
            if (Number($("#txtNoofUnits").val()) <= 1) {
                toastr.warning("Number of Units should be greater than one");
                return false;
            }
        }
    }

    function fnClearFields() {

        $("#txtBusinessEntityId").val('');
        $("#txtEntityDescription").val('');
        $("#chkIsMultiSegmentApplicable").parent().removeClass("is-checked");
        $('#cboUnitType').val('S').selectpicker('refresh');
        $('#txtNoofUnits').val('');
        $('#txtNoActiveofUnits').val('0');
        $("#chkActiveStatus").parent().addClass("is-checked");
        $("#btnSaveBusinessEntity").html('<i class="fa fa-plus"></i> Add');
    }

    function validationBusinessEntityOnDelete() {

        if (IsStringNullorEmpty($("#txtBusinessEntityId").val())) {
            toastr.warning("Please Select Business Entity");
            return false;
        }

        if (IsStringNullorEmpty($("#txtEntityDescription").val())) {
            toastr.warning("Please Enter Entity Description");
            return false;
        }
    }

    function fnDeleteNode() {

        if (validationBusinessEntityOnDelete() === false) {
            return;
        }
        $("#btnDeleteNode").attr('disabled', true);
        $.ajax({
            url: getBaseURL() + '/BusinessStructure/DeleteBusinessEntity?BusinessEntityId=' + $("#txtBusinessEntityId").val(),
            type: 'POST',
            datatype: 'json',
            success: function (response) {
                if (response.Status) {
                    toastr.success(response.Message);
                    location.reload();
                    
                    return true;
                }
                else {
                    toastr.error(response.Message);
                    return false;
                }

            },
            error: function (error) {
                toastr.error(error.statusText);
            }
        });
    }

    function fnExpandAll() {
        $('#jstBusinessEntity').jstree('open_all');
    }
    function fnCollapseAll() {
        fnClearFields();
        $("#pnlMainMenu").hide();
        $('#jstBusinessEntity').jstree('close_all');
    }
    function fnTreeSize() {
        $("#jstBusinessEntity").css({
            'height': $(window).innerHeight() - 136,
            'overflow': 'auto'
        });
    }
</script>