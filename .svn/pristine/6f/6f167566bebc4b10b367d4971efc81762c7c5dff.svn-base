using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using System.Net.Http;
using eSyaEnterprise_UI.Areas.Config.Models;
using eSyaEnterprise_UI.Models;
using eSyaEnterprise_UI.Utility;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Newtonsoft.Json;
using eSyaEnterprise_UI.Areas.Config.Data;

namespace eSyaEnterprise_UI.Areas.Config.Controllers
{
    public class InventoryController : Controller
    {
        private readonly IeSyaConfigAPIServices _eSyaConfigAPIServices;
        public InventoryController(IeSyaConfigAPIServices eSyaConfigAPIServices)
        {
            _eSyaConfigAPIServices = eSyaConfigAPIServices;
        }
        

        #region Store Master
        //Store Master
        [Area("eSyaConfig")]
        public IActionResult V_41_00()
        {
            ViewBag.formName = "Store Master";
            return View();
        }
        /// <summary>
        /// Get Store Codes List for Grid
        /// </summary>
        [HttpPost]
        public JsonResult GetStoreCodes()
        {
            try
            {
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_StoreMaster>>("StoreMaster/GetStoreCodes").Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        /// Insert or Update Store Codes
        /// </summary>
        [HttpPost]
        public JsonResult InsertOrUpdateStoreCodes(DO_StoreMaster postData)
        {

            try
            {
                postData.UserID = AppSessionVariables.GetSessionUserID(HttpContext);
                postData.TerminalID = AppSessionVariables.GetIPAddress(HttpContext);
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("StoreMaster/InsertOrUpdateStoreCodes", postData).Result;
                if (serviceResponse.Status)
                    return Json(serviceResponse.Data);
                else
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }
        /// <summary>
        /// Delete Store Codes
        /// </summary>
        [HttpPost]
        public JsonResult DeleteStoreCode(int StoreCode)
        {

            try
            {
                var parameter = "?StoreCode=" + StoreCode;
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<DO_ReturnParameter>("StoreMaster/DeleteStoreCode"+ parameter).Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }
        #endregion Store Master

        #region Inventory Rules
        //Inventory Rules
        [Area("eSyaConfig")]
        public IActionResult V_42_00()
        {
            ViewBag.formName = "Inventory Rules";
            return View();
        }

        /// <summary>
        /// Getting Inventory Rules for Grid
        /// </summary>

        [HttpPost]
        public JsonResult GetInventoryRules()
        {
            try
            {
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_InventoryRules>>("InventoryRules/GetInventoryRules").Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        /// Insert or Update Inventory Rules
        /// </summary>
        [HttpPost]
        public JsonResult InsertOrUpdateInventoryRules(DO_InventoryRules rule)
        {

            try
            {
                if (rule.Isadd == 1)
                {
                    var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("InventoryRules/InsertInventoryRule", rule).Result;
                    if (serviceResponse.Status)
                        return Json(serviceResponse.Data);
                    else
                        return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
                }

                else
                {
                    var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("InventoryRules/UpdateInventoryRule", rule).Result;
                    if (serviceResponse.Status)
                        return Json(serviceResponse.Data);
                    else
                        return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
                }
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }

        #endregion Inventory Rules

        #region Unit of Measure
        //Unit of Measure
        [Area("eSyaConfig")]
        public IActionResult V_43_00()
        {
            ViewBag.formName = "Unit of Measure";
            return View();
        }

        /// <summary>
        /// Getting Unit Measure List for Grid
        /// </summary>

        [HttpPost]
        public JsonResult GetUnitofMeasurements()
        {
            try
            {
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.GetAsync<List<DO_UnitofMeasure>>("UnitofMeasure/GetUnitofMeasurements").Result;
                return Json(serviceResponse.Data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        /// Insert or Update Unite of Measure
        /// </summary>
        [HttpPost]
        public JsonResult InsertOrUpdateUnitofMeasurement(DO_UnitofMeasure uoms)
        {

            try
            {
                var serviceResponse = _eSyaConfigAPIServices.HttpClientServices.PostAsJsonAsync<DO_ReturnParameter>("UnitofMeasure/InsertOrUpdateUnitofMeasurement", uoms).Result;
                if (serviceResponse.Status)
                    return Json(serviceResponse.Data);
                else
                    return Json(new DO_ReturnParameter() { Status = false, Message = serviceResponse.Message });
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }
        #endregion Unit of Measure



        #region Item Master
        //Unit of Measure
        [Area("eSyaConfig")]
        public IActionResult V_74_00()
        {
            ViewBag.formName = "Item Master";
            return View();
        }
        #endregion Item Master

        #region Item Business Link
        //Unit of Measure
        [Area("eSyaConfig")]
        public IActionResult V_75_00()
        {
            ViewBag.formName = "Item Business Link";
            return View();
        }
        #endregion Item Business Link


        #region Item Reorder Level
        //Unit of Measure
        [Area("eSyaConfig")]
        public IActionResult V_76_00()
        {
            ViewBag.formName = "Item Reorder Level";
            return View();
        }
        #endregion Item Master



    }
}