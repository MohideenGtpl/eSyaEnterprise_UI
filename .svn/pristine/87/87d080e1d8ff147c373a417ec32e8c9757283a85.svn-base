@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "ETM_10_00";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts{

   @* <script src="~/js/TokenSystem/TokenConfigure.js"></script>*@
}

@{
    var userFormRole = (eSyaEnterprise_UI.Models.DO_UserFormRole)ViewBag.UserFormRole;
}
<script>
     var _userFormRole = JSON.parse('@Html.Raw(Json.Serialize(userFormRole))');
        var localization = {
            AddIP: '@Localizer["AddIP"]',
            IPAddress: '@Localizer["IPAddress"]',
            ScreenType: '@Localizer["ScreenType"]',
            Select: '@Localizer["Select"]',
            Counter: '@Localizer["Counter"]',
            Parameters: '@Localizer["Parameters"]',
            Edit: '@Localizer["Edit"]',
            Active: '@Localizer["Active"]',
            Actions: '@Localizer["Actions"]',
            Save: '@Localizer["Save"]',
            Update: '@Localizer["Update"]',
            Delete: '@Localizer["Delete"]',
            AddDisplayIP: '@Localizer["AddDisplayIP"]',
            EditDisplayIP: '@Localizer["EditDisplayIP"]',
            Status: '@Localizer["Status"]',
        }
</script>

<div class="row">

    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <table id="jqgDisplayIPList"></table>
        <div id="jqpDisplayIPList"></div>
    </div>
</div>

<div class="modal fade in" id="PopupDisplayIP" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-md" role="document" style="box-shadow:none;">
        <div class="modal-content ">
            <div class="modal-header popupHeader">
                <button type="button" class="close ml-auto" data-dismiss="modal"> <i class="fa fa-times"></i></button>
                <h4 class="modal-title" id="lblDisplayIP">@Localizer["AddIP"] </h4>
            </div>

            <div class="modal-body">
                <div class="row">
                    <div class="col-12">
                        <input type="text" class="form-control" id="txtDisplayId" style="display:none">
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6  col-md-6 col-sm-12">
                        <div class="form-group">
                            <label for="txtIPAddress">@Localizer["IPAddress"] </label>
                            <input type="text" id="txtIPAddress" class="form-control" maxlength="20"  />
                        </div>
                    </div>

                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            <label for="">@Localizer["ScreenType"]</label>
                            <select class="selectpicker" data-live-search="true" id="cboScreenType" title="Select" data-size="4" data-container="body" asp-items="@ViewBag.Tokentypes">
                                <option value="0">@Localizer["Select"]  </option>
                                <option value="COUN" data-url="ETM_12_00">@Localizer["Counter"]  </option>
                            </select>
                        </div>
                    </div>

                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-group">
                            <label for="txtParameter">@Localizer["Parameters"] </label>
                            <input type="text" id="txtParameter" class="form-control" maxlength="50" />
                        </div>
                    </div>

                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect" for="chkActiveStatus">
                            <input type="checkbox" id="chkActiveStatus" class="mdl-checkbox__input">
                            <span class="mdl-checkbox__label">@Localizer["Active"]</span>
                        </label>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-lg-12">
                        <button class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent primary-button" id="btnsaveDisplayIP" onclick="fnInsertUpdateDisplayConfig()">
                            <i class="fa fa-save"></i> @Localizer["Save"]
                        </button>
                        <button class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect  cancel-button cancel-button" data-dismiss="modal" id="btnCancelToken" onclick="fnhidepopup()"><i class="fa fa-times"></i> @Localizer["Cancel"]  </button>
                        
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        LoadDisplayIPList();
    });
    function LoadDisplayIPList() {

        $("#jqgDisplayIPList").jqGrid('GridUnload');
        $("#jqgDisplayIPList").jqGrid(
            {

                url: getBaseURL() + '/DisplaySystem/GetDisplayIPList',
                datatype: 'json',
                mtype: 'GET',
                ajaxGridOptions: { contentType: 'application/json; charset=utf-8', async: false },
                async: false,

                jsonReader: { repeatitems: false, root: "rows", page: "page", total: "total", records: "records" },


                colNames: ["Id", localization.IPAddress, localization.ScreenType,localization.Parameters, localization.Status,localization.Actions],
                colModel: [
                    { name: "DisplayId", width: 100, editable: false, align: 'left' , hidden: true },
                    { name: "DisplayIPAddress", width: 300, editable: false, align: 'left' },
                    { name: "DisplayURL", width: 100, editable: false, align: 'left', hidden: true },
                    { name: "QueryString", width: 150, editable: false, align: 'left' },
                    { name: "ActiveStatus", width: 200, editable: false, align: 'left', formatter: 'select', editoptions: { value: "true:Active;false:Inactive" } },
                    {
                        name: 'edit', search: false, align: 'left', width: 300, sortable: false, resizable: false,
                        formatter: function (cellValue, options, rowdata, action) {
                            return '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title="Edit" id="jqgEdit" onclick="return fnEditDisplayIP(event,\'edit\');"><i class="fas fa-pen"></i> ' + localization.Edit + '</button>' +
                                '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title="Delete" id="jqgDelete" onclick="return fnEditDisplayIP(event,\'delete\');"><i class="fas fa-trash"></i>' + localization.Delete + '</button>'
                        }
                    },
                ],
                pager: "#jqpDisplayIPList",
                rowNum: 10,
                rowList: [10, 20, 50, 100],
                rownumWidth: '55',
                loadonce: true,
                viewrecords: true,
                gridview: true,
                rownumbers: true,
                height: 'auto',
                scroll: false,
                width: 'auto',
                autowidth: true,
                shrinkToFit: true,
                forceFit: true, caption: 'Display Management',
                loadComplete: function (data) {
                    //fnJqgridSmallScreen("jqpDisplayIPList");
                   // SetGridControlByAction(); 
                },
            }).jqGrid('navGrid', '#jqpDisplayIPList', { add: false, edit: false, search: false, del: false, refresh: false, refreshtext: 'Reload' }).jqGrid('navButtonAdd', '#jqpDisplayIPList', {
                caption: '<span class="fa fa-sync"></span> Refresh', buttonicon: "none", id: "custRefresh", position: "first", onClickButton: fnGridRefreshToken
            }).jqGrid('navButtonAdd', '#jqpDisplayIPList', {
                caption: '<span class="fa fa-plus" data-toggle="modal"></span> Add', buttonicon: 'none', id: 'jqgAdd', position: 'first', onClickButton: fnshowpopupforadd
            });
    }

    function SetGridControlByAction() {

        $('#jqgAdd').removeClass('ui-state-disabled');
        var btn_editEnable = document.querySelectorAll('#jqgEdit');
        var btn_viewEnable = document.querySelectorAll('#jqgView');
        var btn_deleteEnable = document.querySelectorAll('#jqgDelete');
        for (var i = 0; i < btn_editEnable.length; i++) {
            btn_editEnable[i].disabled = false;
        }
        for (var j = 0; j < btn_viewEnable.length; j++) {
            btn_viewEnable[j].disabled = false;
        }
        for (var k = 0; k < btn_deleteEnable.length; k++) {
            btn_deleteEnable[k].disabled = false;
        }


        if (_userFormRole.IsInsert === false) {
            $('#jqgAdd').addClass('ui-state-disabled');
        }
        if (_userFormRole.IsEdit === false) {
            var btn_editDisable = document.querySelectorAll('#jqgEdit');
            for (var i = 0; i < btn_editDisable.length; i++) {
                btn_editDisable[i].disabled = true;
                btn_editDisable[i].className = "ui-state-disabled";
            }
        }
        if (_userFormRole.IsView === false) {
            var btn_viewDisable = document.querySelectorAll('#jqgView');
            for (var j = 0; j < btn_viewDisable.length; j++) {
                btn_viewDisable[j].disabled = true;
                btn_viewDisable[j].className = "ui-state-disabled";
            }
        }

        if (_userFormRole.IsDelete === false) {
            var btn_deleteDisable = document.querySelectorAll('#jqgDelete');
            for (var k = 0; k < btn_deleteDisable.length; k++) {
                btn_deleteDisable[k].disabled = true;
                btn_deleteDisable[k].className = "ui-state-disabled";
            }
        }
    }

    function fnshowpopupforadd() {
        fnClear();
        $("#PopupDisplayIP").modal("show");
        $("#txtDisplayId").val('0');
        $("#lblDisplayIP").text(localization.AddDisplayIP);
        $("#btnsaveDisplayIP").text(localization.Save);
    }
    function fnshowpopup(id) {
        fnClear();
        $("#PopupDisplayIP").modal("show");
        $("#txtDisplayId").val(id);
        if (id == 0) {
            $("#lblDisplayIP").text(localization.AddDisplayIP);
            $("#btnsaveDisplayIP").text(localization.Save);
        }
        else {
            $("#lblDisplayIP").text(localization.EditDisplayIP);
            $("#btnsaveDisplayIP").text(localization.Update);
            fnFillDisplayIP(id);
        }

    }


    function fnEditDisplayIP(e, actiontype) {

        var rowid = $(e.target).parents("tr.jqgrow").attr('id');
        var rowData = $('#jqgDisplayIPList').jqGrid('getRowData', rowid);

        if (actiontype.trim() == "edit") {
            fnshowpopup(rowData["DisplayId"]) 
        }
        if (actiontype.trim() == "delete") {
            fnConfirmDelete(rowData["DisplayId"]);
        }
    }



    function fnhidepopup() {
        $("#PopupDisplayIP").modal("hide");
        fnClear();
    }
    function fnClear() {
        $("#txtIPAddress").val('');
        $("#cboScreenType").val('0');
        $("#cboScreenType").selectpicker('refresh');
        $("#txtParameter").val('');
        $('#chkActiveStatus').parent().addClass("is-checked");
    }
    function fnFillDisplayIP(id) {
        $.ajax({
            url: getBaseURL() + '/DisplaySystem/GetDisplayConfigByID',
            data: {
                DisplayId: id
            },
            success: function (result) {

                $("#txtIPAddress").val(result.DisplayIPAddress);
                $("#cboScreenType").val(result.DisplayScreenType);
                $("#cboScreenType").selectpicker('refresh');
                $("#txtParameter").val(result.QueryString);
                if (result.ActiveStatus == true)
                    $('#chkActiveStatus').parent().addClass("is-checked");
                else
                    $('#chkActiveStatus').parent().removeClass("is-checked");
            }
        });
    }
    function fnConfirmDelete(id) {
        bootbox.confirm({
            message: "Do you want to delete the selected record?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result) {
                    fnDeleteIP(id);
                }

            }
        });
    }
    function fnDeleteIP(id) {
        $.ajax({
            url: getBaseURL() + '/DisplaySystem/DeleteDisplayIPByID',
            data: {
                DisplayId: id
            },
            success: function (response) {

                if (response.Status == true) {
                    toastr.success("Record Deleted Successfully.");
                    LoadDisplayIPList();
                }
                else {
                    toastr.error(response.Message);
                }
            }
        });
    }
    function fnInsertUpdateDisplayConfig() {
        var txtIPAddress = $("#txtIPAddress").val();
        var txtParameter = $("#txtParameter").val();
        var cboScreenType = $("#cboScreenType").val();

        if (txtIPAddress == "" || txtIPAddress == null || txtIPAddress == undefined) {
            toastr.warning("Please enter the IP Address");
            return false;
        }
        else if (txtParameter == "" || txtParameter == null || txtParameter == undefined) {
            toastr.warning("Please enter the Parameter");
            return false;
        }

        else if (cboScreenType == 0 || cboScreenType == null || cboScreenType == undefined) {
            toastr.warning("Please Select Screen Type");
            return false;
        }
        else {
            $("#btnsaveDisplayIP").attr("disabled", true);
            var screenURL = $.trim($("#cboScreenType option:selected").data('url'));
            var displayID = $("#txtDisplayId").val();
            $.ajax({
                url: getBaseURL() + '/DisplaySystem/InsertUpdateDisplayConfig',
                type: 'POST',
                datatype: 'json',
                data: {
                    DisplayId: displayID,
                    DisplayIPAddress: $("#txtIPAddress").val(),
                    DisplayScreenType: $("#cboScreenType").val(),
                    DisplayURL: screenURL,
                    QueryString: $("#txtParameter").val(),
                    ActiveStatus: $("#chkActiveStatus").parent().hasClass("is-checked")
                },
                async: false,
                success: function (response) {
                    if (response.Status == true) {
                        if (displayID == 0) {
                            toastr.success("Display IP Added");
                        }
                        else {
                            toastr.success("Display IP Updated");
                        }
                        fnhidepopup()
                        LoadDisplayIPList();

                    }
                    else {
                        toastr.error(response.Message);
                    }
                    $("#btnsaveDisplayIP").attr("disabled", false);
                },
                error: function (error) {
                    toastr.error(error.statusText);
                    $("#btnsaveDisplayIP").attr("disabled", false);
                }
            });
        }
    }
    function fnGridRefreshToken() {
        $("#jqgDisplayIPList").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
    }

</script>