
@{
    ViewData["Title"] = "V_5010_00";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-5 col-md-5 col-sm-6">
        <div class="row">
            <div class="col-lg-7 col-md-7 col-sm-12 form-group">
                <label>Business Key</label>
                @await Component.InvokeAsync("UserBusinessLocation")
            </div>
            <div class="col-lg-5 col-md-5 col-sm-12 form-group">
                <label>Pay Period</label>
                <input type="text" name="name" id="dtPayPeriod" value="" class="form-control" onchange="fnPayPeriod_onChange()" />
            </div>
        </div>
    </div>

    <div class="col-lg-12 col-md-12 col-sm-12">
        <hr />
        <table id="jqgSalaryProcess"></table>
        <div id="jqpSalaryProcess"></div>
    </div>
</div>


<style>
    .ui-datepicker-calendar {
        display: none;
    }
</style>

<script type="text/javascript">

    var _payPeriod = null;

    $(function () {

        _payPeriod = null;

        $('#dtPayPeriod').datepicker({
            changeMonth: true,
            changeYear: true,
            showButtonPanel: true,
            dateFormat: 'MM yy',
            onClose: function (dateText, inst) {
                var month = $("#ui-datepicker-div .ui-datepicker-month :selected").val();
                var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
                $(this).val($.datepicker.formatDate('MM yy', new Date(year, month, 1)));
                _payPeriod = year + "" + padDigits(parseInt(month) + 1, 2);
                $("#jqgSalaryProcess").jqGrid("setGridParam", { datatype: "json" })
                    .trigger("reloadGrid", [{ current: true }]);
            },
        });

    });


    function fnBusinessLocation_onChange() {
        $("#jqgSalaryProcess").jqGrid("setGridParam", { datatype: "json" })
            .trigger("reloadGrid", [{ current: true }]);
    }


    $(function () {

        $("#jqgSalaryProcess").jqGrid({
            url: getBaseURL() + '/SalaryProcess/GetSalaryRegister',
            datatype: "json",
            contenttype: "application/json; charset-utf-8",
            mtype: 'GET',
            postData: {
                businessKey: function () { return $("#cboBusinessLocation").val(); },
                payPeriod: function () { return _payPeriod; }
            },
            jsonReader: { repeatitems: false, root: "rows", page: "page", total: "total", records: "records" },
            colNames: ["EmployeeNumber", "Employee Name", 'Salary Curr.', 'Salary Amount', 'Att. Factor', 'Vacation Pay', 'Processed Amount', 'Ex. Rate', 'Amount (Local Currency)', 'Add Incentive Amount', 'Less Advance Amount', 'Net Salary Amount', 'Cash Amount', 'Bank Amount'],
            colModel: [
                { name: "EmployeeNumber", width: '100', align: 'left', editable: false, hidden: true },
                { name: "EmployeeName", index: 'EmployeeName', width: '200', align: 'left', editable: false, sortable: true, },
                { name: "SalaryCurrency", index: 'SalaryCurrency', width: '50', align: 'left', editable: false, sortable: true, },
                { name: 'SalaryAmount', index: 'SalaryAmount', width: 80, align: "right", sorttype: "float", formatter: "number" },
                { name: 'AttendanceFactor', index: 'AttendanceFactor', width: 40, align: "right", sorttype: "float", formatter: "number" },
                { name: 'IsVacationPay', index: 'IsVacationPay', width: 50, align: 'center', edittype: "checkbox", formatter: 'checkbox', editoptions: { value: "true:false" } },
                { name: 'ProcessedAmount', index: 'ProcessedAmount', width: 80, align: "right", sorttype: "float", formatter: "number" },
                { name: 'ExchangeRate', index: 'ExchangeRate', width: 50, align: "right", },
                { name: 'AmountInLocalCurrency', index: 'AmountInLocalCurrency', width: 80, align: "right", sorttype: "float", formatter: "number" },
                { name: 'VariableIncentiveAmount', index: 'VariableIncentiveAmount', width: 70, align: "right", sorttype: "float", formatter: "number" },
                { name: 'AdvanceAmount', index: 'AdvanceAmount', width: 70, align: "right", sorttype: "float", formatter: "number" },
                { name: 'NetSalaryAmount', index: 'NetSalaryAmount', width: 80, align: "right", sorttype: "float", formatter: "number" },
                { name: 'CashAmount', index: 'CashAmount', width: 80, align: "right", sorttype: "float", formatter: "number", },
                { name: 'BankAmount', index: 'BankAmount', width: 80, align: "right", sorttype: "float", formatter: "number", },
            ],
            rowNum: 100000,
            loadonce: true,
            height: 'auto',
            scroll: false,
            width: '150',
            autowidth: false,
            shrinkToFit: false,
            forceFit: false,

        });

    });




</script>