using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using System.Net.Http;
using eSyaEnterprise_UI.Areas.eSyaUserManagement.Data;
using eSyaEnterprise_UI.Areas.eSyaUserManagement.Models;
using eSyaEnterprise_UI.Models;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Newtonsoft.Json;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Hosting;
using eSyaEnterprise_UI.Areas.Config.Models;
using eSyaEnterprise_UI.Utility;

namespace eSyaEnterprise_UI.Areas.eSyaUserManagement.Controllers
{
    public class UserController : Controller
    {
        ESyaUserMgmt_WebAPI _eSyaUMWebAPI = new ESyaUserMgmt_WebAPI();
        ESyaWebAPI _eSyaWebAPI = new ESyaWebAPI();

        private IHostingEnvironment _env;

        public UserController(IHostingEnvironment env)
        {
            _env = env;
        }


        [Area("eSyaUserManagement")]
        public IActionResult V_51_00()
        {
            ViewBag.formName = "User Group";
            return View();
        }

        [Area("eSyaUserManagement")]
        public IActionResult V_52_00()
        {
            ViewBag.formName = "User Management";
            return View();
        }

        [Area("eSyaUserManagement")]
        public IActionResult _UserCreation()
        {
            var client = _eSyaWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
            HttpResponseMessage mg_response = client.GetAsync("ConfigMasterData/GetApplicationCodesByCodeType?codeType=" + CodeTypeValues.PreferredLanguage).Result;
            string mgdata = mg_response.Content.ReadAsStringAsync().Result;
            List<DO_ApplicationCodes> plapp_codes = JsonConvert.DeserializeObject<List<DO_ApplicationCodes>>(mgdata);
            ViewBag.PLappcodes = plapp_codes;

            ViewBag.formName = "User Creation";
            return View();
        }

        /// <summary>
        ///Get User Master for Grid
        /// </summary>
        [HttpPost]
        public JsonResult GetUserMaster()
        {
            try
            {
                var client = _eSyaUMWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
                HttpResponseMessage response = client.GetAsync("UserCreation/GetUserMaster").Result;
                string stringData = response.Content.ReadAsStringAsync().Result;
                var data = JsonConvert.DeserializeObject<List<DO_UserMaster>>(stringData);
                return Json(data);
            }
            catch (Exception ex)
            {
                return Json(new DO_ReturnParameter() { Status = false, Message = (ex.InnerException != null) ? ex.InnerException.Message : ex.Message });
            }
        }

        /// <summary>
        /// Insert or Update Country Codes
        /// </summary>
        [HttpPost]
        public JsonResult InsertOrUpdateCountryCodes([FromBody] DO_UserMaster userMaster)
        {
            try
            {
                var client = _eSyaUMWebAPI.InitializeClient(HttpContext.RequestServices.GetRequiredService<IConfiguration>());
                userMaster.CreatedBy = AppSessionVariables.GetSessionUserID(HttpContext);
                userMaster.TerminalId = AppSessionVariables.GetIPAddress(HttpContext);
                if (userMaster.Isadd == 1)
                {

                    HttpResponseMessage Insertresponse = client.PostAsJsonAsync<DO_UserMaster>("UserCreation/InsertIntoUserMaster", userMaster).Result;
                    string resp = Insertresponse.Content.ReadAsStringAsync().Result;
                    var result = JsonConvert.DeserializeObject<DO_ReturnParameter>(resp);
                    return Json(result);
                }

                else
                {
                    HttpResponseMessage Updateresponse = client.PostAsJsonAsync<DO_UserMaster>("UserCreation/UpdateUserMaster", userMaster).Result;
                    string resp = Updateresponse.Content.ReadAsStringAsync().Result;
                    var result = JsonConvert.DeserializeObject<DO_ReturnParameter>(resp);
                    return Json(result);
                }
            }
            catch (Exception ex)
            {
                return Json(new { Status = false, Message = ex.InnerException == null ? ex.Message.ToString() : ex.InnerException.Message });
            }
        }
    }
}